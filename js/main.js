const soundWaveData = {
    "book0_start" : [0.00, 0.00, 0.01, 0.22, 0.24, 0.05, 0.61, 0.47, 0.27, 0.40, 0.39, 0.13, 0.41, 0.21, 0.09, 0.25, 0.13, 0.05, 0.02, 0.01, 0.10, 0.03, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.45, 0.19, 1.00, 0.61, 0.14, 0.40, 0.23, 0.12, 0.05, 0.66, 0.14, 0.30, 0.10, 0.15, 0.22, 0.04, 0.04, 0.28, 0.03, 0.30, 0.08, 0.10, 0.28, 0.32, 0.00, 0.09, 0.04, 0.11, 0.05, 0.04, 0.05, 0.09, 0.49, 0.03, 0.10, 0.10, 0.05, 0.04, 0.11, 0.18, 0.20, 0.22, 0.51, 0.08, 0.60, 0.05, 0.12, 0.10, 0.17, 0.13, 0.08, 0.05, 0.00, 0.18, 0.37, 0.70, 0.19, 0.20, 0.03, 0.04, 0.02, 0.02, 0.03, 0.05, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.18, 0.20, 0.27, 0.12, 0.01, 0.61, 0.23, 0.07, 0.27, 0.06, 0.77, 0.02, 0.77, 0.11, 0.20, 0.62, 0.38, 0.72, 0.44, 0.17, 0.01, 0.61, 0.98, 0.11, 0.18, 0.01, 0.01, 0.01, 0.02, 0.01, 0.09, 0.02, 0.32, 0.09, 0.08, 0.21, 0.34, 0.39, 0.05, 0.10, 0.16, 0.01, 0.39, 0.21, 0.05, 0.46, 0.48, 0.39, 0.13, 0.18, 0.07, 0.04, 0.02, 0.06, 0.11, 0.07, 0.22, 0.28, 0.11, 0.07, 0.01, 0.01, 0.11, 0.01, 0.23, 0.40, 0.05, 0.56, 0.28, 0.06, 0.26, 0.20, 0.05, 0.20, 0.20, 0.13, 0.20, 0.01, 0.03, 0.04, 0.00, 0.16, 0.27, 0.16, 0.03, 0.13, 0.23, 0.04, 0.19, 0.57, 0.06, 0.20, 0.39, 0.15, 0.30, 0.34, 0.24, 0.05, 0.19, 0.00, 0.02, 0.01, 0.08, 0.01, 0.03, 0.03, 0.04, 0.18, 0.27, 0.25, 0.09, 0.85, 0.25, 0.26, 0.22, 0.10, 0.29, 0.10, 0.29, 0.03, 0.06, 0.05, 0.04, 0.00, 0.01, 0.01, 0.01, 0.01, 0.01, 0.00, 0.00, 0.18, 0.67, 0.50, 0.28, 0.13, 0.02, 0.05, 0.25, 0.02, 0.75, 0.07, 0.02, 0.05, 0.06, 0.01, 0.22, 0.07, 0.17, 0.03, 0.07, 0.08, 0.04, 0.24, 0.22, 0.08, 0.05, 0.04, 0.07, 0.03, 0.03, 0.10, 0.04, 0.48, 0.14, 0.26, 0.48, 0.02, 0.04, 0.00, 0.43, 0.07, 0.56, 0.05, 0.16, 0.06, 0.07, 0.02, 0.03, 0.33, 0.20, 0.13, 0.14, 0.13, 0.14, 0.01, 0.07, 0.43, 0.08, 0.25, 0.03, 0.29, 0.56, 0.32, 0.12, 0.02, 0.05, 0.62, 0.17, 0.41, 0.27, 0.28, 0.19, 0.31, 0.41, 0.25, 0.42, 0.15, 0.05, 0.05, 0.07, 0.01, 0.03, 0.04, 0.21, 0.18, 0.14, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.21, 0.30, 0.06, 0.20, 0.17, 0.14, 0.05, 0.26, 0.25, 0.14, 0.06, 0.02, 0.09, 0.03, 0.00, 0.17, 0.29, 0.50, 0.16, 0.08, 0.10, 0.12, 0.26, 0.57, 0.11, 0.12, 0.12, 0.04, 0.01, 0.01, 0.00, 0.03, 0.26, 0.32, 0.24, 0.30, 0.10, 0.27, 0.01, 0.29, 0.32, 0.27, 0.07, 0.03, 0.02, 0.20, 0.85, 0.22, 0.21, 0.45, 0.15, 0.13, 0.46, 0.82, 0.28, 0.18, 0.27, 0.08, 0.03, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.03, 0.01, 0.26, 0.11, 0.46, 0.48, 0.33, 0.24, 0.14, 0.47, 0.64, 0.39, 0.03, 0.19, 0.13, 0.40, 0.13, 0.13, 0.01, 0.01, 0.02, 0.03, 0.06, 0.09, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.03, 0.41, 0.14, 0.05, 0.05, 0.04, 0.10, 0.22, 0.37, 0.30, 0.02, 0.01, 0.14, 0.29, 0.61, 0.32, 0.13, 0.08, 0.08, 0.15, 0.18, 0.06, 0.07, 0.02, 0.47, 0.03, 0.09, 0.31, 0.05, 0.19, 0.00, 0.18, 0.18, 0.01, 0.13, 0.15, 0.03, 0.17, 0.09, 0.45, 0.44, 0.07, 0.28, 0.30, 0.03, 0.05, 0.12, 0.02, 0.05, 0.00, 0.07, 0.03, 0.04, 0.01],
    "book0_right" : [0.00, 0.00, 0.00, 0.00, 0.03, 0.02, 0.27, 0.16, 0.56, 0.72, 0.86, 0.55, 0.37, 1.00, 0.49, 0.64, 0.61, 0.55, 0.60, 0.64, 0.15, 0.39, 0.58, 0.29, 0.17, 0.36, 0.43, 0.40, 0.09, 0.54, 0.54, 0.12, 0.64, 0.55, 0.23, 0.80, 0.31, 0.73, 0.01, 0.69, 0.39, 0.63, 0.50, 0.24, 0.85, 0.32, 0.63, 0.94, 0.77, 0.60, 0.44, 0.47, 0.35, 0.33, 0.29, 0.31, 0.21, 0.40, 0.34, 0.08, 0.21, 0.14, 0.06, 0.06, 0.01, 0.20, 0.16, 0.16, 0.21, 0.24, 0.01, 0.15, 0.04, 0.12, 0.23, 0.33, 0.14, 0.02, 0.00, 0.13, 0.19, 0.24, 0.00, 0.00, 0.09, 0.10, 0.17, 0.02, 0.12, 0.00, 0.08, 0.35, 0.18, 0.06, 0.10, 0.11, 0.28, 0.44, 0.19, 0.10, 0.20, 0.22, 0.29, 0.32, 0.28, 0.28, 0.35, 0.44, 0.15, 0.46, 0.32, 0.36, 0.13, 0.07, 0.06, 0.04, 0.21, 0.33, 0.36, 0.15, 0.46, 0.36, 0.15, 0.52, 0.07, 0.05, 0.15, 0.10, 0.17, 0.33, 0.06, 0.22, 0.05, 0.09, 0.26, 0.06, 0.20, 0.05, 0.03, 0.03, 0.27, 0.00, 0.05, 0.03, 0.01, 0.03, 0.01, 0.02, 0.00, 0.12, 0.05, 0.00, 0.03, 0.00, 0.05, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.03, 0.00, 0.06, 0.07, 0.04, 0.07, 0.10, 0.06, 0.01, 0.12, 0.03, 0.07, 0.19, 0.09, 0.27, 0.16, 0.41, 0.37, 0.50, 0.23, 0.33, 0.47, 0.35, 0.21, 0.47, 0.15, 0.33, 0.05, 0.09, 0.00, 0.08, 0.01, 0.02, 0.10, 0.06, 0.05, 0.08, 0.20, 0.20, 0.34, 0.34, 0.30, 0.35, 0.20, 0.49, 0.19, 0.26, 0.28, 0.33, 0.24, 0.25, 0.11, 0.30, 0.02, 0.06, 0.01, 0.10, 0.15, 0.03, 0.01, 0.06, 0.03, 0.04, 0.02, 0.05, 0.06, 0.07, 0.02, 0.05, 0.00, 0.02, 0.05, 0.01, 0.03, 0.03, 0.00, 0.00, 0.01, 0.01, 0.02, 0.01, 0.06, 0.04, 0.07, 0.03, 0.23, 0.26, 0.54, 0.34, 0.47, 0.03, 0.03, 0.03, 0.25, 0.32, 0.20, 0.24, 0.13, 0.11, 0.17, 0.05, 0.03, 0.01, 0.03, 0.03, 0.14, 0.23, 0.12, 0.01, 0.01, 0.53, 0.44, 0.25, 0.10, 0.12, 0.07, 0.00, 0.09, 0.01, 0.10, 0.08, 0.03, 0.11, 0.27, 0.40, 0.65, 0.35, 0.14, 0.33, 0.45, 0.67, 0.50, 0.56, 0.28, 0.14, 0.21, 0.49, 0.60, 0.65, 0.31, 0.13, 0.51, 0.45, 0.27, 0.13, 0.14, 0.01, 0.10, 0.03, 0.09, 0.00, 0.03, 0.06, 0.00, 0.01, 0.01, 0.08, 0.03, 0.05, 0.03, 0.02, 0.00, 0.02, 0.06, 0.05, 0.24, 0.26, 0.27, 0.14, 0.02, 0.16, 0.46, 0.68, 0.06, 0.03, 0.10, 0.11, 0.25, 0.11, 0.31, 0.27, 0.35, 0.24, 0.34, 0.20, 0.15, 0.08, 0.14, 0.23, 0.06, 0.43, 0.20, 0.28, 0.43, 0.41, 0.01, 0.31, 0.16, 0.15, 0.00, 0.08, 0.04, 0.11, 0.02, 0.06, 0.06, 0.07, 0.04, 0.37, 0.53, 0.51, 0.50, 0.48, 0.48, 0.62, 0.77, 0.87, 0.22, 0.52, 0.82, 0.56, 0.35, 0.36, 0.24, 0.19, 0.24, 0.21, 0.35, 0.53, 0.38, 0.40, 0.03, 0.06, 0.10, 0.03, 0.02, 0.14, 0.18, 0.20, 0.03, 0.26, 0.02, 0.32, 0.52, 0.22, 0.21, 0.23, 0.13, 0.05, 0.11, 0.01, 0.08, 0.07, 0.03, 0.26, 0.07, 0.36, 0.33, 0.01, 0.09, 0.07, 0.06, 0.08, 0.09, 0.09, 0.06, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book0_wrong1" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.01, 0.09, 0.15, 0.04, 0.02, 0.18, 0.03, 0.07, 0.05, 0.07, 0.02, 0.13, 0.05, 0.23, 0.01, 0.14, 0.09, 0.10, 0.14, 0.01, 0.02, 0.24, 0.46, 0.07, 0.09, 0.12, 0.07, 0.21, 0.21, 0.34, 0.53, 0.24, 0.11, 0.74, 0.41, 0.44, 0.25, 0.16, 0.01, 0.15, 0.16, 0.04, 0.03, 0.21, 0.02, 0.08, 0.07, 0.01, 0.09, 0.04, 0.04, 0.00, 0.03, 0.02, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.04, 0.05, 0.02, 0.05, 0.05, 0.16, 0.21, 0.23, 0.10, 0.07, 0.14, 0.19, 0.55, 0.57, 0.45, 0.53, 0.75, 0.11, 0.02, 0.05, 0.00, 0.22, 0.22, 0.07, 0.03, 0.09, 0.26, 0.15, 0.23, 0.05, 0.11, 0.10, 0.08, 0.11, 0.06, 0.17, 0.35, 0.46, 0.02, 0.46, 0.58, 0.55, 0.52, 0.42, 0.03, 0.59, 0.01, 0.15, 0.07, 0.27, 0.84, 0.50, 1.00, 0.99, 0.79, 0.10, 0.29, 0.59, 0.68, 0.48, 0.26, 0.17, 0.39, 0.03, 0.43, 0.02, 0.04, 0.06, 0.01, 0.05, 0.10, 0.14, 0.26, 0.16, 0.10, 0.10, 0.30, 0.10, 0.11, 0.07, 0.12, 0.03, 0.05, 0.00, 0.04, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.01, 0.02, 0.05, 0.02, 0.02, 0.12, 0.19, 0.17, 0.13, 0.07, 0.00, 0.03, 0.00, 0.17, 0.43, 0.12, 0.46, 0.26, 0.11, 0.19, 0.07, 0.10, 0.26, 0.28, 0.17, 0.11, 0.13, 0.02, 0.32, 0.18, 0.03, 0.08, 0.00, 0.01, 0.03, 0.02, 0.03, 0.02, 0.35, 0.34, 0.11, 0.07, 0.12, 0.60, 0.32, 0.70, 0.41, 0.24, 0.07, 0.44, 0.47, 0.65, 0.66, 0.56, 0.15, 0.07, 0.15, 0.13, 0.05, 0.14, 0.31, 0.30, 0.14, 0.07, 0.01, 0.02, 0.05, 0.04, 0.05, 0.01, 0.00, 0.03, 0.03, 0.04, 0.03, 0.02, 0.01, 0.01, 0.04, 0.07, 0.07, 0.03, 0.04, 0.12, 0.16, 0.14, 0.10, 0.08, 0.03, 0.05, 0.09, 0.04, 0.11, 0.05, 0.02, 0.05, 0.04, 0.02, 0.05, 0.03, 0.02, 0.05, 0.02, 0.04, 0.14, 0.23, 0.03, 0.44, 0.22, 0.31, 0.20, 0.01, 0.04, 0.12, 0.15, 0.00, 0.20, 0.20, 0.17, 0.04, 0.09, 0.60, 0.91, 0.19, 0.15, 0.04, 0.59, 0.66, 0.18, 0.80, 0.73, 0.54, 0.43, 0.14, 0.15, 0.34, 0.28, 0.05, 0.26, 0.26, 0.12, 0.08, 0.28, 0.03, 0.14, 0.10, 0.05, 0.01, 0.08, 0.01, 0.04, 0.02, 0.48, 0.25, 0.11, 0.01, 0.07, 0.11, 0.04, 0.09, 0.14, 0.05, 0.04, 0.02, 0.06, 0.05, 0.00, 0.66, 0.02, 0.39, 0.60, 0.37, 0.01, 0.08, 0.10, 0.02, 0.05, 0.07, 0.11, 0.16, 0.13, 0.06, 0.05, 0.05, 0.26, 0.49, 0.38, 0.07, 0.16, 0.38, 0.71, 0.29, 0.62, 0.33, 0.38, 0.29, 0.33, 0.47, 0.36, 0.17, 0.06, 0.07, 0.07, 0.20, 0.14, 0.20, 0.19, 0.27, 0.07, 0.11, 0.16, 0.29, 0.62, 0.40, 0.16, 0.13, 0.21, 0.12, 0.13, 0.15, 0.01, 0.20, 0.15, 0.07, 0.01, 0.03, 0.03, 0.04, 0.07, 0.07, 0.35, 0.24, 0.78, 0.39, 0.24, 0.19, 0.57, 0.96, 0.64, 0.66, 0.07, 0.44, 0.65, 0.56, 0.31, 0.08, 0.03, 0.00, 0.02, 0.00, 0.03, 0.01, 0.00, 0.00, 0.01, 0.04, 0.01, 0.03, 0.02, 0.01, 0.02, 0.03, 0.02, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00],
    "book0_wrong2" : [0.01, 0.04, 0.04, 0.01, 0.08, 0.08, 0.06, 0.07, 0.18, 0.43, 0.50, 0.60, 0.77, 0.21, 0.20, 0.68, 0.31, 0.43, 1.00, 0.64, 0.59, 0.55, 0.68, 0.33, 0.04, 0.47, 0.71, 0.24, 0.31, 0.04, 0.30, 0.50, 0.35, 0.16, 0.24, 0.13, 0.05, 0.04, 0.08, 0.10, 0.07, 0.04, 0.06, 0.10, 0.58, 0.66, 0.34, 0.36, 0.41, 0.25, 0.28, 0.33, 0.04, 0.21, 0.30, 0.06, 0.09, 0.23, 0.04, 0.16, 0.34, 0.02, 0.34, 0.23, 0.08, 0.03, 0.11, 0.11, 0.13, 0.10, 0.17, 0.02, 0.11, 0.09, 0.07, 0.05, 0.01, 0.22, 0.31, 0.22, 0.02, 0.05, 0.02, 0.36, 0.24, 0.09, 0.14, 0.04, 0.04, 0.10, 0.13, 0.13, 0.19, 0.20, 0.28, 0.03, 0.03, 0.20, 0.02, 0.05, 0.06, 0.02, 0.03, 0.03, 0.11, 0.15, 0.13, 0.04, 0.19, 0.03, 0.08, 0.16, 0.08, 0.10, 0.10, 0.10, 0.12, 0.06, 0.11, 0.13, 0.04, 0.06, 0.15, 0.15, 0.06, 0.01, 0.00, 0.31, 0.32, 0.04, 0.30, 0.05, 0.27, 0.09, 0.14, 0.75, 0.88, 0.03, 0.40, 0.57, 0.65, 0.50, 0.02, 0.78, 0.68, 0.09, 0.55, 0.59, 0.16, 0.26, 0.49, 0.05, 0.37, 0.39, 0.06, 0.41, 0.22, 0.13, 0.49, 0.42, 0.33, 0.30, 0.19, 0.21, 0.04, 0.24, 0.01, 0.10, 0.10, 0.10, 0.13, 0.22, 0.21, 0.30, 0.28, 0.52, 0.14, 1.00, 0.60, 0.54, 0.32, 0.34, 0.04, 0.14, 0.18, 0.07, 0.17, 0.12, 0.11, 0.09, 0.10, 0.23, 0.12, 0.28, 0.21, 0.15, 0.46, 0.02, 0.13, 0.25, 0.18, 0.24, 0.24, 0.01, 0.18, 0.14, 0.11, 0.06, 0.11, 0.13, 0.09, 0.18, 0.19, 0.03, 0.09, 0.21, 0.06, 0.20, 0.08, 0.26, 0.04, 0.01, 0.10, 0.29, 0.28, 0.14, 0.10, 0.29, 0.35, 0.45, 0.35, 0.36, 0.29, 0.04, 0.47, 0.60, 0.53, 0.50, 0.44, 0.32, 0.29, 0.27, 0.35, 0.34, 0.35, 0.02, 0.15, 0.08, 0.36, 0.38, 0.17, 0.04, 0.31, 0.32, 0.39, 0.11, 0.08, 0.13, 0.05, 0.12, 0.11, 0.05, 0.21, 0.06, 0.00, 0.09, 0.04, 0.04, 0.03, 0.04, 0.02, 0.00, 0.02, 0.02, 0.04, 0.01, 0.01, 0.02, 0.01, 0.01, 0.04, 0.03, 0.03, 0.04, 0.02, 0.02, 0.03, 0.00, 0.01, 0.06, 0.03, 0.01, 0.06, 0.04, 0.02, 0.06, 0.07, 0.07, 0.02, 0.03, 0.02, 0.02, 0.03, 0.15, 0.15, 0.01, 0.19, 0.25, 0.10, 0.21, 0.15, 0.10, 0.02, 0.27, 0.32, 0.49, 0.59, 0.29, 0.19, 0.40, 0.39, 0.21, 0.06, 0.12, 0.02, 0.14, 0.27, 0.35, 0.16, 0.08, 0.29, 0.71, 0.13, 0.16, 0.44, 0.37, 0.21, 0.07, 0.01, 0.06, 0.19, 0.39, 0.07, 0.25, 0.48, 0.11, 0.50, 0.15, 0.04, 0.51, 0.20, 0.40, 0.21, 0.09, 0.17, 0.05, 0.01, 0.07, 0.02, 0.21, 0.14, 0.22, 0.08, 0.03, 0.11, 0.06, 0.01, 0.02, 0.02, 0.01, 0.26, 0.44, 0.10, 0.22, 0.07, 0.32, 0.06, 0.12, 0.19, 0.15, 0.08, 0.06, 0.01, 0.04, 0.01, 0.02, 0.13, 0.00, 0.06, 0.10, 0.07, 0.00, 0.19, 0.03, 0.08, 0.08, 0.03, 0.02, 0.02, 0.03, 0.32, 0.12, 0.59, 0.62, 0.33, 0.13, 0.11, 0.04, 0.03, 0.05, 0.00, 0.14, 0.10, 0.19, 0.24, 0.58, 0.13, 0.12, 0.33, 0.02, 0.07, 0.23, 0.25, 0.09, 0.10, 0.15, 0.20, 0.09, 0.44, 0.04, 0.12, 0.09, 0.23, 0.17, 0.06, 0.11, 0.17, 0.14, 0.09, 0.10, 0.06, 0.07, 0.03, 0.03, 0.02, 0.01, 0.03, 0.04, 0.04, 0.03, 0.00, 0.06, 0.06, 0.12, 0.05, 0.04, 0.01, 0.03, 0.06, 0.02, 0.05, 0.00, 0.03, 0.03, 0.03, 0.04, 0.01, 0.06, 0.02, 0.03, 0.04, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book0_wrong3" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.04, 0.12, 0.46, 0.55, 0.42, 0.78, 0.75, 0.30, 0.22, 0.12, 0.37, 0.29, 0.11, 0.29, 0.06, 0.09, 0.05, 0.18, 0.01, 0.05, 0.08, 0.08, 0.04, 0.01, 0.08, 0.05, 0.03, 0.03, 0.05, 0.08, 0.03, 0.10, 0.25, 0.38, 0.44, 0.38, 0.31, 0.21, 0.20, 0.11, 0.11, 0.18, 0.01, 0.14, 0.23, 0.29, 0.11, 0.18, 0.04, 0.07, 0.12, 0.12, 0.14, 0.02, 0.02, 0.04, 0.13, 0.03, 0.00, 0.09, 0.10, 0.10, 0.02, 0.03, 0.03, 0.03, 0.01, 0.08, 0.43, 0.25, 0.15, 0.17, 0.23, 0.34, 0.00, 0.23, 0.41, 0.22, 0.14, 0.02, 0.05, 0.04, 0.06, 0.11, 0.16, 0.14, 0.37, 0.04, 0.48, 0.37, 0.11, 0.48, 0.90, 0.92, 0.77, 0.36, 0.02, 0.47, 0.75, 1.00, 1.00, 0.92, 0.10, 0.23, 0.07, 0.07, 0.01, 0.16, 0.33, 0.33, 0.44, 0.30, 0.37, 0.21, 0.24, 0.15, 0.23, 0.35, 0.62, 0.50, 0.15, 0.24, 0.25, 0.43, 0.43, 0.04, 0.13, 0.14, 0.52, 0.51, 0.12, 0.07, 0.01, 0.02, 0.04, 0.09, 0.06, 0.02, 0.07, 0.02, 0.01, 0.06, 0.03, 0.05, 0.13, 0.07, 0.01, 0.02, 0.04, 0.10, 0.05, 0.00, 0.05, 0.03, 0.02, 0.11, 0.08, 0.01, 0.08, 0.40, 0.14, 0.09, 0.03, 0.20, 0.01, 0.25, 0.20, 0.23, 0.67, 0.29, 0.19, 0.11, 0.03, 0.29, 0.13, 0.00, 0.07, 0.01, 0.01, 0.10, 0.02, 0.00, 0.09, 0.05, 0.00, 0.06, 0.05, 0.06, 0.12, 0.22, 0.33, 0.26, 0.03, 0.17, 0.04, 0.08, 0.21, 0.13, 0.32, 0.18, 0.23, 0.02, 0.07, 0.18, 0.49, 0.31, 0.19, 0.02, 0.15, 0.50, 0.12, 0.27, 0.40, 0.44, 0.53, 0.51, 0.50, 0.53, 0.47, 0.51, 0.56, 0.12, 0.37, 0.07, 0.23, 0.41, 0.04, 0.06, 0.26, 0.07, 0.10, 0.19, 0.10, 0.07, 0.02, 0.02, 0.26, 0.15, 0.12, 0.20, 0.22, 0.03, 0.07, 0.17, 0.07, 0.02, 0.01, 0.04, 0.01, 0.02, 0.03, 0.01, 0.03, 0.05, 0.07, 0.02, 0.03, 0.01, 0.02, 0.07, 0.13, 0.07, 0.00, 0.03, 0.02, 0.02, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.07, 0.02, 0.01, 0.15, 0.03, 0.29, 0.26, 0.14, 0.14, 0.10, 0.45, 0.36, 0.45, 0.22, 0.53, 0.37, 0.06, 0.42, 0.24, 0.09, 0.06, 0.27, 0.24, 0.01, 0.06, 0.01, 0.12, 0.00, 0.02, 0.11, 0.09, 0.09, 0.08, 0.10, 0.02, 0.04, 0.12, 0.01, 0.03, 0.02, 0.08, 0.00, 0.05, 0.17, 0.10, 0.11, 0.06, 0.31, 0.30, 0.21, 0.32, 0.33, 0.47, 0.19, 0.05, 0.38, 0.19, 0.03, 0.04, 0.07, 0.07, 0.28, 0.24, 0.05, 0.03, 0.12, 0.03, 0.13, 0.07, 0.03, 0.11, 0.06, 0.06, 0.19, 0.04, 0.02, 0.08, 0.24, 0.04, 0.33, 0.10, 0.29, 0.36, 0.41, 0.01, 0.34, 0.25, 0.18, 0.09, 0.07, 0.00, 0.03, 0.02, 0.02, 0.23, 0.14, 0.02, 0.04, 0.06, 0.05, 0.07, 0.24, 0.25, 0.18, 0.10, 0.29, 0.25, 0.33, 0.23, 0.04, 0.32, 0.34, 0.36, 0.20, 0.02, 0.21, 0.15, 0.19, 0.12, 0.10, 0.11, 0.15, 0.37, 0.24, 0.08, 0.26, 0.31, 0.48, 0.54, 0.53, 0.54, 0.18, 0.36, 0.44, 0.09, 0.30, 0.18, 0.40, 0.37, 0.20, 0.04, 0.06, 0.01, 0.03, 0.01, 0.02, 0.03, 0.02, 0.01, 0.03, 0.04, 0.02, 0.01, 0.01, 0.01, 0.02, 0.03, 0.03, 0.03, 0.05, 0.01, 0.12, 0.05, 0.01, 0.03, 0.02, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book1_start" : [0.01, 0.10, 0.34, 0.74, 0.66, 0.07, 0.41, 0.36, 0.26, 0.05, 0.04, 0.03, 0.09, 0.01, 0.32, 0.29, 0.01, 0.75, 0.08, 0.21, 0.13, 0.22, 0.43, 0.11, 0.15, 0.04, 0.42, 0.40, 0.44, 0.02, 0.46, 0.19, 0.29, 0.09, 0.01, 0.23, 0.93, 0.31, 0.86, 0.27, 0.39, 0.00, 0.17, 0.17, 0.41, 0.56, 0.17, 0.06, 0.01, 0.03, 0.03, 0.21, 0.81, 0.10, 0.16, 0.38, 0.10, 0.15, 0.09, 0.16, 0.05, 0.04, 0.05, 0.01, 0.05, 0.00, 0.05, 0.64, 0.23, 0.29, 0.03, 0.20, 0.05, 0.00, 0.01, 0.02, 0.02, 0.01, 0.04, 0.01, 0.03, 0.10, 0.15, 0.58, 0.16, 0.14, 0.47, 0.36, 0.67, 0.14, 0.06, 0.27, 0.44, 0.12, 0.59, 0.16, 0.38, 0.05, 0.02, 0.01, 0.01, 0.00, 0.01, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.17, 0.40, 0.24, 0.36, 0.11, 0.03, 0.40, 0.30, 0.11, 0.08, 0.21, 0.32, 0.37, 1.00, 0.09, 0.11, 0.13, 0.06, 0.31, 0.19, 0.25, 0.50, 0.29, 0.32, 0.03, 0.26, 0.06, 0.01, 0.02, 0.43, 0.67, 0.13, 0.02, 0.52, 0.24, 0.30, 0.11, 0.39, 0.11, 0.55, 0.04, 0.31, 0.33, 0.03, 0.11, 0.09, 0.01, 0.13, 0.38, 0.45, 0.43, 0.21, 0.23, 0.24, 0.07, 0.08, 0.15, 0.05, 0.47, 0.45, 0.17, 0.12, 0.19, 0.27, 0.14, 0.01, 0.26, 0.37, 0.28, 0.06, 0.07, 0.03, 0.02, 0.09, 0.14, 0.14, 0.11, 0.08, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.21, 0.50, 0.34, 0.03, 0.09, 0.16, 0.12, 0.09, 0.29, 0.61, 0.42, 0.24, 0.03, 0.43, 0.04, 0.06, 0.07, 0.05, 0.01, 0.00, 0.13, 0.35, 0.55, 0.39, 0.22, 0.38, 0.10, 0.20, 0.12, 0.02, 0.05, 0.50, 0.11, 0.30, 0.11, 0.04, 0.04, 0.13, 0.55, 0.32, 0.08, 0.19, 0.39, 0.21, 0.11, 0.00, 0.22, 0.10, 0.32, 0.06, 0.22, 0.21, 0.07, 0.08, 0.03, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.35, 0.25, 0.17, 0.36, 0.24, 0.36, 0.69, 0.71, 0.18, 0.13, 0.19, 0.42, 0.02, 0.24, 0.15, 0.22, 0.14, 0.04, 0.22, 0.04, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.30, 0.27, 0.23, 0.67, 0.06, 0.27, 0.17, 0.01, 0.03, 0.02, 0.15, 0.16, 0.61, 0.13, 0.47, 0.48, 0.78, 0.75, 0.03, 0.01, 0.40, 0.36, 0.02, 0.32, 0.27, 0.26, 0.10, 0.08, 0.23, 0.07, 0.00, 0.01, 0.02, 0.05, 0.61, 0.34, 0.00, 0.14, 0.00, 0.17, 0.13, 0.12, 0.00, 0.00, 0.00, 0.00, 0.09, 0.49, 0.90, 0.45, 0.95, 0.51, 0.14, 0.40, 0.11, 0.01, 0.08, 0.41, 0.21, 0.12, 0.24, 0.04, 0.12, 0.13, 0.26, 0.21, 0.02, 0.24, 0.23, 0.02, 0.46, 0.17, 0.24, 0.30, 0.38, 0.09, 0.37, 0.36, 0.01, 0.04, 0.27, 0.35, 0.06, 0.24, 0.02, 0.06, 0.12, 0.05, 0.10, 0.13, 0.01, 0.14, 0.49, 0.01, 0.18, 0.11, 0.03, 0.06, 0.18, 0.16, 0.07, 0.09, 0.01, 0.18, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.61, 0.21, 0.00, 0.26, 0.19, 0.20, 0.07, 0.58, 0.13, 0.33, 0.08, 0.13, 0.04, 0.14, 0.40, 0.63, 0.13, 0.30, 0.37, 0.66, 0.42, 0.16, 0.13, 0.15, 0.04, 0.37, 0.05, 0.02, 0.01, 0.02, 0.17, 0.34, 0.07, 0.43, 0.13, 0.22, 0.02, 0.30, 0.25, 0.33, 0.23, 0.07, 0.05, 0.40, 0.39, 0.10, 0.01, 0.02, 0.02, 0.00, 0.12, 0.18, 0.07, 0.07, 0.24, 0.41, 0.22, 0.48, 0.01, 0.07, 0.33, 0.19, 0.23, 0.03, 0.14, 0.25, 0.04, 0.03, 0.00, 0.01, 0.01, 0.00, 0.01, 0.01, 0.01, 0.01],
    "book1_right" : [0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.01, 0.00, 0.02, 0.03, 0.01, 0.02, 0.05, 0.03, 0.01, 0.01, 0.09, 0.17, 0.17, 0.53, 0.53, 0.24, 0.01, 0.17, 0.49, 0.63, 0.82, 0.13, 0.68, 0.38, 0.85, 1.00, 0.06, 0.19, 0.40, 0.34, 0.34, 0.15, 0.10, 0.12, 0.08, 0.13, 0.04, 0.04, 0.05, 0.06, 0.18, 0.27, 0.06, 0.09, 0.02, 0.08, 0.01, 0.01, 0.11, 0.14, 0.02, 0.00, 0.03, 0.06, 0.01, 0.06, 0.04, 0.12, 0.08, 0.04, 0.09, 0.11, 0.18, 0.24, 0.19, 0.06, 0.14, 0.04, 0.15, 0.00, 0.01, 0.08, 0.23, 0.08, 0.18, 0.63, 0.14, 0.06, 0.18, 0.28, 0.04, 0.14, 0.09, 0.16, 0.30, 0.18, 0.19, 0.14, 0.09, 0.04, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.04, 0.00, 0.00, 0.03, 0.00, 0.01, 0.01, 0.02, 0.01, 0.01, 0.03, 0.21, 0.41, 0.07, 0.77, 0.60, 0.12, 0.03, 0.23, 0.23, 0.20, 0.18, 0.02, 0.25, 0.21, 0.02, 0.05, 0.02, 0.06, 0.22, 0.10, 0.06, 0.04, 0.01, 0.03, 0.08, 0.07, 0.06, 0.02, 0.00, 0.01, 0.01, 0.01, 0.00, 0.03, 0.03, 0.00, 0.02, 0.02, 0.02, 0.02, 0.00, 0.04, 0.08, 0.07, 0.04, 0.02, 0.02, 0.01, 0.02, 0.02, 0.32, 0.19, 0.16, 0.05, 0.35, 0.15, 0.01, 0.26, 0.16, 0.32, 0.08, 0.15, 0.17, 0.21, 0.05, 0.02, 0.25, 0.02, 0.09, 0.02, 0.33, 0.03, 0.42, 0.02, 0.28, 0.08, 0.15, 0.12, 0.09, 0.06, 0.28, 0.14, 0.01, 0.03, 0.01, 0.02, 0.00, 0.13, 0.03, 0.33, 0.01, 0.18, 0.08, 0.20, 0.00, 0.37, 0.13, 0.05, 0.03, 0.01, 0.10, 0.31, 0.04, 0.00, 0.01, 0.00, 0.07, 0.22, 0.04, 0.03, 0.01, 0.00, 0.02, 0.21, 0.05, 0.00, 0.05, 0.05, 0.25, 0.00, 0.01, 0.03, 0.01, 0.10, 0.19, 0.13, 0.12, 0.09, 0.35, 0.02, 0.07, 0.28, 0.28, 0.09, 0.32, 0.16, 0.08, 0.24, 0.17, 0.08, 0.19, 0.04, 0.55, 0.05, 0.06, 0.10, 0.32, 0.02, 0.00, 0.09, 0.26, 0.03, 0.19, 0.22, 0.03, 0.28, 0.15, 0.01, 0.00, 0.03, 0.01, 0.06, 0.02, 0.04, 0.01, 0.01, 0.02, 0.01, 0.01, 0.02, 0.17, 0.16, 0.35, 0.66, 0.09, 0.04, 0.06, 0.05, 0.13, 0.09, 0.01, 0.02, 0.04, 0.15, 0.09, 0.02, 0.07, 0.02, 0.01, 0.05, 0.04, 0.35, 0.17, 0.07, 0.26, 0.23, 0.05, 0.29, 0.21, 0.08, 0.33, 0.26, 0.12, 0.43, 0.27, 0.15, 0.14, 0.02, 0.06, 0.06, 0.03, 0.11, 0.14, 0.00, 0.36, 0.06, 0.12, 0.19, 0.16, 0.05, 0.61, 0.29, 0.07, 0.04, 0.02, 0.01, 0.07, 0.03, 0.08, 0.21, 0.08, 0.01, 0.15, 0.30, 0.03, 0.29, 0.25, 0.01, 0.27, 0.27, 0.03, 0.24, 0.24, 0.07, 0.12, 0.20, 0.10, 0.14, 0.09, 0.37, 0.35, 0.07, 0.22, 0.26, 0.33, 0.23, 0.12, 0.11, 0.11, 0.12, 0.10, 0.06, 0.05, 0.03, 0.35, 0.11, 0.14, 0.19, 0.03, 0.21, 0.46, 0.00, 0.12, 0.05, 0.06, 0.03, 0.11, 0.12, 0.38, 0.07, 0.14, 0.15, 0.41, 0.49, 0.19, 0.07, 0.34, 0.04, 0.33, 0.01, 0.10, 0.11, 0.13, 0.21, 0.09, 0.11, 0.05, 0.03, 0.02, 0.00, 0.00, 0.04, 0.08, 0.18, 0.21, 0.06, 0.04, 0.27, 0.20, 0.03, 0.10, 0.02, 0.03, 0.00, 0.05, 0.05, 0.08, 0.00, 0.19, 0.15, 0.01, 0.29, 0.10, 0.12, 0.09, 0.23, 0.09, 0.09, 0.16, 0.46, 0.02, 0.36, 0.35, 0.04, 0.30, 0.34, 0.33, 0.21, 0.08, 0.14, 0.14, 0.13, 0.12, 0.13, 0.06, 0.18, 0.01, 0.08, 0.24, 0.25, 0.01, 0.22, 0.21, 0.03, 0.18, 0.28, 0.29, 0.20, 0.03, 0.10, 0.13, 0.07, 0.01, 0.02, 0.02, 0.03, 0.01, 0.01, 0.01, 0.01, 0.00, 0.00, 0.01, 0.01, 0.01, 0.00, 0.01, 0.00, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book1_wrong1" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.09, 0.04, 0.04, 0.29, 0.20, 0.12, 0.02, 0.69, 0.80, 0.00, 0.60, 0.41, 0.38, 0.18, 0.14, 0.11, 0.55, 0.59, 0.38, 0.34, 0.29, 0.23, 0.04, 0.10, 0.26, 0.23, 0.02, 0.03, 0.18, 0.09, 0.06, 0.02, 0.24, 0.24, 0.09, 0.04, 0.07, 0.02, 0.00, 0.02, 0.04, 0.05, 0.06, 0.06, 0.48, 0.42, 0.07, 0.38, 0.41, 0.10, 0.02, 0.05, 0.01, 0.02, 0.02, 0.00, 0.03, 0.03, 0.04, 0.01, 0.05, 0.23, 0.28, 0.04, 0.27, 0.23, 0.01, 0.03, 0.04, 0.03, 0.21, 0.27, 0.34, 0.19, 0.21, 0.15, 0.08, 0.06, 0.01, 0.05, 0.03, 0.00, 0.01, 0.01, 0.03, 0.07, 0.07, 0.00, 0.02, 0.11, 0.05, 0.01, 0.03, 0.01, 0.17, 0.57, 0.40, 0.63, 0.22, 0.12, 0.11, 0.06, 0.02, 0.02, 0.05, 0.03, 0.01, 0.01, 0.00, 0.02, 0.02, 0.13, 0.00, 0.25, 0.15, 0.10, 0.09, 0.02, 0.02, 0.03, 0.07, 0.24, 0.35, 1.00, 0.76, 0.43, 0.04, 0.04, 0.03, 0.02, 0.04, 0.03, 0.06, 0.03, 0.06, 0.04, 0.03, 0.06, 0.02, 0.04, 0.03, 0.22, 0.23, 0.34, 0.01, 0.07, 0.30, 0.21, 0.54, 0.34, 0.13, 0.01, 0.02, 0.03, 0.01, 0.04, 0.01, 0.06, 0.04, 0.02, 0.03, 0.09, 0.12, 0.10, 0.06, 0.07, 0.03, 0.01, 0.05, 0.27, 0.01, 0.03, 0.96, 0.42, 0.57, 0.25, 0.34, 0.36, 0.04, 0.03, 0.13, 0.06, 0.57, 0.06, 0.01, 0.09, 0.04, 0.12, 0.04, 0.05, 0.02, 0.08, 0.02, 0.13, 0.66, 0.26, 0.08, 0.70, 0.33, 0.06, 0.14, 0.54, 0.22, 0.27, 0.19, 0.00, 0.01, 0.04, 0.01, 0.02, 0.01, 0.00, 0.02, 0.14, 0.36, 0.09, 0.22, 0.61, 0.23, 0.05, 0.23, 0.64, 0.28, 0.43, 0.71, 0.06, 0.56, 0.48, 0.10, 0.30, 0.36, 0.34, 0.47, 0.22, 0.73, 0.48, 0.18, 0.13, 0.22, 0.75, 0.39, 0.08, 0.06, 0.17, 0.59, 0.61, 0.13, 0.21, 0.24, 0.00, 0.02, 0.02, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.02, 0.01, 0.36, 0.57, 0.43, 0.55, 0.34, 0.49, 0.43, 0.26, 0.19, 0.18, 0.00, 0.10, 0.13, 0.04, 0.01, 0.02, 0.09, 0.40, 0.00, 0.19, 0.42, 0.32, 0.24, 0.05, 0.08, 0.26, 0.13, 0.11, 0.07, 0.02, 0.03, 0.02, 0.01, 0.04, 0.02, 0.01, 0.02, 0.19, 0.31, 0.19, 0.20, 0.22, 0.23, 0.02, 0.12, 0.13, 0.26, 0.05, 0.15, 0.40, 0.29, 0.17, 0.33, 0.03, 0.06, 0.25, 0.41, 0.38, 0.26, 0.07, 0.11, 0.20, 0.08, 0.10, 0.06, 0.12, 0.18, 0.33, 0.02, 0.22, 0.32, 0.54, 0.20, 0.02, 0.33, 0.03, 0.01, 0.11, 0.07, 0.03, 0.05, 0.02, 0.10, 0.57, 0.77, 0.58, 0.71, 0.55, 0.23, 0.50, 0.36, 0.13, 0.37, 0.14, 0.56, 0.39, 0.16, 0.02, 0.19, 0.25, 0.02, 0.13, 0.22, 0.10, 0.31, 0.27, 0.00, 0.10, 0.31, 0.30, 0.44, 0.06, 0.16, 0.23, 0.08, 0.07, 0.02, 0.00, 0.01, 0.02, 0.21, 0.19, 0.07, 0.01, 0.12, 0.14, 0.12, 0.08, 0.04, 0.14, 0.02, 0.44, 0.02, 0.31, 0.12, 0.01, 0.01, 0.02, 0.03, 0.01, 0.03, 0.02, 0.01, 0.03, 0.14, 0.12, 0.01, 0.26, 0.23, 0.41, 0.46, 0.06, 0.06, 0.16, 0.07, 0.09, 0.04, 0.15, 0.06, 0.05, 0.11, 0.04, 0.03, 0.01, 0.01, 0.04, 0.02, 0.07, 0.06, 0.04, 0.04, 0.00, 0.01, 0.02, 0.05, 0.04, 0.02, 0.02, 0.02, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book1_wrong2" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.06, 0.07, 0.12, 0.21, 0.13, 0.50, 0.16, 0.43, 0.06, 0.00, 0.06, 0.24, 0.25, 0.51, 0.35, 0.54, 0.32, 0.50, 0.34, 0.08, 0.40, 0.25, 0.34, 0.25, 0.12, 0.28, 0.36, 0.33, 0.13, 0.32, 0.68, 0.53, 0.10, 0.74, 0.52, 0.15, 0.69, 0.37, 0.31, 0.52, 0.10, 0.12, 0.07, 0.09, 0.50, 0.30, 0.29, 0.37, 0.37, 0.41, 0.40, 0.33, 0.32, 0.22, 0.27, 0.25, 0.18, 0.01, 0.07, 0.10, 0.02, 0.04, 0.01, 0.01, 0.02, 0.03, 0.00, 0.01, 0.01, 0.01, 0.00, 0.02, 0.01, 0.01, 0.02, 0.06, 0.12, 0.27, 0.47, 0.44, 0.44, 0.21, 0.20, 0.33, 0.56, 0.88, 0.44, 0.23, 0.09, 0.51, 0.88, 0.34, 0.36, 0.42, 0.25, 0.99, 0.43, 0.09, 0.35, 0.13, 0.14, 0.09, 0.09, 0.18, 0.00, 0.14, 0.21, 0.07, 0.18, 0.12, 0.20, 0.21, 0.01, 0.33, 0.26, 0.02, 0.36, 0.39, 0.03, 0.44, 0.46, 0.05, 0.39, 0.34, 0.07, 0.28, 0.05, 0.14, 0.20, 0.09, 0.19, 0.13, 0.21, 0.25, 0.05, 0.14, 0.14, 0.24, 0.14, 0.13, 0.07, 0.52, 0.53, 0.09, 0.20, 0.16, 0.30, 0.07, 0.43, 0.42, 0.08, 0.12, 0.34, 0.43, 0.02, 0.58, 0.55, 0.02, 0.48, 0.51, 0.62, 0.55, 0.33, 0.16, 0.03, 0.03, 0.07, 0.18, 0.19, 0.12, 0.04, 0.02, 0.02, 0.02, 0.00, 0.01, 0.02, 0.03, 0.01, 0.07, 0.02, 0.03, 0.01, 0.06, 0.03, 0.03, 0.05, 0.05, 0.02, 0.03, 0.07, 0.00, 0.06, 0.01, 0.01, 0.06, 0.07, 0.05, 0.01, 0.08, 0.02, 0.01, 0.01, 0.02, 0.01, 0.05, 0.03, 0.01, 0.00, 0.04, 0.00, 0.07, 0.03, 0.20, 0.50, 0.29, 0.05, 0.08, 0.44, 0.71, 0.73, 1.00, 0.88, 0.84, 0.71, 0.75, 0.71, 0.78, 0.39, 0.22, 0.18, 0.32, 0.22, 0.48, 0.59, 0.35, 0.09, 0.35, 0.39, 0.08, 0.14, 0.06, 0.18, 0.11, 0.05, 0.10, 0.00, 0.00, 0.02, 0.01, 0.00, 0.09, 0.03, 0.06, 0.01, 0.01, 0.05, 0.23, 0.26, 0.48, 0.30, 0.08, 0.50, 0.44, 0.66, 0.47, 0.53, 0.35, 0.46, 0.31, 0.11, 0.01, 0.30, 0.42, 0.20, 0.54, 0.46, 0.12, 0.39, 0.25, 0.55, 0.30, 0.16, 0.48, 0.40, 0.09, 0.29, 0.14, 0.37, 0.18, 0.18, 0.56, 0.47, 0.10, 0.56, 0.30, 0.38, 0.29, 0.31, 0.75, 0.37, 0.58, 0.44, 0.27, 0.76, 0.48, 0.93, 0.55, 0.59, 0.42, 0.17, 0.06, 0.18, 0.45, 0.38, 0.61, 0.29, 0.43, 0.08, 0.28, 0.38, 0.74, 0.78, 0.40, 0.31, 0.02, 0.64, 0.94, 0.47, 0.08, 0.29, 0.36, 0.11, 0.18, 0.31, 0.01, 0.36, 0.46, 0.17, 0.17, 0.17, 0.08, 0.07, 0.19, 0.36, 0.06, 0.31, 0.40, 0.03, 0.42, 0.44, 0.04, 0.53, 0.46, 0.12, 0.10, 0.13, 0.34, 0.11, 0.22, 0.24, 0.10, 0.05, 0.08, 0.30, 0.28, 0.02, 0.08, 0.01, 0.05, 0.07, 0.03, 0.06, 0.01, 0.01, 0.02, 0.05, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03, 0.02, 0.04, 0.02, 0.03, 0.01, 0.01, 0.04, 0.02, 0.00, 0.03, 0.01, 0.03, 0.01, 0.01, 0.01, 0.01, 0.00, 0.02, 0.00, 0.03, 0.02, 0.04, 0.04, 0.02, 0.08, 0.12, 0.08, 0.02, 0.02, 0.02, 0.01, 0.02, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book1_wrong3" : [0.04, 0.08, 0.33, 0.22, 0.02, 0.92, 0.59, 0.83, 0.15, 0.02, 0.04, 0.06, 0.09, 0.31, 0.31, 0.21, 0.05, 0.28, 0.32, 0.21, 0.25, 0.00, 0.01, 0.15, 0.10, 0.04, 0.02, 0.15, 0.02, 0.02, 0.09, 0.12, 0.11, 0.10, 0.07, 0.01, 0.02, 0.06, 0.05, 0.09, 0.38, 0.25, 0.19, 0.30, 0.20, 0.12, 0.06, 0.09, 0.06, 0.08, 0.07, 0.04, 0.02, 0.06, 0.14, 0.01, 0.34, 0.14, 0.69, 0.78, 0.11, 0.24, 0.19, 0.26, 0.24, 0.15, 0.18, 0.57, 0.30, 0.21, 0.09, 0.04, 0.03, 0.16, 0.07, 0.13, 0.03, 0.47, 0.30, 0.54, 0.36, 0.27, 0.25, 0.33, 0.28, 0.31, 0.34, 0.15, 0.22, 0.09, 0.13, 0.42, 0.12, 0.09, 0.28, 0.20, 0.12, 0.01, 0.07, 0.00, 0.05, 0.02, 0.04, 0.02, 0.00, 0.02, 0.01, 0.00, 0.03, 0.03, 0.01, 0.06, 0.03, 0.04, 0.03, 0.01, 0.04, 0.03, 0.01, 0.01, 0.02, 0.01, 0.01, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.01, 0.00, 0.01, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.02, 0.03, 0.01, 0.10, 0.21, 0.42, 0.30, 0.44, 0.92, 0.86, 0.12, 0.06, 0.12, 0.09, 0.09, 0.16, 0.05, 0.32, 0.01, 0.07, 0.15, 0.05, 0.03, 0.17, 0.01, 0.19, 0.07, 0.00, 0.07, 0.01, 0.05, 0.04, 0.02, 0.02, 0.04, 0.01, 0.05, 0.11, 0.25, 0.88, 0.10, 0.54, 0.25, 0.43, 0.39, 0.04, 0.18, 0.32, 0.49, 0.20, 0.43, 0.40, 0.05, 0.26, 0.18, 0.12, 0.07, 0.03, 0.07, 0.02, 0.05, 0.03, 0.12, 0.06, 0.03, 0.19, 0.32, 0.35, 0.32, 0.20, 0.02, 0.08, 0.13, 0.37, 0.39, 0.03, 0.08, 0.44, 0.14, 0.51, 0.52, 0.29, 0.27, 0.27, 0.41, 0.27, 0.33, 0.08, 0.12, 0.11, 0.28, 0.20, 0.11, 0.12, 0.13, 0.08, 0.08, 0.08, 0.13, 0.12, 0.19, 0.12, 0.05, 0.08, 0.10, 0.09, 0.10, 0.11, 0.11, 0.11, 0.11, 0.10, 0.07, 0.08, 0.02, 0.06, 0.06, 0.06, 0.08, 0.04, 0.05, 0.14, 0.12, 0.45, 0.56, 0.46, 0.10, 0.66, 0.44, 0.14, 0.38, 0.30, 0.20, 0.08, 0.03, 0.01, 0.01, 0.00, 0.01, 0.03, 0.02, 0.00, 0.00, 0.01, 0.00, 0.15, 0.31, 0.01, 0.32, 0.15, 0.29, 0.16, 0.30, 0.32, 0.42, 0.74, 0.30, 0.20, 0.12, 0.05, 0.09, 0.15, 0.13, 0.14, 0.05, 0.04, 0.07, 0.08, 0.41, 0.40, 0.31, 0.25, 0.36, 0.06, 0.37, 0.04, 0.30, 0.22, 0.18, 0.04, 0.08, 0.13, 0.00, 0.03, 0.12, 0.11, 0.05, 0.08, 0.11, 0.01, 0.41, 0.66, 0.12, 0.37, 0.29, 0.13, 0.10, 0.06, 0.09, 0.00, 0.02, 0.03, 0.01, 0.00, 0.04, 0.06, 0.05, 0.02, 0.01, 0.05, 0.01, 0.00, 0.02, 0.08, 0.20, 0.21, 0.34, 0.01, 0.06, 0.14, 0.12, 0.01, 0.13, 0.04, 0.04, 0.12, 0.46, 0.14, 0.09, 0.03, 0.67, 0.95, 0.19, 0.21, 0.41, 0.09, 0.32, 0.01, 0.37, 0.47, 0.05, 0.08, 0.50, 0.58, 0.05, 0.34, 0.23, 0.12, 0.46, 0.44, 0.19, 0.57, 0.42, 0.12, 0.23, 0.31, 0.36, 0.22, 0.07, 0.05, 0.02, 0.08, 0.07, 0.01, 0.02, 0.00, 0.03, 0.01, 0.03, 0.03, 0.06, 0.06, 0.02, 0.05, 0.00, 0.02, 0.06, 0.41, 1.00, 0.00, 0.13, 0.17, 0.15, 0.01, 0.15, 0.25, 0.01, 0.02, 0.14, 0.28, 0.09, 0.20, 0.17, 0.10, 0.26, 0.03, 0.22, 0.23, 0.28, 0.29, 0.27, 0.36, 0.31, 0.39, 0.07, 0.02, 0.18, 0.10, 0.01, 0.03, 0.01, 0.01, 0.01, 0.02, 0.04, 0.04, 0.01, 0.01, 0.02, 0.01, 0.00, 0.00, 0.00, 0.04, 0.11, 0.05, 0.05, 0.13, 0.11, 0.09, 0.09, 0.46, 0.40, 0.10, 0.01, 0.22, 0.04, 0.09, 0.27, 0.06, 0.21, 0.08, 0.06, 0.02, 0.10, 0.09, 0.04, 0.00, 0.01, 0.00, 0.01, 0.01, 0.00],
    "book2_start" : [0.00, 0.00, 0.00, 0.00, 0.20, 0.02, 0.46, 0.53, 0.02, 0.78, 0.06, 0.40, 0.08, 0.49, 0.11, 0.03, 0.62, 0.24, 0.46, 0.01, 0.06, 0.57, 0.37, 0.47, 0.20, 0.52, 0.18, 0.32, 0.12, 0.05, 0.06, 0.14, 0.08, 0.43, 0.16, 0.46, 0.45, 0.17, 0.00, 0.15, 0.06, 0.13, 0.12, 0.41, 0.08, 0.52, 0.01, 0.13, 0.17, 0.03, 0.08, 0.12, 0.28, 0.22, 0.33, 0.14, 0.01, 0.10, 0.17, 0.16, 0.00, 0.18, 0.08, 0.26, 0.36, 0.02, 0.48, 0.61, 0.52, 0.73, 0.07, 0.12, 0.25, 0.68, 0.36, 0.48, 0.38, 1.00, 0.87, 0.21, 0.93, 0.10, 0.16, 0.20, 0.42, 0.26, 0.23, 0.01, 0.10, 0.01, 0.01, 0.01, 0.03, 0.03, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.26, 0.21, 0.51, 0.07, 0.21, 0.40, 0.13, 0.65, 0.41, 0.16, 0.53, 0.72, 0.35, 0.32, 0.07, 0.16, 0.82, 0.24, 0.21, 0.04, 0.03, 0.03, 0.07, 0.42, 0.31, 0.55, 0.07, 0.08, 0.86, 0.66, 0.40, 0.08, 0.06, 0.01, 0.01, 0.00, 0.38, 0.37, 0.69, 0.00, 0.44, 0.13, 0.39, 0.19, 0.14, 0.03, 0.02, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.12, 0.05, 0.34, 0.56, 0.05, 0.01, 0.07, 0.01, 0.05, 0.52, 0.76, 0.12, 0.07, 0.56, 0.28, 0.01, 0.44, 0.21, 0.26, 0.26, 0.03, 0.69, 0.16, 0.17, 0.58, 0.21, 0.03, 0.73, 0.15, 0.07, 0.42, 0.07, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.05, 0.08, 0.21, 0.13, 0.47, 0.51, 0.03, 0.10, 0.16, 0.47, 0.07, 0.45, 0.66, 0.74, 0.37, 0.30, 0.13, 0.40, 0.37, 0.27, 0.32, 0.03, 0.08, 0.01, 0.01, 0.00, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.54, 0.89, 0.23, 0.52, 0.18, 0.13, 0.04, 0.46, 0.08, 0.01, 0.37, 0.02, 0.51, 0.02, 0.14, 0.10, 0.39, 0.32, 0.67, 0.47, 0.46, 0.19, 0.01, 0.01, 0.18, 0.37, 0.39, 0.39, 0.38, 0.10, 0.51, 0.24, 0.46, 0.32, 0.13, 0.71, 0.07, 0.04, 0.11, 0.27, 0.28, 0.07, 0.04, 0.05, 0.17, 0.25, 0.40, 0.21, 0.04, 0.00, 0.00, 0.01, 0.02, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.14, 0.45, 0.53, 0.36, 0.10, 0.27, 0.04, 0.04, 0.01, 0.23, 0.47, 0.02, 0.22, 0.01, 0.05, 0.38, 0.23, 0.22, 0.37, 0.16, 0.04, 0.08, 0.21, 0.22, 0.42, 0.10, 0.02, 0.05, 0.03, 0.16, 0.60, 0.13, 0.25, 0.19, 0.12, 0.02, 0.00, 0.04, 0.00, 0.01, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.03, 0.02, 0.70, 0.34, 0.55, 0.08, 0.11, 0.14, 0.43, 0.41, 0.24, 0.02, 0.05, 0.12, 0.04, 0.22, 0.11, 0.66, 0.18, 0.28, 0.57, 0.70, 0.40, 0.52, 0.01, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.06, 0.06, 0.51, 0.16, 0.03, 0.40, 0.01, 0.00, 0.01, 0.06, 0.08, 0.07, 0.03, 0.24, 0.24, 0.35, 0.17, 0.70, 0.05, 0.02, 0.65, 0.11, 0.36, 0.48, 0.25, 0.12, 0.23, 0.52, 0.43, 0.01, 0.03, 0.01, 0.00, 0.01, 0.01, 0.33, 0.17, 0.15, 0.22, 0.44, 0.28, 0.25, 0.05, 0.06, 0.03, 0.03, 0.00, 0.35, 0.60, 0.16, 0.03, 0.02, 0.10, 0.05, 0.36, 0.03, 0.96, 0.53, 0.15, 0.09, 0.01, 0.24, 0.01, 0.01, 0.38, 0.05, 0.25, 0.40, 0.38, 0.00, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book2_right" : [0.00, 0.00, 0.01, 0.01, 0.03, 0.05, 0.04, 0.16, 0.24, 0.61, 0.14, 0.24, 0.57, 0.38, 0.01, 0.78, 0.40, 0.40, 0.83, 0.26, 0.33, 0.81, 0.34, 0.11, 0.26, 0.04, 0.33, 0.10, 0.16, 0.03, 0.08, 0.03, 0.49, 0.04, 0.03, 0.08, 0.33, 0.18, 0.19, 0.06, 0.07, 0.01, 0.12, 0.41, 0.09, 0.03, 0.25, 0.04, 0.23, 0.09, 0.22, 0.22, 0.23, 0.11, 0.13, 0.11, 0.27, 0.03, 0.03, 0.30, 0.44, 0.14, 0.11, 0.23, 0.45, 0.07, 0.01, 0.01, 0.05, 0.09, 0.05, 0.06, 0.02, 0.06, 0.37, 0.17, 0.35, 0.22, 0.14, 0.37, 0.07, 0.38, 0.05, 0.16, 0.00, 0.03, 0.09, 0.00, 0.01, 0.04, 0.07, 0.05, 0.37, 0.04, 0.21, 0.00, 0.38, 0.05, 0.07, 0.03, 0.00, 0.04, 0.08, 0.11, 0.02, 0.20, 0.16, 0.49, 0.63, 0.46, 0.16, 0.33, 0.21, 0.02, 0.07, 0.00, 0.03, 0.07, 0.04, 0.07, 0.05, 0.06, 0.00, 0.07, 0.11, 0.38, 0.34, 0.04, 0.05, 0.07, 0.43, 0.68, 0.03, 0.16, 0.19, 0.26, 0.64, 0.04, 0.05, 0.31, 0.41, 0.09, 0.28, 0.30, 0.01, 0.14, 0.11, 0.20, 0.61, 0.38, 0.33, 0.29, 0.25, 0.25, 0.09, 0.27, 0.78, 0.43, 0.21, 0.14, 0.30, 0.81, 0.38, 0.45, 0.49, 0.31, 1.00, 0.45, 0.29, 0.23, 0.38, 0.99, 0.55, 0.14, 0.19, 0.34, 0.88, 0.51, 0.23, 0.29, 0.32, 0.81, 0.45, 0.03, 0.03, 0.14, 0.11, 0.19, 0.10, 0.01, 0.24, 0.18, 0.35, 0.57, 0.53, 0.53, 0.22, 0.24, 0.35, 0.19, 0.19, 0.07, 0.25, 0.34, 0.36, 0.40, 0.10, 0.00, 0.13, 0.27, 0.34, 0.42, 0.35, 0.30, 0.18, 0.10, 0.02, 0.09, 0.06, 0.45, 0.18, 0.36, 0.49, 0.44, 0.87, 0.49, 0.11, 0.32, 0.31, 0.01, 0.57, 0.56, 0.08, 0.23, 0.11, 0.02, 0.06, 0.07, 0.06, 0.03, 0.05, 0.02, 0.02, 0.02, 0.00, 0.00, 0.01, 0.00, 0.01, 0.01, 0.02, 0.08, 0.35, 0.12, 0.18, 0.12, 0.07, 0.01, 0.28, 0.22, 0.43, 0.08, 0.07, 0.34, 0.13, 0.10, 0.06, 0.43, 0.33, 0.06, 0.13, 0.42, 0.52, 0.17, 0.37, 0.21, 0.53, 0.08, 0.48, 0.21, 0.05, 0.18, 0.11, 0.00, 0.04, 0.02, 0.00, 0.03, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.03, 0.03, 0.23, 0.06, 0.31, 0.06, 0.15, 0.08, 0.19, 0.54, 0.27, 0.06, 0.03, 0.31, 0.40, 0.39, 0.24, 0.21, 0.20, 0.18, 0.21, 0.23, 0.10, 0.04, 0.06, 0.13, 0.12, 0.22, 0.16, 0.55, 0.25, 0.34, 0.33, 0.11, 0.09, 0.08, 0.19, 0.45, 0.26, 0.11, 0.03, 0.16, 0.15, 0.29, 0.30, 0.32, 0.31, 0.27, 0.31, 0.32, 0.35, 0.36, 0.37, 0.11, 0.03, 0.22, 0.89, 0.75, 0.13, 0.04, 0.00, 0.11, 0.00, 0.11, 0.05, 0.04, 0.13, 0.05, 0.05, 0.00, 0.09, 0.08, 0.12, 0.01, 0.17, 0.13, 0.31, 0.10, 0.03, 0.42, 0.21, 0.28, 0.57, 0.26, 0.48, 0.75, 0.17, 0.24, 0.05, 0.43, 0.64, 0.40, 0.49, 0.16, 0.30, 0.07, 0.31, 0.27, 0.39, 0.54, 0.41, 0.40, 0.22, 0.31, 0.17, 0.13, 0.08, 0.09, 0.07, 0.06, 0.14, 0.14, 0.44, 0.64, 0.61, 0.78, 0.73, 0.77, 0.73, 0.58, 0.53, 0.28, 0.25, 0.13, 0.21, 0.28, 0.53, 0.51, 0.34, 0.14, 0.26, 0.26, 0.28, 0.30, 0.12, 0.10, 0.22, 0.06, 0.12, 0.04, 0.05, 0.00, 0.00, 0.02, 0.05, 0.09, 0.05, 0.02, 0.02, 0.01, 0.02, 0.01, 0.01, 0.00, 0.03, 0.02, 0.02, 0.02, 0.01, 0.01, 0.02, 0.01, 0.00, 0.01, 0.11, 0.18, 0.18, 0.16, 0.08, 0.02, 0.05, 0.01, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00],
    "book2_wrong1" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.02, 0.31, 0.03, 1.00, 0.82, 0.03, 0.44, 0.46, 0.75, 0.55, 0.57, 0.27, 0.44, 0.31, 0.05, 0.08, 0.16, 0.18, 0.17, 0.08, 0.37, 0.44, 0.01, 0.40, 0.46, 0.18, 0.21, 0.20, 0.69, 0.61, 0.02, 0.01, 0.32, 0.84, 0.56, 0.10, 0.05, 0.32, 0.61, 0.43, 0.89, 0.49, 0.07, 0.08, 0.10, 0.74, 0.52, 0.02, 0.04, 0.17, 0.69, 0.48, 0.06, 0.08, 0.23, 0.73, 0.48, 0.03, 0.07, 0.26, 0.40, 0.55, 0.73, 0.69, 0.63, 0.47, 0.30, 0.16, 0.01, 0.05, 0.03, 0.00, 0.01, 0.02, 0.03, 0.00, 0.00, 0.08, 0.01, 0.00, 0.03, 0.11, 0.80, 0.68, 0.08, 0.56, 0.46, 0.09, 0.02, 0.13, 0.38, 0.31, 0.15, 0.42, 0.42, 0.01, 0.16, 0.13, 0.59, 0.49, 0.07, 0.05, 0.19, 0.49, 0.42, 0.28, 0.17, 0.22, 0.11, 0.25, 0.55, 0.45, 0.51, 0.27, 0.27, 0.20, 0.14, 0.86, 0.64, 0.11, 0.18, 0.22, 0.11, 0.15, 0.05, 0.08, 0.08, 0.07, 0.02, 0.20, 0.33, 0.05, 0.40, 0.69, 0.18, 0.11, 0.27, 0.11, 0.50, 0.22, 0.05, 0.09, 0.23, 0.02, 0.23, 0.39, 0.05, 0.05, 0.06, 0.04, 0.13, 0.62, 0.15, 0.00, 0.01, 0.16, 0.49, 0.30, 0.11, 0.03, 0.05, 0.08, 0.12, 0.37, 0.44, 0.57, 0.59, 0.55, 0.56, 0.49, 0.71, 0.50, 0.69, 0.41, 0.48, 0.28, 0.44, 0.27, 0.43, 0.44, 0.42, 0.52, 0.64, 0.67, 0.45, 0.12, 0.15, 0.17, 0.09, 0.02, 0.05, 0.02, 0.17, 0.07, 0.22, 0.34, 0.41, 0.21, 0.24, 0.23, 0.21, 0.37, 0.43, 0.22, 0.29, 0.08, 0.08, 0.24, 0.30, 0.38, 0.46, 0.35, 0.47, 0.35, 0.39, 0.33, 0.37, 0.31, 0.30, 0.15, 0.12, 0.00, 0.01, 0.12, 0.00, 0.08, 0.24, 0.26, 0.31, 0.19, 0.07, 0.07, 0.08, 0.02, 0.04, 0.01, 0.03, 0.03, 0.00, 0.00, 0.01, 0.01, 0.00, 0.02, 0.15, 0.24, 0.69, 0.45, 0.64, 0.49, 0.55, 0.29, 0.34, 0.35, 0.52, 0.33, 0.34, 0.29, 0.07, 0.03, 0.14, 0.16, 0.09, 0.05, 0.06, 0.05, 0.02, 0.03, 0.03, 0.04, 0.00, 0.01, 0.00, 0.05, 0.26, 0.29, 0.74, 0.08, 0.19, 0.33, 0.53, 0.10, 0.23, 0.14, 0.33, 0.11, 0.10, 0.12, 0.01, 0.00, 0.01, 0.03, 0.00, 0.02, 0.00, 0.03, 0.00, 0.00, 0.00, 0.01, 0.00, 0.05, 0.02, 0.25, 0.23, 0.31, 0.43, 0.23, 0.83, 0.49, 0.06, 0.07, 0.21, 0.24, 0.37, 0.42, 0.43, 0.47, 0.45, 0.52, 0.39, 0.44, 0.36, 0.15, 0.05, 0.25, 0.34, 0.35, 0.15, 0.02, 0.12, 0.04, 0.01, 0.02, 0.02, 0.04, 0.11, 0.09, 0.16, 0.21, 0.32, 0.35, 0.36, 0.70, 0.48, 0.70, 0.46, 0.62, 0.47, 0.37, 0.50, 0.42, 0.36, 0.35, 0.31, 0.10, 0.71, 0.14, 0.48, 0.31, 0.04, 0.59, 0.57, 0.14, 0.26, 0.60, 0.53, 0.26, 0.50, 0.60, 0.63, 0.64, 0.52, 0.52, 0.56, 0.50, 0.57, 0.48, 0.67, 0.39, 0.80, 0.50, 0.13, 0.09, 0.24, 0.32, 0.27, 0.37, 0.33, 0.09, 0.54, 0.56, 0.01, 0.24, 0.31, 0.32, 0.22, 0.16, 0.15, 0.15, 0.14, 0.07, 0.05, 0.02, 0.13, 0.25, 0.37, 0.60, 0.64, 0.81, 0.77, 0.79, 0.87, 0.77, 0.75, 0.73, 0.49, 0.68, 0.49, 0.08, 0.14, 0.53, 0.82, 0.66, 0.36, 0.02, 0.42, 0.80, 0.79, 0.42, 0.19, 0.14, 0.68, 0.55, 0.08, 0.45, 0.69, 0.45, 0.08, 0.50, 0.70, 0.56, 0.05, 0.23, 0.35, 0.40, 0.16, 0.19, 0.25, 0.18, 0.27, 0.14, 0.06, 0.11, 0.06, 0.03, 0.03, 0.07, 0.11, 0.12, 0.07, 0.00, 0.02, 0.00, 0.00, 0.00, 0.03, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book2_wrong2" : [0.00, 0.00, 0.00, 0.00, 0.01, 0.09, 0.05, 0.08, 0.12, 0.11, 0.23, 0.02, 0.16, 0.03, 0.09, 0.05, 0.09, 0.11, 0.21, 0.43, 0.41, 0.01, 0.40, 0.28, 0.36, 0.32, 0.19, 0.00, 0.13, 0.30, 0.04, 0.07, 0.25, 0.18, 0.09, 0.00, 0.04, 0.12, 0.12, 0.16, 0.06, 0.31, 0.26, 0.44, 0.26, 0.23, 0.13, 0.29, 0.32, 0.36, 0.28, 0.14, 0.21, 0.08, 0.45, 0.48, 0.16, 0.08, 0.02, 0.02, 0.10, 0.06, 0.01, 0.00, 0.11, 0.05, 0.07, 0.11, 0.08, 0.13, 0.04, 0.23, 0.20, 0.05, 0.02, 0.08, 0.01, 0.14, 0.02, 0.14, 0.12, 0.00, 0.10, 0.02, 0.20, 0.35, 0.09, 0.03, 0.86, 0.59, 0.10, 0.09, 0.07, 0.02, 0.11, 0.02, 0.31, 0.37, 0.14, 0.38, 0.27, 0.32, 0.27, 0.15, 0.25, 0.29, 0.19, 0.15, 0.02, 0.09, 0.17, 0.14, 0.06, 0.08, 0.01, 0.03, 0.02, 0.04, 0.01, 0.02, 0.05, 0.23, 0.22, 0.37, 0.41, 0.14, 0.51, 0.49, 0.52, 0.38, 0.28, 0.05, 0.04, 0.40, 0.40, 0.55, 0.42, 0.21, 0.38, 0.54, 0.29, 0.43, 0.22, 0.36, 0.17, 0.31, 0.22, 0.05, 0.03, 0.02, 0.00, 0.05, 0.08, 0.14, 0.17, 0.12, 0.01, 0.06, 0.03, 0.03, 0.03, 0.08, 0.10, 0.08, 0.03, 0.01, 0.02, 0.02, 0.02, 0.05, 0.04, 0.00, 0.00, 0.02, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.00, 0.02, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.01, 0.02, 0.23, 0.31, 0.33, 0.62, 0.16, 0.63, 0.35, 0.03, 0.16, 0.02, 0.01, 0.02, 0.05, 0.18, 0.09, 0.01, 0.37, 0.51, 0.24, 0.31, 0.62, 0.20, 0.26, 0.60, 0.54, 0.37, 0.80, 0.77, 0.59, 0.62, 0.48, 0.45, 0.23, 0.11, 0.18, 0.12, 0.01, 0.06, 0.04, 0.00, 0.05, 0.02, 0.02, 0.00, 0.00, 0.03, 0.19, 0.21, 0.05, 0.28, 0.01, 0.15, 0.09, 0.02, 0.04, 0.01, 0.17, 0.22, 0.37, 0.22, 0.01, 0.36, 0.33, 0.07, 0.43, 0.39, 0.06, 0.43, 0.36, 0.05, 0.40, 0.40, 0.25, 0.16, 0.04, 0.10, 0.00, 0.05, 0.01, 0.00, 0.02, 0.05, 0.03, 0.00, 0.01, 0.02, 0.03, 0.02, 0.00, 0.01, 0.02, 0.04, 0.03, 0.01, 0.01, 0.02, 0.01, 0.01, 0.00, 0.00, 0.03, 0.04, 0.01, 0.02, 0.01, 0.07, 0.14, 0.14, 0.09, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.02, 0.06, 0.13, 0.08, 0.33, 0.35, 0.21, 0.09, 0.30, 0.24, 0.34, 0.26, 0.14, 0.03, 0.02, 0.03, 0.06, 0.03, 0.05, 0.01, 0.10, 0.07, 0.04, 0.08, 0.01, 0.03, 0.04, 0.02, 0.00, 0.00, 0.07, 0.33, 0.04, 0.18, 0.08, 0.05, 0.07, 0.22, 0.24, 0.05, 0.16, 0.46, 0.17, 0.18, 0.35, 0.12, 0.32, 0.37, 0.16, 0.25, 0.31, 0.45, 0.65, 1.00, 0.97, 0.56, 0.30, 0.18, 0.03, 0.00, 0.07, 0.08, 0.03, 0.01, 0.10, 0.12, 0.09, 0.11, 0.00, 0.01, 0.05, 0.09, 0.06, 0.02, 0.00, 0.00, 0.00, 0.01, 0.01, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book2_wrong3" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.08, 0.07, 0.31, 0.87, 0.47, 0.05, 0.35, 0.70, 0.13, 0.23, 0.10, 0.09, 0.20, 0.09, 0.28, 0.44, 0.26, 0.16, 0.50, 0.33, 0.05, 0.26, 0.19, 0.02, 0.17, 0.03, 0.16, 0.01, 0.32, 0.35, 0.08, 0.36, 0.31, 0.03, 0.13, 0.15, 0.41, 0.14, 0.40, 0.31, 0.17, 0.35, 0.07, 0.19, 0.06, 0.13, 0.10, 0.03, 0.05, 0.02, 0.02, 0.04, 0.01, 0.06, 0.10, 0.12, 0.06, 0.09, 0.07, 0.18, 0.02, 0.50, 0.32, 0.30, 0.00, 0.15, 0.30, 0.27, 0.26, 0.60, 0.71, 0.14, 0.21, 0.19, 0.55, 0.65, 0.01, 0.18, 0.15, 0.45, 0.61, 0.11, 0.07, 0.16, 0.23, 0.20, 0.33, 0.44, 0.36, 0.45, 0.10, 0.13, 0.21, 0.23, 0.22, 0.46, 0.55, 0.19, 0.21, 0.02, 0.38, 0.46, 0.22, 0.09, 0.29, 0.24, 0.05, 0.45, 0.48, 0.14, 0.19, 0.21, 0.04, 0.04, 0.47, 0.56, 0.18, 0.77, 0.63, 0.47, 1.00, 0.49, 0.49, 0.76, 0.32, 0.37, 0.65, 0.43, 0.23, 0.69, 0.57, 0.05, 0.38, 0.28, 0.21, 0.17, 0.23, 0.39, 0.18, 0.40, 0.55, 0.16, 0.01, 0.41, 0.64, 0.37, 0.03, 0.06, 0.42, 0.46, 0.05, 0.25, 0.07, 0.06, 0.36, 0.51, 0.24, 0.58, 0.44, 0.01, 0.55, 0.50, 0.11, 0.38, 0.15, 0.23, 0.10, 0.35, 0.45, 0.15, 0.19, 0.08, 0.13, 0.11, 0.33, 0.42, 0.16, 0.62, 0.34, 0.32, 0.64, 0.40, 0.31, 0.79, 0.48, 0.43, 0.86, 0.52, 0.40, 0.85, 0.56, 0.25, 0.67, 0.60, 0.03, 0.47, 0.66, 0.32, 0.30, 0.65, 0.48, 0.02, 0.34, 0.32, 0.10, 0.05, 0.10, 0.06, 0.04, 0.00, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.07, 0.31, 0.48, 0.78, 0.85, 0.07, 0.31, 0.23, 0.06, 0.24, 0.30, 0.38, 0.63, 0.29, 0.64, 0.86, 0.18, 0.27, 0.26, 0.36, 0.45, 0.34, 0.72, 0.92, 0.13, 0.26, 0.28, 0.27, 0.36, 0.35, 0.53, 0.76, 0.27, 0.59, 0.71, 0.20, 0.18, 0.32, 0.29, 0.11, 0.04, 0.22, 0.23, 0.08, 0.23, 0.21, 0.02, 0.22, 0.14, 0.44, 0.50, 0.10, 0.53, 0.59, 0.11, 0.02, 0.27, 0.56, 0.21, 0.53, 0.48, 0.20, 0.38, 0.18, 0.37, 0.13, 0.37, 0.01, 0.20, 0.01, 0.05, 0.02, 0.00, 0.02, 0.00, 0.05, 0.06, 0.13, 0.48, 0.24, 0.33, 0.33, 0.48, 0.17, 0.30, 0.29, 0.07, 0.32, 0.56, 0.12, 0.35, 0.29, 0.09, 0.37, 0.27, 0.21, 0.40, 0.19, 0.26, 0.09, 0.21, 0.35, 0.16, 0.45, 0.70, 0.26, 0.29, 0.29, 0.11, 0.04, 0.34, 0.46, 0.01, 0.38, 0.38, 0.09, 0.11, 0.24, 0.29, 0.17, 0.23, 0.42, 0.34, 0.20, 0.52, 0.42, 0.15, 0.51, 0.47, 0.02, 0.30, 0.26, 0.02, 0.09, 0.20, 0.38, 0.23, 0.25, 0.42, 0.13, 0.05, 0.33, 0.73, 0.36, 0.52, 0.71, 0.00, 0.35, 0.13, 0.26, 0.05, 0.38, 0.43, 0.07, 0.30, 0.36, 0.02, 0.13, 0.16, 0.32, 0.07, 0.41, 0.12, 0.09, 0.13, 0.07, 0.10, 0.22, 0.34, 0.04, 0.32, 0.12, 0.11, 0.06, 0.25, 0.22, 0.04, 0.04, 0.30, 0.28, 0.15, 0.03, 0.46, 0.28, 0.20, 0.12, 0.33, 0.10, 0.56, 0.12, 0.17, 0.16, 0.38, 0.37, 0.31, 0.09, 0.11, 0.17, 0.02, 0.10, 0.02, 0.07, 0.04, 0.03, 0.04, 0.04, 0.02, 0.04, 0.01, 0.02, 0.00, 0.03, 0.02, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book3_start" : [0.00, 0.00, 0.01, 0.58, 0.29, 0.30, 0.56, 0.66, 0.50, 0.09, 0.25, 0.22, 0.11, 0.34, 0.16, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.04, 0.16, 0.18, 0.41, 0.99, 0.21, 0.60, 0.04, 0.26, 0.32, 0.16, 0.08, 0.03, 0.04, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.34, 0.70, 0.42, 0.26, 0.02, 0.65, 0.80, 0.21, 0.33, 0.00, 0.01, 0.20, 0.24, 0.66, 0.79, 0.55, 0.23, 0.83, 0.28, 0.52, 0.72, 0.36, 0.22, 0.47, 0.14, 0.37, 0.52, 0.76, 0.14, 0.05, 0.23, 0.34, 0.39, 0.01, 0.11, 1.00, 0.50, 0.15, 0.03, 0.08, 0.41, 0.16, 0.22, 0.01, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.02, 0.29, 0.53, 0.03, 0.22, 0.26, 0.30, 0.02, 0.01, 0.17, 0.23, 0.24, 0.31, 0.04, 0.34, 0.27, 0.12, 0.03, 0.01, 0.09, 0.08, 0.08, 0.34, 0.00, 0.01, 0.11, 0.23, 0.18, 0.54, 0.18, 0.06, 0.06, 0.58, 0.36, 0.64, 0.20, 0.19, 0.23, 0.07, 0.27, 0.28, 0.03, 0.86, 0.61, 0.89, 0.68, 0.39, 0.25, 0.34, 0.34, 0.36, 0.17, 0.30, 0.10, 0.13, 0.10, 0.38, 0.03, 0.90, 0.06, 0.05, 0.30, 0.24, 0.02, 0.01, 0.00, 0.07, 0.46, 0.07, 0.07, 0.05, 0.02, 0.04, 0.01, 0.00, 0.01, 0.01, 0.21, 0.13, 0.06, 0.16, 0.03, 0.18, 0.12, 0.73, 0.12, 0.04, 0.16, 0.13, 0.04, 0.11, 0.29, 0.18, 0.06, 0.22, 0.16, 0.52, 0.49, 0.34, 0.10, 0.29, 0.14, 0.40, 0.24, 0.41, 0.16, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.89, 0.61, 0.23, 0.24, 0.01, 0.34, 0.50, 0.14, 0.19, 0.10, 0.31, 0.04, 0.21, 0.40, 0.13, 0.16, 0.03, 0.35, 0.12, 0.16, 0.49, 0.28, 0.37, 0.32, 0.20, 0.72, 0.50, 0.38, 0.10, 0.00, 0.19, 0.01, 0.08, 0.10, 0.07, 0.29, 0.07, 0.09, 0.06, 0.11, 0.19, 0.30, 0.30, 0.40, 0.10, 0.38, 0.20, 0.03, 0.01, 0.03, 0.01, 0.02, 0.03, 0.06, 0.02, 0.00, 0.02, 0.01, 0.01, 0.00, 0.12, 0.37, 0.08, 0.17, 0.86, 0.29, 0.36, 0.06, 0.08, 0.31, 0.22, 0.25, 0.47, 0.01, 0.02, 0.03, 0.04, 0.17, 0.01, 0.95, 0.28, 0.11, 0.06, 0.47, 0.02, 0.11, 0.09, 0.26, 0.10, 0.01, 0.01, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.06, 0.78, 0.02, 0.12, 0.66, 0.13, 0.27, 0.53, 0.18, 0.21, 0.43, 0.40, 0.86, 0.24, 0.24, 0.03, 0.43, 0.25, 0.00, 0.43, 0.20, 0.09, 0.34, 0.09, 0.10, 0.02, 0.33, 0.02, 0.03, 0.05, 0.01, 0.00, 0.00, 0.00, 0.00, 0.06, 0.17, 0.03, 0.06, 0.00, 0.09, 0.19, 0.28, 0.21, 0.17, 0.36, 0.24, 0.37, 0.45, 0.27, 0.06, 0.13, 0.14, 0.39, 0.20, 0.04, 0.01, 0.11, 0.53, 0.29, 0.03, 0.16, 0.02, 0.00, 0.10, 0.16, 0.02, 0.01, 0.03, 0.03, 0.93, 0.11, 0.01, 0.01, 0.01, 0.03, 0.53, 0.23, 0.73, 0.00, 0.10, 0.14, 0.02, 0.02, 0.10, 0.06, 0.07, 0.01, 0.04, 0.24, 0.03, 0.18, 0.10, 0.04, 0.01, 0.06, 0.01, 0.07, 0.01, 0.03, 0.13, 0.01, 0.07, 0.08, 0.10, 0.01, 0.01, 0.41, 0.15, 0.08, 0.07, 0.13, 0.22, 0.01, 0.09, 0.07, 0.04, 0.01, 0.03, 0.28, 0.06, 0.12, 0.07, 0.09, 0.07, 0.18, 0.02, 0.05, 0.11, 0.26, 0.26, 0.05, 0.18, 0.28, 0.33, 0.13, 0.00, 0.00, 0.06, 0.03, 0.11, 0.12, 0.11, 0.28, 0.05, 0.13, 0.02, 0.07, 0.00, 0.22, 0.12, 0.05, 0.19, 0.16, 0.07, 0.01, 0.00, 0.23, 0.02, 0.15, 0.20, 0.13, 0.15, 0.03, 0.03, 0.01, 0.12, 0.25, 0.24, 0.51, 0.70, 0.08, 0.01, 0.02, 0.19, 0.15, 0.00, 0.03, 0.04, 0.12, 0.09, 0.15, 0.22, 0.05, 0.13, 0.12, 0.05, 0.22, 0.13, 0.15],
    "book3_right" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.02, 0.34, 0.80, 0.87, 0.37, 0.10, 0.24, 0.34, 0.25, 0.37, 0.17, 0.23, 0.17, 0.39, 0.13, 0.08, 0.02, 0.15, 0.07, 0.16, 0.05, 0.01, 0.00, 0.06, 0.70, 0.21, 0.15, 0.11, 0.63, 0.34, 0.09, 0.22, 0.17, 0.06, 0.02, 0.02, 0.06, 0.07, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.22, 0.41, 0.55, 0.03, 0.21, 0.11, 0.17, 0.16, 0.14, 0.09, 0.17, 0.05, 0.11, 0.01, 0.03, 0.03, 0.01, 0.05, 0.10, 0.01, 0.02, 0.18, 0.28, 0.10, 0.52, 0.11, 0.01, 0.01, 0.06, 0.08, 0.12, 0.23, 0.42, 0.32, 0.12, 0.03, 0.00, 0.05, 0.02, 0.06, 0.44, 0.38, 0.44, 0.33, 0.13, 0.09, 0.12, 0.53, 0.27, 0.06, 0.01, 0.12, 0.09, 0.04, 0.07, 0.63, 0.34, 0.30, 0.35, 0.22, 0.03, 0.02, 0.05, 0.02, 0.06, 0.08, 0.01, 0.02, 0.06, 0.05, 0.04, 0.01, 0.02, 0.00, 0.00, 0.01, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.06, 0.09, 0.05, 0.16, 0.74, 0.89, 0.71, 0.70, 0.42, 0.40, 0.54, 0.03, 0.64, 0.25, 0.15, 0.55, 0.14, 0.18, 0.26, 0.40, 0.24, 0.11, 0.03, 0.01, 0.20, 0.28, 0.02, 0.19, 0.21, 0.06, 0.00, 0.02, 0.01, 0.00, 0.01, 0.06, 0.23, 0.46, 0.25, 0.07, 0.51, 0.11, 0.08, 0.06, 0.43, 0.20, 0.03, 0.23, 0.31, 0.26, 0.04, 0.39, 0.31, 0.01, 0.04, 0.05, 0.03, 0.04, 0.11, 0.08, 0.03, 0.14, 0.17, 0.04, 0.17, 0.15, 0.05, 0.01, 0.00, 0.14, 0.16, 0.10, 0.05, 0.06, 0.04, 0.11, 0.28, 0.10, 0.01, 0.05, 0.22, 0.04, 0.02, 0.05, 0.03, 0.12, 0.13, 0.03, 0.07, 0.03, 0.03, 0.09, 0.05, 0.05, 0.00, 0.04, 0.40, 0.04, 0.47, 0.09, 0.03, 0.06, 0.07, 0.04, 0.05, 0.13, 0.04, 0.10, 0.15, 0.02, 0.01, 0.05, 0.07, 0.24, 0.07, 0.33, 0.44, 0.22, 0.10, 0.07, 0.13, 0.15, 0.09, 0.04, 0.02, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.09, 0.15, 0.17, 0.23, 0.33, 0.11, 0.18, 0.63, 0.35, 0.06, 0.59, 0.30, 0.02, 0.07, 0.16, 0.04, 0.22, 0.05, 0.02, 0.20, 0.08, 0.03, 0.05, 0.18, 0.03, 0.03, 0.09, 0.09, 0.02, 0.16, 0.08, 0.04, 0.01, 0.32, 0.05, 0.07, 0.01, 0.00, 0.07, 0.17, 0.07, 0.14, 0.21, 0.13, 0.04, 0.08, 0.13, 0.16, 0.14, 0.08, 0.03, 0.34, 0.13, 0.04, 0.02, 0.04, 0.02, 0.01, 0.01, 0.24, 0.55, 0.13, 0.14, 0.16, 0.30, 0.32, 0.15, 0.34, 0.04, 0.27, 0.00, 0.43, 0.19, 0.05, 0.24, 0.16, 0.04, 0.08, 0.06, 0.06, 0.02, 0.04, 0.02, 0.08, 0.00, 0.00, 0.05, 0.00, 0.55, 1.00, 0.67, 0.34, 0.23, 0.25, 0.08, 0.24, 0.22, 0.04, 0.45, 0.28, 0.08, 0.29, 0.14, 0.15, 0.06, 0.10, 0.05, 0.00, 0.07, 0.09, 0.11, 0.02, 0.13, 0.04, 0.14, 0.01, 0.12, 0.06, 0.21, 0.02, 0.24, 0.13, 0.37, 0.34, 0.09, 0.25, 0.14, 0.04, 0.00, 0.06, 0.02, 0.03, 0.01, 0.10, 0.11, 0.03, 0.02, 0.24, 0.04, 0.06, 0.13, 0.02, 0.01, 0.16, 0.09, 0.01, 0.20, 0.06, 0.09, 0.07, 0.09, 0.07, 0.03, 0.02, 0.06, 0.06, 0.05, 0.01, 0.12, 0.06, 0.06, 0.07, 0.19, 0.27, 0.21, 0.08, 0.15, 0.20, 0.22, 0.19, 0.10, 0.05, 0.00, 0.01, 0.01, 0.00, 0.00, 0.01, 0.00],
    "book3_wrong1" : [0.00, 0.00, 0.00, 0.01, 0.03, 0.01, 0.05, 0.08, 0.01, 0.10, 0.09, 0.05, 0.14, 0.07, 0.07, 0.06, 0.14, 0.13, 0.05, 0.08, 0.32, 0.13, 0.16, 0.24, 0.01, 0.14, 0.01, 0.23, 0.07, 0.11, 0.28, 0.11, 0.09, 0.13, 0.11, 0.04, 0.01, 0.17, 0.25, 0.07, 0.13, 0.04, 0.18, 0.17, 0.06, 0.06, 0.25, 0.10, 0.01, 0.12, 0.02, 0.08, 0.18, 0.20, 0.08, 0.10, 0.10, 0.04, 0.13, 0.07, 0.00, 0.01, 0.03, 0.02, 0.05, 0.01, 0.04, 0.10, 0.09, 0.05, 0.14, 0.12, 0.09, 0.10, 0.07, 0.10, 0.11, 0.03, 0.07, 0.13, 0.04, 0.09, 0.02, 0.05, 0.11, 0.14, 0.05, 0.01, 0.03, 0.05, 0.10, 0.02, 0.11, 0.07, 0.10, 0.17, 0.07, 0.06, 0.01, 0.11, 0.02, 0.06, 0.01, 0.07, 0.04, 0.02, 0.03, 0.05, 0.01, 0.02, 0.03, 0.01, 0.02, 0.01, 0.02, 0.01, 0.02, 0.25, 0.11, 0.10, 0.00, 0.03, 0.02, 0.02, 0.05, 0.04, 0.06, 0.09, 0.14, 0.08, 0.05, 0.02, 0.02, 0.02, 0.02, 0.06, 0.01, 0.03, 0.05, 0.02, 0.01, 0.04, 0.05, 0.01, 0.02, 0.04, 0.02, 0.01, 0.00, 0.09, 0.17, 0.38, 0.28, 0.45, 0.46, 0.33, 0.06, 0.13, 0.02, 0.06, 0.03, 0.05, 0.11, 0.05, 0.02, 0.04, 0.01, 0.05, 0.04, 0.03, 0.05, 0.04, 0.02, 0.03, 0.02, 0.01, 0.02, 0.02, 0.05, 0.01, 0.16, 0.13, 0.32, 0.13, 0.14, 0.17, 0.17, 0.12, 0.21, 0.19, 0.46, 0.23, 0.20, 0.00, 0.23, 0.02, 0.19, 0.26, 0.20, 0.16, 0.17, 0.19, 0.05, 0.04, 0.09, 0.12, 0.41, 0.36, 0.09, 0.11, 0.33, 0.51, 0.53, 0.12, 0.16, 0.14, 0.19, 0.11, 0.14, 0.09, 0.10, 0.29, 0.17, 0.07, 0.11, 0.05, 0.03, 0.20, 0.14, 0.02, 0.28, 0.01, 0.36, 0.31, 0.12, 0.38, 0.19, 0.16, 0.14, 0.00, 0.22, 0.07, 0.22, 0.08, 0.12, 0.16, 0.13, 0.13, 0.21, 0.02, 0.10, 0.05, 0.03, 0.08, 0.16, 0.37, 0.13, 0.55, 0.24, 0.25, 0.25, 0.33, 0.18, 0.13, 0.02, 0.45, 0.76, 0.62, 0.22, 0.37, 0.11, 0.09, 0.01, 0.02, 0.13, 0.15, 0.13, 0.04, 0.17, 0.04, 0.23, 0.23, 0.45, 0.09, 0.06, 0.01, 0.37, 0.91, 0.91, 0.54, 0.15, 0.40, 0.03, 0.29, 0.12, 0.05, 0.23, 0.12, 0.13, 0.36, 0.06, 0.09, 0.17, 0.22, 0.14, 0.15, 0.10, 0.07, 0.04, 0.00, 0.01, 0.03, 0.00, 0.16, 0.13, 0.27, 0.11, 0.02, 0.20, 0.03, 0.34, 0.06, 0.07, 0.20, 0.02, 0.03, 0.32, 0.14, 0.05, 0.07, 0.30, 0.14, 0.08, 0.20, 0.27, 0.27, 0.31, 0.40, 0.19, 0.09, 0.25, 0.38, 0.31, 0.15, 0.28, 0.33, 0.07, 0.32, 0.10, 0.30, 0.18, 0.28, 0.12, 0.22, 0.16, 0.20, 0.31, 0.35, 0.40, 0.44, 0.41, 0.45, 0.45, 0.35, 0.04, 0.35, 0.40, 0.09, 0.57, 0.51, 0.02, 0.45, 0.57, 0.37, 0.32, 0.23, 0.21, 0.18, 0.32, 0.36, 0.27, 0.41, 0.31, 0.46, 0.37, 0.46, 0.27, 0.37, 0.09, 0.11, 0.41, 0.82, 0.74, 0.19, 0.34, 0.75, 0.94, 0.66, 0.13, 0.86, 1.00, 0.46, 0.34, 0.77, 0.53, 0.39, 0.75, 0.18, 0.68, 0.68, 0.06, 0.32, 0.72, 0.35, 0.38, 0.34, 0.52, 0.45, 0.59, 0.45, 0.15, 0.34, 0.37, 0.40, 0.04, 0.50, 0.22, 0.19, 0.19, 0.48, 0.33, 0.67, 0.13, 0.34, 0.35, 0.65, 0.16, 0.58, 0.12, 0.39, 0.19, 0.56, 0.26, 0.56, 0.44, 0.02, 0.57, 0.37, 0.22, 0.11, 0.14, 0.14, 0.04, 0.18, 0.09, 0.09, 0.11, 0.10, 0.28, 0.16, 0.10, 0.19, 0.38, 0.15, 0.31, 0.24, 0.04, 0.16, 0.10, 0.09, 0.08, 0.04, 0.05, 0.05, 0.06, 0.05, 0.04, 0.03, 0.00, 0.02, 0.03, 0.00, 0.02, 0.02, 0.00, 0.02, 0.03, 0.01, 0.01, 0.01, 0.02, 0.02, 0.01, 0.02, 0.01, 0.00, 0.01, 0.00, 0.00, 0.01],
    "book3_wrong2" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.04, 0.38, 0.38, 0.63, 0.07, 0.12, 0.18, 0.11, 0.05, 0.15, 0.17, 0.19, 0.25, 0.24, 0.32, 0.18, 0.19, 0.33, 0.37, 0.06, 0.30, 0.29, 0.44, 0.57, 0.11, 0.47, 0.33, 0.10, 0.19, 0.04, 0.15, 0.26, 0.11, 0.02, 0.01, 0.03, 0.05, 0.06, 0.04, 0.05, 0.14, 0.17, 0.83, 0.07, 1.00, 0.49, 0.64, 0.01, 0.91, 0.27, 0.39, 0.12, 0.14, 0.17, 0.33, 0.28, 0.09, 0.18, 0.31, 0.05, 0.23, 0.24, 0.42, 0.28, 0.02, 0.46, 0.25, 0.14, 0.12, 0.23, 0.15, 0.06, 0.07, 0.10, 0.14, 0.14, 0.11, 0.02, 0.05, 0.11, 0.09, 0.01, 0.05, 0.09, 0.08, 0.26, 0.49, 0.30, 0.21, 0.67, 0.32, 0.39, 0.26, 0.18, 0.36, 0.06, 0.18, 0.16, 0.18, 0.01, 0.08, 0.06, 0.01, 0.02, 0.55, 0.45, 0.45, 0.18, 0.17, 0.01, 0.52, 0.26, 0.14, 0.11, 0.02, 0.26, 0.02, 0.00, 0.02, 0.16, 0.05, 0.01, 0.05, 0.05, 0.05, 0.09, 0.16, 0.04, 0.09, 0.57, 0.17, 0.23, 0.10, 0.11, 0.25, 0.03, 0.03, 0.09, 0.06, 0.00, 0.00, 0.00, 0.01, 0.03, 0.01, 0.04, 0.03, 0.01, 0.10, 0.39, 0.03, 0.56, 0.08, 0.51, 0.16, 0.56, 0.10, 0.39, 0.35, 0.10, 0.09, 0.21, 0.32, 0.22, 0.12, 0.02, 0.02, 0.04, 0.07, 0.00, 0.03, 0.04, 0.00, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.01, 0.04, 0.15, 0.19, 0.15, 0.01, 0.10, 0.06, 0.10, 0.09, 0.21, 0.08, 0.33, 0.46, 0.29, 0.35, 0.03, 0.07, 0.48, 0.33, 0.60, 0.19, 0.21, 0.56, 0.42, 0.47, 0.46, 0.01, 0.25, 0.53, 0.60, 0.04, 0.35, 0.43, 0.24, 0.15, 0.29, 0.31, 0.49, 0.54, 0.07, 0.59, 0.42, 0.04, 0.27, 0.60, 0.45, 0.62, 0.48, 0.19, 0.61, 0.08, 0.70, 0.16, 0.50, 0.31, 0.60, 0.21, 0.25, 0.39, 0.31, 0.07, 0.13, 0.20, 0.16, 0.15, 0.07, 0.06, 0.03, 0.61, 0.30, 0.89, 0.17, 0.63, 0.72, 0.02, 0.61, 0.49, 0.22, 0.62, 0.19, 0.52, 0.39, 0.51, 0.12, 0.11, 0.02, 0.05, 0.07, 0.05, 0.08, 0.08, 0.08, 0.15, 0.05, 0.11, 0.06, 0.41, 0.03, 0.05, 0.39, 0.21, 0.26, 0.19, 0.12, 0.05, 0.03, 0.06, 0.16, 0.18, 0.22, 0.06, 0.12, 0.07, 0.09, 0.03, 0.06, 0.10, 0.12, 0.41, 0.07, 0.22, 0.01, 0.15, 0.09, 0.00, 0.04, 0.04, 0.25, 0.18, 0.06, 0.04, 0.06, 0.03, 0.01, 0.01, 0.02, 0.00, 0.05, 0.08, 0.11, 0.02, 0.11, 0.31, 0.22, 0.07, 0.05, 0.24, 0.06, 0.02, 0.05, 0.03, 0.01, 0.08, 0.02, 0.01, 0.02, 0.01, 0.06, 0.01, 0.00, 0.29, 0.24, 0.15, 0.16, 0.08, 0.05, 0.52, 0.15, 0.40, 0.07, 0.03, 0.10, 0.53, 0.32, 0.17, 0.06, 0.18, 0.31, 0.26, 0.14, 0.07, 0.67, 0.21, 0.30, 0.24, 0.02, 0.00, 0.04, 0.01, 0.09, 0.09, 0.02, 0.02, 0.02, 0.02, 0.01, 0.04, 0.06, 0.03, 0.08, 0.02, 0.20, 0.13, 0.32, 0.24, 0.15, 0.01, 0.08, 0.11, 0.14, 0.16, 0.66, 0.36, 0.38, 0.24, 0.04, 0.27, 0.09, 0.07, 0.04, 0.01, 0.04, 0.05, 0.07, 0.04, 0.10, 0.09, 0.04, 0.09, 0.04, 0.07, 0.05, 0.07, 0.00, 0.02, 0.04, 0.15, 0.18, 0.11, 0.37, 0.38, 0.34, 0.86, 0.34, 0.50, 0.79, 0.46, 0.20, 0.08, 0.09, 0.19, 0.28, 0.30, 0.20, 0.09, 0.04, 0.04, 0.08, 0.04, 0.01, 0.00, 0.01, 0.02, 0.01, 0.03, 0.02, 0.01, 0.01],
    "book3_wrong3" : [0.00, 0.00, 0.01, 0.01, 0.01, 0.02, 0.02, 0.03, 0.03, 0.04, 0.10, 0.07, 0.46, 0.10, 0.07, 0.16, 0.14, 0.18, 0.08, 0.06, 0.14, 0.12, 0.08, 0.13, 0.05, 0.15, 0.06, 0.29, 0.05, 0.38, 0.06, 0.06, 0.09, 0.19, 0.19, 0.04, 0.00, 0.07, 0.00, 0.17, 0.25, 0.18, 0.16, 0.10, 0.02, 0.03, 0.14, 0.05, 0.01, 0.00, 0.07, 0.02, 0.21, 0.13, 0.19, 0.10, 0.06, 0.11, 0.25, 0.12, 0.06, 0.52, 0.07, 0.38, 0.03, 0.24, 0.11, 0.29, 0.24, 0.21, 0.04, 0.16, 0.06, 0.16, 0.03, 0.02, 0.00, 0.04, 0.07, 0.05, 0.25, 0.14, 0.27, 0.39, 0.39, 0.36, 0.21, 0.01, 0.32, 0.39, 0.01, 0.04, 0.06, 0.21, 0.24, 0.27, 0.13, 0.19, 0.25, 0.37, 0.20, 0.31, 0.19, 0.28, 0.05, 0.35, 0.47, 0.01, 0.33, 0.43, 0.34, 0.22, 0.00, 0.16, 0.26, 0.25, 0.09, 0.29, 0.72, 0.04, 0.28, 0.07, 0.03, 0.29, 0.63, 0.49, 0.03, 0.15, 0.29, 0.02, 0.10, 0.03, 0.10, 0.26, 0.00, 0.19, 0.16, 0.04, 0.39, 0.09, 0.18, 0.21, 0.31, 0.19, 0.12, 0.13, 0.14, 0.02, 0.08, 0.08, 0.08, 0.09, 0.04, 0.19, 0.26, 0.32, 0.27, 0.13, 0.07, 0.07, 0.18, 0.18, 0.04, 0.07, 0.20, 0.01, 0.42, 0.46, 0.10, 0.07, 0.03, 0.20, 0.04, 0.21, 0.06, 0.07, 0.05, 0.09, 0.02, 0.06, 0.02, 0.00, 0.00, 0.11, 0.09, 0.02, 0.03, 0.08, 0.05, 0.13, 0.00, 0.00, 0.03, 0.08, 0.06, 0.01, 0.00, 0.05, 0.06, 0.01, 0.01, 0.01, 0.01, 0.02, 0.00, 0.03, 0.01, 0.01, 0.10, 0.01, 0.12, 0.16, 0.18, 0.10, 0.07, 0.00, 0.12, 0.12, 0.58, 0.99, 0.38, 0.40, 0.22, 0.15, 0.09, 0.06, 0.44, 0.51, 0.53, 0.09, 0.53, 0.00, 0.21, 0.63, 0.05, 0.31, 0.32, 0.39, 0.21, 0.07, 0.10, 0.04, 0.26, 0.36, 0.27, 0.24, 0.03, 0.35, 0.02, 0.23, 0.02, 0.67, 0.52, 0.35, 0.53, 0.55, 0.81, 0.65, 0.01, 0.75, 0.71, 0.12, 0.88, 0.62, 0.36, 1.00, 0.78, 0.02, 0.58, 0.54, 0.78, 0.31, 0.49, 0.34, 0.50, 0.72, 0.22, 0.27, 0.50, 0.26, 0.44, 0.36, 0.30, 0.20, 0.02, 0.11, 0.16, 0.05, 0.03, 0.09, 0.01, 0.10, 0.41, 0.45, 0.50, 0.16, 0.43, 0.35, 0.03, 0.09, 0.12, 0.07, 0.03, 0.02, 0.02, 0.00, 0.03, 0.04, 0.02, 0.01, 0.02, 0.03, 0.01, 0.04, 0.04, 0.00, 0.08, 0.09, 0.26, 0.49, 0.14, 0.40, 0.14, 0.09, 0.01, 0.02, 0.03, 0.05, 0.01, 0.02, 0.09, 0.06, 0.10, 0.02, 0.01, 0.01, 0.16, 0.02, 0.05, 0.09, 0.04, 0.33, 0.33, 0.07, 0.05, 0.19, 0.12, 0.35, 0.19, 0.03, 0.24, 0.09, 0.09, 0.06, 0.10, 0.26, 0.64, 0.89, 0.35, 0.11, 0.27, 0.46, 0.34, 0.18, 0.64, 0.20, 0.63, 0.37, 0.47, 0.85, 0.31, 0.23, 0.53, 0.57, 0.27, 0.23, 0.20, 0.19, 0.62, 0.47, 0.87, 0.59, 0.75, 0.45, 0.58, 0.43, 0.07, 0.35, 0.01, 0.31, 0.03, 0.26, 0.43, 0.59, 0.19, 0.44, 0.55, 0.34, 0.29, 0.22, 0.08, 0.26, 0.03, 0.11, 0.06, 0.03, 0.05, 0.17, 0.17, 0.13, 0.15, 0.08, 0.13, 0.00, 0.15, 0.05, 0.25, 0.09, 0.17, 0.34, 0.32, 0.06, 0.21, 0.29, 0.38, 0.19, 0.60, 0.37, 0.03, 0.01, 0.10, 0.28, 0.23, 0.46, 0.41, 0.16, 0.10, 0.08, 0.05, 0.11, 0.03, 0.00, 0.02, 0.01, 0.01, 0.10, 0.21, 0.02, 0.16, 0.34, 0.01, 0.24, 0.00, 0.11, 0.07, 0.13, 0.16, 0.32, 0.26, 0.01, 0.15, 0.21, 0.05, 0.10, 0.05, 0.19, 0.13, 0.17, 0.14, 0.08, 0.02, 0.01, 0.02, 0.04, 0.04, 0.00, 0.04, 0.06, 0.05, 0.01, 0.02, 0.03, 0.03, 0.02, 0.01, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, 0.00, 0.00, 0.01, 0.01, 0.00, 0.00],
    "book4_start" : [0.01, 0.06, 0.03, 0.56, 0.16, 0.17, 0.13, 0.26, 0.20, 0.19, 0.09, 0.03, 0.08, 0.07, 0.74, 0.22, 0.32, 0.11, 0.07, 0.29, 0.20, 0.61, 0.03, 0.12, 0.16, 0.55, 0.30, 0.00, 0.31, 0.46, 0.56, 0.53, 0.21, 0.23, 0.18, 0.17, 0.05, 0.16, 0.03, 0.09, 0.16, 0.17, 0.01, 0.08, 0.40, 0.31, 0.08, 0.17, 0.08, 0.13, 0.07, 0.94, 0.34, 0.23, 0.04, 0.24, 0.10, 0.05, 0.27, 0.02, 0.78, 0.56, 0.53, 0.19, 0.41, 0.07, 0.08, 0.03, 0.17, 0.04, 0.19, 0.38, 0.53, 0.21, 0.11, 0.04, 0.14, 0.03, 0.14, 0.08, 0.04, 0.28, 0.19, 0.13, 0.16, 0.02, 0.24, 0.51, 0.18, 0.04, 0.02, 0.02, 0.03, 0.00, 0.00, 0.00, 0.00, 0.10, 0.64, 0.76, 0.69, 0.76, 0.17, 0.03, 0.23, 0.17, 0.06, 0.12, 0.27, 0.14, 0.01, 0.02, 0.39, 0.24, 0.29, 0.23, 0.12, 0.18, 0.06, 0.02, 0.00, 0.28, 0.28, 0.39, 0.02, 0.14, 0.10, 0.10, 0.21, 0.59, 0.91, 0.27, 0.09, 0.00, 0.12, 0.57, 0.01, 0.23, 0.16, 0.41, 0.45, 0.18, 0.17, 0.15, 0.33, 0.30, 0.15, 0.12, 0.37, 0.13, 0.00, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.05, 0.63, 0.25, 0.32, 0.39, 0.20, 0.52, 0.46, 0.15, 0.19, 0.25, 0.23, 0.34, 0.31, 0.29, 0.11, 0.54, 0.34, 0.04, 0.22, 0.07, 0.31, 0.07, 0.37, 0.35, 0.11, 0.04, 0.39, 0.17, 0.02, 0.09, 0.01, 0.24, 0.08, 0.36, 0.14, 0.24, 0.06, 0.05, 0.02, 0.28, 0.45, 0.04, 0.10, 0.28, 0.81, 0.22, 0.04, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.36, 0.09, 0.16, 0.37, 0.20, 0.14, 0.01, 0.34, 0.00, 0.01, 0.09, 0.09, 0.22, 0.10, 0.01, 0.07, 0.17, 0.13, 0.06, 0.02, 0.12, 0.10, 0.15, 0.09, 0.53, 0.01, 0.47, 0.58, 0.28, 0.08, 0.69, 0.64, 0.09, 0.05, 0.15, 0.25, 0.42, 0.06, 0.09, 0.00, 0.00, 0.02, 0.10, 0.41, 0.58, 0.25, 0.17, 0.15, 0.23, 0.12, 0.59, 0.04, 0.17, 0.47, 0.13, 0.02, 0.06, 0.08, 0.07, 0.31, 0.38, 0.05, 0.12, 0.09, 0.38, 0.01, 0.24, 0.22, 0.28, 0.06, 0.38, 0.30, 0.28, 0.20, 0.07, 0.28, 0.03, 0.11, 0.05, 0.35, 0.39, 0.23, 0.18, 0.07, 0.02, 0.08, 0.16, 0.01, 0.53, 0.07, 0.03, 0.10, 0.10, 0.17, 0.20, 0.34, 0.12, 0.12, 0.20, 0.23, 0.16, 0.06, 0.25, 0.12, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.01, 0.09, 0.05, 0.05, 0.35, 0.10, 0.08, 0.02, 0.01, 0.02, 0.71, 0.34, 0.11, 0.21, 0.15, 0.12, 0.34, 0.21, 0.47, 0.26, 0.08, 0.40, 0.72, 0.16, 0.14, 0.64, 0.19, 0.24, 0.53, 0.52, 0.34, 0.51, 0.08, 0.04, 0.02, 0.68, 0.44, 0.36, 0.06, 0.06, 0.23, 0.16, 0.05, 0.55, 0.36, 0.20, 0.33, 0.13, 0.12, 0.09, 0.12, 0.06, 0.10, 0.07, 0.09, 0.05, 0.02, 0.12, 0.25, 0.37, 0.59, 0.17, 0.13, 0.01, 0.10, 0.16, 0.24, 0.27, 0.02, 0.12, 0.04, 0.00, 0.14, 0.48, 0.42, 0.14, 0.05, 0.25, 0.01, 0.34, 0.40, 0.06, 0.13, 0.03, 0.33, 0.02, 0.11, 0.12, 0.16, 0.18, 0.14, 0.02, 0.05, 0.46, 0.22, 0.32, 0.35, 0.14, 0.15, 0.09, 0.08, 0.13, 0.01, 0.06, 0.58, 0.01, 0.04, 0.61, 0.47, 0.17, 0.04, 0.11, 0.10, 0.10, 0.23, 0.45, 0.80, 0.23, 1.00, 0.45, 0.24, 0.01, 0.22, 0.22, 0.63, 0.60, 0.01, 0.37, 0.25, 0.56, 0.47, 0.01, 0.24, 0.08, 0.05, 0.13, 0.23, 0.45, 0.62, 0.41, 0.02, 0.35, 0.03, 0.17, 0.61, 0.70, 0.65, 0.53, 0.43, 0.21, 0.05, 0.18, 0.04, 0.25, 0.01, 0.35, 0.05, 0.14, 0.14, 0.16, 0.03, 0.01],
    "book4_right" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.06, 0.07, 0.06, 0.01, 0.17, 0.27, 0.22, 0.46, 0.32, 0.24, 0.32, 0.21, 0.45, 1.00, 0.77, 0.10, 0.69, 0.60, 0.09, 0.37, 0.37, 0.03, 0.08, 0.07, 0.24, 0.09, 0.00, 0.01, 0.13, 0.07, 0.04, 0.04, 0.15, 0.09, 0.07, 0.12, 0.05, 0.04, 0.05, 0.06, 0.11, 0.13, 0.00, 0.11, 0.07, 0.04, 0.15, 0.19, 0.05, 0.06, 0.19, 0.14, 0.16, 0.10, 0.31, 0.28, 0.10, 0.34, 0.32, 0.06, 0.29, 0.35, 0.13, 0.03, 0.22, 0.32, 0.27, 0.08, 0.55, 0.65, 0.24, 0.12, 0.10, 0.10, 0.08, 0.22, 0.30, 0.08, 0.32, 0.52, 0.12, 0.34, 0.35, 0.13, 0.41, 0.26, 0.17, 0.33, 0.17, 0.09, 0.12, 0.03, 0.06, 0.03, 0.00, 0.00, 0.02, 0.01, 0.02, 0.06, 0.06, 0.05, 0.13, 0.09, 0.01, 0.01, 0.03, 0.05, 0.02, 0.06, 0.06, 0.05, 0.08, 0.04, 0.04, 0.06, 0.03, 0.02, 0.03, 0.05, 0.14, 0.02, 0.14, 0.18, 0.08, 0.19, 0.26, 0.40, 0.21, 0.03, 0.08, 0.02, 0.15, 0.12, 0.04, 0.09, 0.04, 0.06, 0.04, 0.01, 0.03, 0.08, 0.05, 0.00, 0.01, 0.02, 0.00, 0.01, 0.11, 0.01, 0.02, 0.04, 0.08, 0.06, 0.01, 0.00, 0.02, 0.00, 0.01, 0.01, 0.01, 0.00, 0.01, 0.03, 0.06, 0.00, 0.03, 0.01, 0.13, 0.16, 0.21, 0.17, 0.02, 0.04, 0.02, 0.00, 0.05, 0.00, 0.06, 0.01, 0.04, 0.02, 0.00, 0.00, 0.03, 0.01, 0.06, 0.04, 0.08, 0.09, 0.16, 0.11, 0.03, 0.10, 0.02, 0.01, 0.04, 0.00, 0.03, 0.07, 0.04, 0.12, 0.10, 0.11, 0.07, 0.02, 0.07, 0.00, 0.05, 0.01, 0.03, 0.01, 0.14, 0.07, 0.01, 0.14, 0.11, 0.11, 0.17, 0.03, 0.05, 0.09, 0.03, 0.01, 0.00, 0.00, 0.00, 0.08, 0.09, 0.08, 0.05, 0.06, 0.04, 0.02, 0.01, 0.01, 0.04, 0.01, 0.04, 0.01, 0.00, 0.10, 0.01, 0.03, 0.09, 0.17, 0.09, 0.12, 0.05, 0.18, 0.01, 0.28, 0.06, 0.28, 0.12, 0.09, 0.09, 0.11, 0.07, 0.18, 0.09, 0.05, 0.06, 0.04, 0.16, 0.27, 0.01, 0.22, 0.25, 0.11, 0.06, 0.15, 0.21, 0.26, 0.07, 0.27, 0.41, 0.27, 0.15, 0.51, 0.42, 0.04, 0.37, 0.18, 0.17, 0.26, 0.07, 0.10, 0.04, 0.07, 0.06, 0.01, 0.00, 0.02, 0.04, 0.06, 0.08, 0.10, 0.10, 0.01, 0.13, 0.16, 0.31, 0.06, 0.05, 0.05, 0.11, 0.04, 0.31, 0.01, 0.01, 0.03, 0.02, 0.00, 0.06, 0.05, 0.03, 0.06, 0.03, 0.00, 0.03, 0.04, 0.05, 0.04, 0.02, 0.01, 0.00, 0.01, 0.00, 0.00, 0.05, 0.03, 0.10, 0.04, 0.07, 0.06, 0.05, 0.05, 0.04, 0.03, 0.06, 0.05, 0.01, 0.18, 0.04, 0.13, 0.02, 0.00, 0.01, 0.35, 0.26, 0.07, 0.12, 0.07, 0.19, 0.08, 0.01, 0.05, 0.11, 0.07, 0.05, 0.00, 0.01, 0.03, 0.03, 0.02, 0.11, 0.12, 0.15, 0.37, 0.28, 0.29, 0.32, 0.71, 0.31, 0.26, 0.42, 0.05, 0.30, 0.05, 0.15, 0.00, 0.22, 0.14, 0.10, 0.25, 0.12, 0.09, 0.22, 0.11, 0.03, 0.18, 0.10, 0.10, 0.00, 0.08, 0.10, 0.17, 0.29, 0.24, 0.24, 0.07, 0.15, 0.21, 0.22, 0.30, 0.36, 0.38, 0.39, 0.29, 0.09, 0.03, 0.12, 0.15, 0.15, 0.12, 0.12, 0.13, 0.14, 0.09, 0.10, 0.13, 0.07, 0.00, 0.02, 0.03, 0.11, 0.12, 0.03, 0.11, 0.11, 0.02, 0.09, 0.01, 0.15, 0.14, 0.05, 0.10, 0.07, 0.03, 0.16, 0.22, 0.04, 0.20, 0.28, 0.10, 0.14, 0.35, 0.44, 0.53, 0.31, 0.20, 0.03, 0.15, 0.22, 0.22, 0.08, 0.01, 0.00, 0.05, 0.03, 0.03, 0.01, 0.02, 0.08, 0.12, 0.01, 0.01, 0.11, 0.22, 0.10, 0.05, 0.19, 0.16, 0.03, 0.12, 0.15, 0.10, 0.02, 0.05, 0.02, 0.02, 0.01, 0.00, 0.00, 0.01, 0.03, 0.02, 0.00, 0.00, 0.01, 0.01, 0.00, 0.00],
    "book4_wrong1" : [0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.02, 0.07, 0.11, 0.08, 0.04, 0.14, 0.14, 0.05, 0.07, 0.09, 0.27, 0.22, 0.26, 0.04, 0.04, 0.09, 0.01, 0.05, 0.04, 0.03, 0.02, 0.03, 0.08, 0.09, 0.08, 0.05, 0.01, 0.05, 0.01, 0.14, 0.08, 0.05, 0.10, 0.11, 0.12, 0.28, 0.08, 0.04, 0.21, 0.04, 0.05, 0.07, 0.38, 0.24, 0.15, 0.42, 0.19, 0.16, 0.33, 0.13, 0.38, 0.10, 0.55, 0.06, 0.44, 0.27, 0.07, 0.24, 0.41, 0.48, 0.30, 0.03, 0.20, 0.22, 0.24, 0.19, 0.31, 0.23, 0.05, 0.11, 0.23, 0.06, 0.01, 0.10, 0.13, 0.22, 0.18, 0.24, 0.19, 0.13, 0.20, 0.01, 0.02, 0.05, 0.12, 0.12, 0.25, 0.46, 0.55, 0.53, 0.13, 0.50, 0.35, 0.06, 0.10, 0.19, 0.10, 0.42, 0.59, 0.39, 0.04, 0.07, 0.02, 0.06, 0.29, 0.03, 0.50, 0.35, 0.08, 0.07, 0.25, 0.12, 0.16, 0.30, 0.05, 0.04, 0.51, 0.02, 0.30, 0.20, 0.50, 0.28, 1.00, 0.02, 0.08, 0.16, 0.13, 0.05, 0.09, 0.03, 0.11, 0.03, 0.07, 0.05, 0.06, 0.07, 0.01, 0.01, 0.02, 0.05, 0.19, 0.31, 0.26, 0.42, 0.36, 0.14, 0.05, 0.28, 0.43, 0.40, 0.32, 0.04, 0.05, 0.01, 0.04, 0.18, 0.23, 0.07, 0.15, 0.01, 0.13, 0.05, 0.01, 0.05, 0.01, 0.04, 0.03, 0.05, 0.00, 0.03, 0.07, 0.02, 0.00, 0.02, 0.05, 0.09, 0.14, 0.14, 0.18, 0.17, 0.08, 0.09, 0.17, 0.08, 0.07, 0.27, 0.26, 0.17, 0.14, 0.53, 0.10, 0.13, 0.40, 0.21, 0.49, 0.31, 0.09, 0.32, 0.15, 0.19, 0.09, 0.01, 0.00, 0.19, 0.02, 0.05, 0.22, 0.03, 0.12, 0.18, 0.07, 0.02, 0.03, 0.01, 0.01, 0.03, 0.07, 0.11, 0.14, 0.13, 0.25, 0.46, 0.25, 0.28, 0.56, 0.42, 0.09, 0.56, 0.51, 0.01, 0.37, 0.10, 0.37, 0.15, 0.10, 0.04, 0.06, 0.07, 0.02, 0.30, 0.05, 0.26, 0.12, 0.09, 0.14, 0.12, 0.09, 0.07, 0.02, 0.07, 0.10, 0.33, 0.23, 0.29, 0.25, 0.17, 0.08, 0.00, 0.01, 0.11, 0.08, 0.01, 0.03, 0.07, 0.19, 0.12, 0.26, 0.05, 0.05, 0.03, 0.02, 0.03, 0.00, 0.02, 0.03, 0.00, 0.00, 0.03, 0.01, 0.02, 0.06, 0.06, 0.21, 0.19, 0.25, 0.03, 0.40, 0.11, 0.05, 0.04, 0.23, 0.10, 0.01, 0.02, 0.11, 0.09, 0.08, 0.10, 0.14, 0.04, 0.34, 0.04, 0.06, 0.04, 0.16, 0.03, 0.03, 0.05, 0.04, 0.01, 0.08, 0.00, 0.04, 0.16, 0.12, 0.05, 0.03, 0.02, 0.07, 0.05, 0.03, 0.14, 0.35, 0.11, 0.32, 0.11, 0.29, 0.26, 0.14, 0.06, 0.06, 0.02, 0.04, 0.01, 0.09, 0.16, 0.12, 0.05, 0.33, 0.44, 0.27, 0.08, 0.02, 0.03, 0.10, 0.31, 0.18, 0.18, 0.02, 0.04, 0.23, 0.19, 0.11, 0.14, 0.11, 0.03, 0.06, 0.11, 0.06, 0.10, 0.08, 0.09, 0.04, 0.12, 0.02, 0.02, 0.11, 0.16, 0.12, 0.07, 0.07, 0.01, 0.02, 0.03, 0.03, 0.00, 0.02, 0.01, 0.03, 0.04, 0.01, 0.00, 0.02, 0.08, 0.09, 0.07, 0.13, 0.05, 0.10, 0.12, 0.04, 0.02, 0.03, 0.07, 0.06, 0.02, 0.01, 0.01, 0.02, 0.00, 0.03, 0.03, 0.03, 0.03, 0.05, 0.04, 0.00, 0.02, 0.03, 0.06, 0.06, 0.01, 0.00, 0.51, 0.12, 0.14, 0.05, 0.06, 0.10, 0.12, 0.09, 0.40, 0.14, 0.16, 0.31, 0.17, 0.56, 0.74, 0.06, 0.05, 0.68, 0.50, 0.41, 0.65, 0.03, 0.69, 0.45, 0.14, 0.28, 0.41, 0.63, 0.35, 0.08, 0.13, 0.39, 0.40, 0.50, 0.68, 0.49, 0.28, 0.12, 0.25, 0.40, 0.27, 0.27, 0.01, 0.34, 0.39, 0.31, 0.21, 0.29, 0.42, 0.58, 0.64, 0.35, 0.21, 0.55, 0.56, 0.36, 0.24, 0.06, 0.14, 0.26, 0.22, 0.07, 0.09, 0.19, 0.09, 0.17, 0.30, 0.28, 0.13, 0.01, 0.02, 0.02, 0.02, 0.04, 0.05, 0.02, 0.04, 0.07, 0.06, 0.02, 0.00],
    "book4_wrong2" : [0.05, 0.05, 0.05, 0.21, 0.40, 0.74, 0.29, 0.43, 0.86, 0.57, 0.07, 0.53, 0.45, 0.04, 0.41, 0.40, 0.07, 0.47, 0.55, 0.13, 0.25, 0.04, 0.44, 0.17, 0.06, 0.02, 0.02, 0.03, 0.15, 0.07, 0.13, 0.12, 0.03, 0.13, 0.02, 0.09, 0.07, 0.10, 0.13, 0.20, 0.14, 0.09, 0.11, 0.05, 0.25, 0.12, 0.11, 0.28, 0.21, 0.09, 0.03, 0.08, 0.03, 0.02, 0.04, 0.10, 0.07, 0.18, 0.04, 0.15, 0.20, 0.03, 0.07, 0.06, 0.04, 0.16, 0.19, 0.09, 0.00, 0.04, 0.09, 0.01, 0.05, 0.09, 0.01, 0.24, 0.06, 0.03, 0.08, 0.08, 0.23, 0.05, 0.25, 0.20, 0.09, 0.21, 0.16, 0.04, 0.05, 0.04, 0.13, 0.04, 0.04, 0.13, 0.04, 0.14, 0.17, 0.04, 0.02, 0.22, 0.23, 0.02, 0.10, 0.07, 0.04, 0.07, 0.06, 0.06, 0.10, 0.24, 0.17, 0.01, 0.16, 0.06, 0.05, 0.05, 0.09, 0.03, 0.01, 0.06, 0.04, 0.04, 0.03, 0.01, 0.01, 0.00, 0.00, 0.02, 0.03, 0.02, 0.01, 0.06, 0.26, 0.58, 0.04, 0.09, 0.15, 0.12, 0.38, 0.05, 0.03, 0.04, 0.08, 0.07, 0.04, 0.13, 0.30, 0.29, 0.05, 0.02, 0.13, 0.26, 0.01, 0.03, 0.18, 0.15, 0.10, 0.10, 0.00, 0.06, 0.18, 0.21, 0.00, 0.03, 0.02, 0.01, 0.08, 0.01, 0.18, 0.05, 0.07, 0.10, 0.15, 0.12, 0.28, 0.02, 0.10, 0.17, 0.24, 0.05, 0.18, 0.34, 0.34, 0.21, 0.18, 0.20, 0.10, 0.06, 0.17, 0.11, 0.06, 0.02, 0.01, 0.05, 0.03, 0.03, 0.08, 0.04, 0.02, 0.03, 0.02, 0.08, 0.16, 0.18, 0.09, 0.02, 0.08, 0.05, 0.09, 0.15, 0.27, 0.14, 0.08, 0.12, 0.25, 0.03, 0.34, 0.12, 0.01, 0.21, 0.38, 0.11, 0.14, 0.42, 0.43, 0.23, 0.04, 0.04, 0.01, 0.00, 0.01, 0.10, 0.04, 0.36, 0.76, 0.13, 0.18, 0.05, 0.25, 0.13, 0.24, 0.04, 0.28, 0.20, 0.26, 0.47, 0.09, 0.37, 0.39, 0.02, 0.38, 0.37, 0.02, 0.31, 0.33, 0.01, 0.34, 0.39, 0.03, 0.32, 0.36, 0.00, 0.30, 0.40, 0.00, 0.31, 0.40, 0.03, 0.19, 0.24, 0.04, 0.01, 0.06, 0.21, 0.25, 0.02, 0.47, 0.45, 0.06, 0.77, 0.61, 0.17, 0.58, 0.53, 0.41, 0.09, 0.60, 0.87, 0.21, 0.52, 0.68, 0.23, 0.16, 0.34, 0.14, 0.00, 0.15, 0.11, 0.01, 0.23, 0.21, 0.07, 0.54, 0.53, 0.18, 0.77, 0.75, 0.12, 0.12, 0.07, 0.28, 0.12, 0.67, 0.68, 0.04, 0.51, 0.46, 0.14, 0.00, 0.05, 0.04, 0.02, 0.01, 0.11, 0.12, 0.06, 0.01, 0.01, 0.03, 0.04, 0.07, 0.08, 0.16, 0.25, 0.33, 0.19, 0.14, 0.36, 0.17, 0.20, 0.13, 0.11, 0.21, 0.38, 0.33, 0.01, 0.30, 0.33, 0.08, 0.26, 0.27, 0.33, 0.30, 0.28, 0.25, 0.11, 0.06, 0.05, 0.05, 0.10, 0.19, 0.22, 0.20, 0.24, 0.27, 0.26, 0.15, 0.16, 0.21, 0.25, 0.14, 0.09, 0.15, 0.25, 0.27, 0.22, 0.10, 0.28, 0.46, 0.50, 0.44, 0.26, 0.33, 0.42, 0.61, 0.40, 0.35, 0.21, 0.13, 0.06, 0.03, 0.09, 0.01, 0.09, 0.05, 0.09, 0.19, 0.06, 0.18, 0.19, 0.21, 0.33, 0.32, 0.57, 0.80, 0.88, 0.46, 0.28, 0.40, 0.20, 1.00, 0.65, 0.04, 0.20, 0.01, 0.05, 0.14, 0.14, 0.12, 0.06, 0.33, 0.33, 0.32, 0.27, 0.45, 0.59, 0.61, 0.52, 0.47, 0.43, 0.57, 0.59, 0.52, 0.57, 0.64, 0.64, 0.54, 0.33, 0.23, 0.23, 0.39, 0.50, 0.42, 0.34, 0.41, 0.60, 0.55, 0.37, 0.25, 0.36, 0.58, 0.72, 0.42, 0.18, 0.20, 0.28, 0.20, 0.04, 0.01, 0.21, 0.10, 0.10, 0.34, 0.46, 0.14, 0.34, 0.47, 0.11, 0.30, 0.29, 0.02, 0.18, 0.09, 0.11, 0.14, 0.00, 0.12, 0.06, 0.09, 0.09, 0.06, 0.10, 0.05, 0.14, 0.04, 0.11, 0.10, 0.03, 0.10, 0.03, 0.04, 0.03, 0.02, 0.04, 0.00, 0.03, 0.01, 0.01, 0.01, 0.01],
    "book4_wrong3" : [0.02, 0.05, 0.07, 0.08, 0.04, 0.16, 0.62, 0.07, 0.63, 0.14, 0.83, 0.34, 0.44, 0.82, 0.03, 0.47, 0.04, 0.83, 0.51, 0.16, 0.03, 0.28, 0.37, 0.21, 0.31, 0.10, 0.06, 0.18, 0.14, 0.15, 0.06, 0.22, 0.22, 0.10, 0.06, 0.03, 0.10, 0.17, 0.09, 0.09, 0.01, 0.00, 0.11, 0.10, 0.03, 0.05, 0.00, 0.02, 0.04, 0.07, 0.01, 0.00, 0.03, 0.06, 0.04, 0.05, 0.02, 0.02, 0.03, 0.01, 0.03, 0.01, 0.01, 0.02, 0.01, 0.02, 0.02, 0.02, 0.02, 0.03, 0.03, 0.01, 0.02, 0.03, 0.05, 0.01, 0.05, 0.09, 0.06, 0.09, 0.05, 0.02, 0.08, 0.02, 0.08, 0.10, 0.11, 0.01, 0.06, 0.07, 0.08, 0.05, 0.02, 0.01, 0.01, 0.05, 0.04, 0.04, 0.06, 0.15, 0.15, 0.00, 0.12, 0.13, 0.04, 0.05, 0.12, 0.04, 0.06, 0.07, 0.06, 0.02, 0.04, 0.25, 0.08, 0.19, 0.27, 0.03, 0.10, 0.18, 0.31, 0.32, 0.09, 0.19, 0.37, 0.35, 0.22, 0.03, 0.11, 0.11, 0.06, 0.01, 0.13, 0.21, 0.01, 0.01, 0.00, 0.13, 0.13, 0.05, 0.07, 0.09, 0.03, 0.08, 0.06, 0.01, 0.05, 0.02, 0.02, 0.01, 0.00, 0.00, 0.00, 0.02, 0.03, 0.00, 0.03, 0.00, 0.00, 0.05, 0.04, 0.04, 0.04, 0.15, 0.20, 0.15, 0.03, 0.14, 0.20, 0.09, 0.12, 0.20, 0.07, 0.10, 0.14, 0.04, 0.06, 0.11, 0.02, 0.11, 0.11, 0.07, 0.09, 0.07, 0.07, 0.18, 0.16, 0.06, 0.02, 0.10, 0.07, 0.09, 0.23, 0.05, 0.00, 0.05, 0.11, 0.22, 0.04, 0.02, 0.15, 0.14, 0.05, 0.06, 0.10, 0.03, 0.13, 0.01, 0.02, 0.04, 0.09, 0.17, 0.10, 0.01, 0.11, 0.04, 0.11, 0.20, 0.17, 0.20, 0.09, 0.13, 0.07, 0.11, 0.00, 0.03, 0.03, 0.27, 0.33, 0.01, 0.05, 0.04, 0.11, 0.04, 0.26, 0.11, 0.01, 0.03, 0.20, 0.26, 0.03, 0.04, 0.07, 0.04, 0.12, 0.16, 0.12, 0.03, 0.04, 0.14, 0.05, 0.26, 0.11, 0.08, 0.04, 0.06, 0.01, 0.18, 0.26, 0.05, 0.01, 0.04, 0.03, 0.15, 0.03, 0.01, 0.02, 0.03, 0.00, 0.00, 0.07, 0.19, 0.09, 0.20, 0.07, 0.13, 0.39, 0.16, 0.35, 0.21, 0.18, 0.05, 0.01, 0.04, 0.02, 0.00, 0.07, 0.01, 0.10, 0.08, 0.13, 0.10, 0.19, 0.22, 0.14, 0.08, 0.09, 0.02, 0.01, 0.02, 0.00, 0.02, 0.10, 0.12, 0.01, 0.11, 0.11, 0.21, 0.17, 0.04, 0.04, 0.12, 0.19, 0.14, 0.23, 0.04, 0.06, 0.17, 0.07, 0.10, 0.24, 0.24, 0.20, 0.13, 0.10, 0.07, 0.04, 0.01, 0.02, 0.01, 0.03, 0.03, 0.00, 0.01, 0.04, 0.03, 0.01, 0.04, 0.03, 0.03, 0.04, 0.08, 0.07, 0.04, 0.03, 0.01, 0.35, 0.64, 0.13, 0.65, 0.04, 0.50, 0.06, 0.72, 0.43, 0.33, 0.73, 0.29, 0.37, 0.45, 0.14, 0.16, 0.34, 0.09, 0.10, 0.27, 0.17, 0.12, 0.26, 0.14, 0.09, 0.03, 0.05, 0.10, 0.16, 0.08, 0.16, 0.03, 0.17, 0.22, 0.08, 0.35, 0.10, 0.03, 0.32, 0.41, 0.18, 0.54, 0.34, 0.01, 0.22, 0.24, 0.25, 0.81, 0.72, 0.02, 0.25, 0.33, 1.00, 0.56, 0.10, 0.20, 0.51, 0.57, 0.04, 0.15, 0.05, 0.16, 0.11, 0.08, 0.10, 0.03, 0.05, 0.27, 0.23, 0.22, 0.29, 0.00, 0.15, 0.11, 0.01, 0.02, 0.06, 0.12, 0.11, 0.08, 0.04, 0.01, 0.03, 0.05, 0.03, 0.01, 0.05, 0.00, 0.02, 0.05, 0.03, 0.01, 0.07, 0.27, 0.39, 0.01, 0.50, 0.72, 0.27, 0.21, 0.36, 0.25, 0.00, 0.16, 0.24, 0.20, 0.10, 0.05, 0.10, 0.24, 0.27, 0.22, 0.15, 0.06, 0.19, 0.04, 0.20, 0.33, 0.35, 0.29, 0.01, 0.00, 0.02, 0.20, 0.00, 0.07, 0.12, 0.19, 0.15, 0.07, 0.03, 0.17, 0.25, 0.22, 0.05, 0.15, 0.23, 0.10, 0.10, 0.17, 0.08, 0.02, 0.07, 0.04, 0.00, 0.02, 0.02, 0.02, 0.02, 0.02, 0.00, 0.00, 0.01, 0.01],
    "book5_start" : [0.00, 0.00, 0.00, 0.00, 0.04, 0.16, 0.31, 0.31, 1.00, 0.19, 0.20, 0.44, 0.32, 0.10, 0.08, 0.50, 0.03, 0.19, 0.21, 0.06, 0.10, 0.06, 0.08, 0.05, 0.05, 0.07, 0.15, 0.21, 0.13, 0.03, 0.03, 0.19, 0.17, 0.01, 0.07, 0.52, 0.04, 0.26, 0.34, 0.43, 0.43, 0.69, 0.18, 0.28, 0.27, 0.01, 0.14, 0.02, 0.12, 0.02, 0.43, 0.04, 0.09, 0.34, 0.68, 0.02, 0.09, 0.14, 0.00, 0.01, 0.35, 0.04, 0.55, 0.05, 0.09, 0.10, 0.32, 0.63, 0.24, 0.07, 0.01, 0.03, 0.00, 0.02, 0.04, 0.04, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.37, 0.53, 0.48, 0.08, 0.03, 0.32, 0.07, 0.29, 0.03, 0.49, 0.09, 0.57, 0.52, 0.35, 0.19, 0.20, 0.63, 0.54, 0.71, 0.17, 0.44, 0.35, 0.04, 0.20, 0.01, 0.05, 0.00, 0.02, 0.01, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.16, 0.23, 0.03, 0.05, 0.64, 0.18, 0.01, 0.42, 0.12, 0.00, 0.20, 0.35, 0.13, 0.37, 0.07, 0.08, 0.04, 0.01, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.03, 0.27, 0.19, 0.75, 0.19, 0.14, 0.27, 0.18, 0.21, 0.42, 0.15, 0.01, 0.01, 0.25, 0.08, 0.14, 0.51, 0.15, 0.12, 0.01, 0.03, 0.00, 0.15, 0.27, 0.03, 0.00, 0.01, 0.07, 0.16, 0.16, 0.32, 0.02, 0.03, 0.01, 0.03, 0.04, 0.17, 0.28, 0.10, 0.11, 0.19, 0.19, 0.10, 0.28, 0.21, 0.36, 0.14, 0.02, 0.07, 0.42, 0.82, 0.18, 0.12, 0.06, 0.08, 0.01, 0.03, 0.00, 0.00, 0.00, 0.00, 0.01, 0.25, 0.24, 0.45, 0.11, 0.06, 0.06, 0.09, 0.20, 0.10, 0.50, 0.12, 0.05, 0.15, 0.25, 0.19, 0.38, 0.15, 0.02, 0.03, 0.01, 0.14, 0.27, 0.13, 0.58, 0.36, 0.27, 0.16, 0.05, 0.04, 0.00, 0.40, 0.13, 0.02, 0.29, 0.43, 0.03, 0.02, 0.29, 0.34, 0.14, 0.33, 0.58, 0.35, 0.06, 0.01, 0.17, 0.19, 0.25, 0.10, 0.14, 0.11, 0.12, 0.19, 0.01, 0.10, 0.15, 0.00, 0.01, 0.03, 0.00, 0.02, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.34, 0.30, 0.27, 0.39, 0.03, 0.04, 0.17, 0.39, 0.16, 0.38, 0.44, 0.12, 0.06, 0.01, 0.07, 0.06, 0.01, 0.00, 0.01, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.21, 0.04, 0.26, 0.34, 0.10, 0.04, 0.11, 0.04, 0.02, 0.02, 0.17, 0.36, 0.02, 0.20, 0.34, 0.36, 0.10, 0.31, 0.36, 0.52, 0.54, 0.72, 0.32, 0.27, 0.44, 0.23, 0.05, 0.01, 0.01, 0.00, 0.20, 0.05, 0.03, 0.03, 0.01, 0.02, 0.02, 0.02, 0.03, 0.00, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.04, 0.02, 0.37, 0.32, 0.72, 0.12, 0.24, 0.18, 0.03, 0.02, 0.10, 0.53, 0.48, 0.13, 0.13, 0.09, 0.11, 0.03, 0.53, 0.41, 0.17, 0.19, 0.73, 0.38, 0.02, 0.03, 0.03, 0.00, 0.00, 0.10, 0.21, 0.04, 0.62, 0.18, 0.21, 0.27, 0.03, 0.01, 0.04, 0.01, 0.01, 0.05, 0.08, 0.02, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.14, 0.45, 0.47, 0.12, 0.50, 0.44, 0.41, 0.29, 0.10, 0.06, 0.13, 0.24, 0.34, 0.32, 0.06, 0.19, 0.08, 0.16, 0.07, 0.51, 0.10, 0.53, 0.13, 0.01, 0.10, 0.05, 0.11, 0.17, 0.11, 0.02, 0.03, 0.04, 0.00, 0.01, 0.04, 0.05, 0.03, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book5_right" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.06, 0.21, 0.57, 0.15, 0.33, 0.23, 0.08, 0.10, 0.16, 0.12, 0.37, 0.30, 0.01, 0.37, 0.22, 0.45, 0.32, 0.15, 0.11, 0.22, 0.04, 0.15, 0.11, 0.13, 0.08, 0.10, 0.05, 0.03, 0.05, 0.04, 0.00, 0.19, 0.04, 0.05, 0.06, 0.01, 0.01, 0.04, 0.04, 0.01, 0.02, 0.00, 0.00, 0.01, 0.00, 0.01, 0.00, 0.00, 0.00, 0.01, 0.01, 0.00, 0.02, 0.00, 0.01, 0.02, 0.00, 0.02, 0.01, 0.00, 0.05, 0.06, 0.30, 0.46, 0.13, 0.14, 0.16, 0.21, 0.05, 0.21, 0.05, 0.13, 0.27, 0.02, 0.27, 0.15, 0.04, 0.08, 0.08, 0.04, 0.01, 0.03, 0.00, 0.10, 0.04, 0.00, 0.03, 0.01, 0.01, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.07, 0.09, 0.08, 0.25, 0.23, 0.17, 0.25, 0.25, 0.05, 0.19, 0.05, 0.24, 0.17, 0.24, 0.43, 0.01, 0.25, 0.17, 0.38, 0.20, 0.10, 0.14, 0.44, 0.01, 0.10, 0.13, 0.38, 0.17, 0.12, 0.32, 0.06, 0.15, 0.13, 0.15, 0.22, 0.09, 0.39, 0.18, 0.33, 0.46, 0.03, 0.32, 0.14, 0.26, 0.26, 0.28, 0.48, 0.14, 0.24, 0.25, 0.08, 0.22, 0.11, 0.20, 0.26, 0.04, 0.46, 0.42, 0.07, 0.37, 0.10, 0.21, 0.00, 0.06, 0.19, 0.37, 0.02, 0.04, 0.05, 0.13, 0.07, 0.01, 0.11, 0.10, 0.11, 0.08, 0.06, 0.10, 0.11, 0.09, 0.14, 0.25, 0.13, 0.04, 0.08, 0.10, 0.16, 0.25, 0.32, 0.19, 0.03, 0.22, 0.09, 0.13, 0.02, 0.29, 0.15, 0.07, 0.22, 0.07, 0.02, 0.33, 0.26, 0.04, 0.25, 0.21, 0.03, 0.06, 0.02, 0.00, 0.03, 0.01, 0.00, 0.01, 0.01, 0.00, 0.00, 0.01, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.01, 0.00, 0.01, 0.00, 0.02, 0.05, 0.06, 0.03, 0.07, 0.03, 0.03, 0.00, 0.03, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.04, 0.38, 0.29, 0.65, 0.34, 0.80, 0.56, 0.43, 1.00, 0.28, 0.34, 0.42, 0.86, 0.06, 0.30, 0.13, 0.01, 0.51, 0.09, 0.21, 0.26, 0.02, 0.65, 0.01, 0.16, 0.01, 0.32, 0.73, 0.05, 0.05, 0.06, 0.04, 0.14, 0.53, 0.13, 0.08, 0.20, 0.05, 0.04, 0.01, 0.07, 0.00, 0.01, 0.03, 0.01, 0.01, 0.01, 0.00, 0.15, 0.14, 0.07, 0.11, 0.05, 0.10, 0.03, 0.07, 0.14, 0.01, 0.01, 0.07, 0.08, 0.01, 0.04, 0.09, 0.16, 0.15, 0.14, 0.14, 0.15, 0.06, 0.11, 0.09, 0.15, 0.17, 0.02, 0.07, 0.02, 0.02, 0.00, 0.04, 0.07, 0.03, 0.47, 0.21, 0.05, 0.21, 0.45, 0.14, 0.19, 0.44, 0.18, 0.12, 0.27, 0.08, 0.32, 0.42, 0.02, 0.25, 0.28, 0.12, 0.04, 0.14, 0.19, 0.15, 0.04, 0.10, 0.20, 0.17, 0.06, 0.01, 0.02, 0.02, 0.04, 0.03, 0.01, 0.02, 0.02, 0.03, 0.01, 0.04, 0.03, 0.10, 0.16, 0.17, 0.32, 0.04, 0.63, 0.02, 0.16, 0.09, 0.09, 0.10, 0.24, 0.07, 0.02, 0.05, 0.04, 0.01, 0.05, 0.02, 0.04, 0.02, 0.01, 0.04, 0.00, 0.01, 0.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book5_wrong1" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.04, 0.10, 0.38, 0.75, 0.62, 0.04, 0.77, 0.70, 0.89, 0.91, 1.00, 0.98, 0.66, 0.49, 0.37, 0.38, 0.23, 0.41, 0.26, 0.34, 0.24, 0.07, 0.18, 0.27, 0.32, 0.04, 0.15, 0.05, 0.52, 0.31, 0.18, 0.09, 0.22, 0.27, 0.27, 0.08, 0.03, 0.31, 0.11, 0.10, 0.10, 0.11, 0.05, 0.01, 0.01, 0.01, 0.06, 0.02, 0.01, 0.03, 0.02, 0.00, 0.08, 0.13, 0.04, 0.51, 0.45, 0.03, 0.32, 0.13, 0.34, 0.35, 0.44, 0.47, 0.44, 0.43, 0.30, 0.06, 0.16, 0.25, 0.31, 0.06, 0.11, 0.03, 0.11, 0.03, 0.03, 0.05, 0.02, 0.00, 0.01, 0.05, 0.02, 0.01, 0.00, 0.07, 0.04, 0.02, 0.08, 0.05, 0.11, 0.18, 0.53, 0.83, 0.48, 0.15, 0.53, 0.62, 0.29, 0.02, 0.42, 0.65, 0.28, 0.37, 0.71, 0.70, 0.35, 0.12, 0.39, 0.56, 0.49, 0.42, 0.30, 0.10, 0.14, 0.01, 0.04, 0.04, 0.02, 0.07, 0.05, 0.00, 0.09, 0.14, 0.34, 0.22, 0.34, 0.23, 0.08, 0.35, 0.29, 0.35, 0.09, 0.23, 0.51, 0.34, 0.05, 0.24, 0.27, 0.33, 0.07, 0.27, 0.50, 0.28, 0.05, 0.37, 0.34, 0.26, 0.04, 0.19, 0.29, 0.18, 0.10, 0.10, 0.28, 0.36, 0.18, 0.10, 0.28, 0.26, 0.23, 0.06, 0.23, 0.39, 0.22, 0.13, 0.57, 0.32, 0.12, 0.58, 0.31, 0.15, 0.48, 0.26, 0.02, 0.19, 0.28, 0.34, 0.15, 0.16, 0.42, 0.30, 0.12, 0.03, 0.21, 0.44, 0.29, 0.04, 0.16, 0.24, 0.49, 0.30, 0.13, 0.40, 0.24, 0.31, 0.08, 0.23, 0.66, 0.40, 0.15, 0.68, 0.43, 0.09, 0.55, 0.31, 0.01, 0.28, 0.18, 0.29, 0.14, 0.17, 0.43, 0.23, 0.08, 0.08, 0.24, 0.52, 0.28, 0.12, 0.34, 0.22, 0.45, 0.25, 0.21, 0.40, 0.21, 0.50, 0.30, 0.08, 0.08, 0.20, 0.44, 0.18, 0.43, 0.29, 0.36, 0.38, 0.49, 0.36, 0.43, 0.38, 0.33, 0.37, 0.36, 0.29, 0.18, 0.23, 0.15, 0.19, 0.06, 0.36, 0.47, 0.41, 0.42, 0.30, 0.10, 0.18, 0.26, 0.37, 0.41, 0.43, 0.29, 0.28, 0.31, 0.25, 0.24, 0.36, 0.43, 0.34, 0.36, 0.28, 0.00, 0.10, 0.35, 0.36, 0.38, 0.41, 0.30, 0.32, 0.30, 0.08, 0.02, 0.33, 0.41, 0.42, 0.44, 0.35, 0.34, 0.31, 0.26, 0.21, 0.37, 0.46, 0.41, 0.47, 0.39, 0.05, 0.05, 0.31, 0.36, 0.38, 0.52, 0.37, 0.01, 0.03, 0.26, 0.43, 0.32, 0.26, 0.20, 0.13, 0.25, 0.30, 0.46, 0.36, 0.05, 0.03, 0.37, 0.49, 0.49, 0.52, 0.33, 0.23, 0.34, 0.47, 0.62, 0.38, 0.15, 0.46, 0.47, 0.18, 0.10, 0.43, 0.53, 0.24, 0.24, 0.58, 0.42, 0.15, 0.54, 0.39, 0.18, 0.52, 0.28, 0.19, 0.28, 0.05, 0.16, 0.09, 0.14, 0.15, 0.13, 0.20, 0.07, 0.25, 0.07, 0.14, 0.12, 0.09, 0.14, 0.00, 0.12, 0.08, 0.02, 0.04, 0.01, 0.00, 0.01, 0.07, 0.06, 0.04, 0.07, 0.01, 0.03, 0.00, 0.05, 0.04, 0.02, 0.00, 0.04, 0.01, 0.03, 0.00, 0.00, 0.00, 0.01, 0.01, 0.02, 0.02, 0.02, 0.01, 0.00, 0.02, 0.00, 0.00, 0.01, 0.01, 0.01, 0.02, 0.00, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.00, 0.01, 0.01, 0.00, 0.01, 0.00, 0.01, 0.01, 0.01, 0.00, 0.01, 0.01, 0.01, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.01, 0.00, 0.01, 0.00, 0.00, 0.01, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book5_wrong2" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.03, 0.22, 0.21, 0.19, 0.22, 0.36, 0.51, 0.45, 0.13, 0.60, 0.11, 0.75, 0.02, 0.27, 0.55, 0.53, 0.56, 0.05, 0.18, 0.01, 0.12, 0.04, 0.28, 0.37, 0.24, 0.11, 0.01, 0.05, 0.04, 0.05, 0.00, 0.03, 0.02, 0.04, 0.01, 0.06, 0.07, 0.20, 0.02, 0.05, 0.17, 0.06, 0.23, 0.26, 0.27, 0.16, 0.15, 0.05, 0.28, 0.03, 0.25, 0.26, 0.41, 0.47, 0.37, 0.17, 0.19, 0.04, 0.14, 0.13, 0.25, 0.26, 0.37, 0.35, 0.32, 0.18, 0.00, 0.20, 0.30, 0.58, 0.52, 0.50, 0.40, 0.38, 0.25, 0.31, 0.26, 0.46, 0.49, 0.20, 0.21, 0.24, 0.13, 0.15, 0.24, 0.06, 0.07, 0.01, 0.13, 0.10, 0.04, 0.09, 0.07, 0.03, 0.01, 0.02, 0.20, 0.41, 0.17, 0.09, 0.03, 0.05, 0.03, 0.01, 0.00, 0.10, 0.05, 0.01, 0.05, 0.03, 0.03, 0.17, 0.19, 0.05, 0.03, 0.01, 0.04, 0.01, 0.00, 0.00, 0.02, 0.04, 0.01, 0.01, 0.01, 0.02, 0.03, 0.02, 0.02, 0.02, 0.02, 0.01, 0.00, 0.01, 0.01, 0.01, 0.01, 0.00, 0.01, 0.00, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.00, 0.00, 0.01, 0.01, 0.00, 0.01, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.04, 0.22, 0.42, 1.00, 0.02, 0.27, 0.55, 0.85, 0.10, 0.47, 0.13, 0.73, 0.10, 0.37, 0.10, 0.53, 0.37, 0.39, 0.72, 0.03, 0.30, 0.16, 0.49, 0.33, 0.45, 0.71, 0.14, 0.24, 0.27, 0.71, 0.25, 0.34, 0.33, 0.37, 0.39, 0.41, 0.56, 0.00, 0.20, 0.14, 0.03, 0.02, 0.00, 0.02, 0.02, 0.00, 0.02, 0.02, 0.01, 0.23, 0.17, 0.24, 0.32, 0.16, 0.08, 0.26, 0.44, 0.12, 0.02, 0.07, 0.05, 0.04, 0.03, 0.02, 0.02, 0.04, 0.01, 0.01, 0.14, 0.18, 0.57, 0.31, 0.12, 0.18, 0.78, 0.37, 0.01, 0.35, 0.85, 0.38, 0.11, 0.05, 0.56, 0.36, 0.33, 0.43, 0.02, 0.13, 0.08, 0.02, 0.02, 0.01, 0.04, 0.01, 0.03, 0.07, 0.13, 0.36, 0.23, 0.25, 0.17, 0.09, 0.28, 0.09, 0.15, 0.18, 0.30, 0.32, 0.06, 0.04, 0.00, 0.06, 0.06, 0.05, 0.02, 0.14, 0.13, 0.43, 0.02, 0.16, 0.04, 0.19, 0.35, 0.02, 0.25, 0.30, 0.06, 0.08, 0.05, 0.00, 0.01, 0.01, 0.04, 0.01, 0.02, 0.00, 0.00, 0.01, 0.00, 0.01, 0.00, 0.01, 0.01, 0.00, 0.01, 0.01, 0.01, 0.00, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.06, 0.21, 0.27, 0.33, 0.01, 0.45, 0.15, 0.76, 0.09, 0.07, 0.04, 0.02, 0.06, 0.05, 0.01, 0.05, 0.12, 0.04, 0.30, 0.06, 0.28, 0.22, 0.16, 0.09, 0.04, 0.06, 0.09, 0.14, 0.27, 0.19, 0.21, 0.18, 0.30, 0.20, 0.06, 0.12, 0.15, 0.09, 0.03, 0.02, 0.04, 0.04, 0.03, 0.00, 0.02, 0.00, 0.00, 0.01, 0.00, 0.01, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book5_wrong3" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.02, 0.03, 0.01, 0.21, 0.57, 0.80, 1.00, 0.70, 0.47, 0.04, 0.36, 0.81, 0.98, 0.70, 0.35, 0.06, 0.55, 0.78, 0.96, 0.89, 0.52, 0.28, 0.01, 0.22, 0.37, 0.40, 0.56, 0.38, 0.21, 0.01, 0.16, 0.35, 0.28, 0.12, 0.18, 0.16, 0.07, 0.23, 0.24, 0.03, 0.29, 0.02, 0.16, 0.03, 0.20, 0.04, 0.23, 0.00, 0.34, 0.10, 0.15, 0.21, 0.14, 0.04, 0.00, 0.07, 0.02, 0.01, 0.01, 0.06, 0.06, 0.03, 0.01, 0.02, 0.00, 0.01, 0.01, 0.00, 0.00, 0.02, 0.00, 0.02, 0.02, 0.05, 0.10, 0.17, 0.23, 0.25, 0.23, 0.25, 0.25, 0.25, 0.23, 0.19, 0.19, 0.11, 0.03, 0.01, 0.05, 0.05, 0.01, 0.06, 0.02, 0.02, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.02, 0.00, 0.01, 0.01, 0.01, 0.06, 0.01, 0.05, 0.06, 0.10, 0.23, 0.31, 0.04, 0.04, 0.51, 0.48, 0.36, 0.32, 0.07, 0.33, 0.46, 0.39, 0.02, 0.21, 0.35, 0.29, 0.05, 0.14, 0.14, 0.10, 0.16, 0.09, 0.06, 0.03, 0.05, 0.03, 0.04, 0.04, 0.02, 0.00, 0.02, 0.00, 0.01, 0.00, 0.04, 0.02, 0.03, 0.02, 0.01, 0.10, 0.21, 0.52, 0.73, 0.51, 0.24, 0.42, 0.42, 0.42, 0.30, 0.30, 0.78, 0.50, 0.18, 0.34, 0.36, 0.29, 0.14, 0.35, 0.70, 0.44, 0.27, 0.48, 0.39, 0.09, 0.02, 0.35, 0.61, 0.39, 0.27, 0.69, 0.49, 0.12, 0.30, 0.36, 0.36, 0.24, 0.32, 0.74, 0.48, 0.19, 0.45, 0.45, 0.20, 0.05, 0.35, 0.70, 0.47, 0.25, 0.47, 0.40, 0.20, 0.05, 0.38, 0.63, 0.35, 0.24, 0.48, 0.36, 0.13, 0.28, 0.30, 0.16, 0.01, 0.33, 0.48, 0.24, 0.29, 0.60, 0.39, 0.20, 0.43, 0.36, 0.05, 0.11, 0.35, 0.53, 0.33, 0.22, 0.48, 0.41, 0.13, 0.03, 0.29, 0.62, 0.47, 0.11, 0.30, 0.36, 0.42, 0.29, 0.28, 0.40, 0.38, 0.30, 0.08, 0.22, 0.37, 0.32, 0.12, 0.10, 0.17, 0.09, 0.00, 0.03, 0.00, 0.01, 0.00, 0.00, 0.00, 0.02, 0.02, 0.01, 0.00, 0.01, 0.03, 0.01, 0.02, 0.06, 0.13, 0.19, 0.27, 0.27, 0.12, 0.42, 0.50, 0.34, 0.16, 0.06, 0.29, 0.39, 0.13, 0.09, 0.25, 0.27, 0.05, 0.36, 0.18, 0.08, 0.23, 0.26, 0.03, 0.28, 0.18, 0.06, 0.20, 0.39, 0.29, 0.15, 0.48, 0.30, 0.04, 0.32, 0.45, 0.11, 0.30, 0.40, 0.21, 0.25, 0.47, 0.24, 0.24, 0.56, 0.38, 0.22, 0.52, 0.41, 0.08, 0.25, 0.32, 0.33, 0.13, 0.28, 0.39, 0.20, 0.14, 0.34, 0.26, 0.09, 0.23, 0.24, 0.02, 0.13, 0.26, 0.13, 0.04, 0.26, 0.33, 0.14, 0.27, 0.41, 0.23, 0.15, 0.30, 0.15, 0.08, 0.18, 0.14, 0.01, 0.17, 0.18, 0.02, 0.16, 0.13, 0.01, 0.13, 0.13, 0.02, 0.14, 0.10, 0.05, 0.13, 0.09, 0.06, 0.19, 0.16, 0.06, 0.32, 0.34, 0.10, 0.05, 0.28, 0.32, 0.25, 0.35, 0.25, 0.24, 0.29, 0.14, 0.15, 0.03, 0.02, 0.02, 0.07, 0.00, 0.05, 0.04, 0.01, 0.01, 0.05, 0.05, 0.00, 0.01, 0.01, 0.05, 0.01, 0.02, 0.02, 0.01, 0.02, 0.00, 0.00, 0.01, 0.01, 0.01, 0.00, 0.01, 0.01, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book6_start" : [0.00, 0.07, 0.18, 0.71, 0.05, 0.32, 0.29, 0.25, 0.93, 0.10, 0.31, 0.05, 0.11, 0.57, 0.70, 0.33, 0.01, 0.19, 0.24, 0.36, 0.36, 0.06, 0.01, 0.01, 0.09, 0.00, 0.18, 0.18, 0.73, 0.32, 0.32, 1.00, 0.31, 0.07, 0.64, 0.14, 0.28, 0.08, 0.09, 0.24, 0.59, 0.28, 0.22, 0.03, 0.01, 0.03, 0.32, 0.14, 0.29, 0.08, 0.57, 0.74, 0.63, 0.56, 0.69, 0.56, 0.49, 0.34, 0.18, 0.13, 0.04, 0.04, 0.01, 0.24, 0.86, 0.32, 0.10, 0.19, 0.04, 0.26, 0.09, 0.04, 0.04, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.27, 0.69, 0.79, 0.19, 0.80, 0.46, 0.94, 0.10, 0.09, 0.07, 0.06, 0.25, 0.57, 0.31, 0.34, 0.40, 0.03, 0.00, 0.03, 0.20, 0.16, 0.17, 0.55, 0.05, 0.00, 0.05, 0.07, 0.04, 0.00, 0.40, 0.06, 0.69, 0.08, 0.26, 0.04, 0.06, 0.05, 0.02, 0.04, 0.04, 0.01, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.05, 0.04, 0.04, 0.00, 0.18, 0.12, 0.18, 0.50, 0.38, 0.25, 0.26, 0.01, 0.04, 0.04, 0.02, 0.07, 0.17, 0.13, 0.23, 0.00, 0.10, 0.09, 0.59, 0.12, 0.17, 0.40, 0.47, 0.14, 0.05, 0.12, 0.21, 0.12, 0.01, 0.04, 0.04, 0.01, 0.01, 0.00, 0.00, 0.01, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.06, 0.39, 0.37, 0.08, 0.17, 0.35, 0.02, 0.09, 0.54, 0.03, 0.16, 0.02, 0.01, 0.07, 0.05, 0.02, 0.31, 0.52, 0.13, 0.11, 0.10, 0.02, 0.01, 0.39, 0.06, 0.25, 0.38, 0.09, 0.26, 0.15, 0.35, 0.44, 0.09, 0.06, 0.23, 0.10, 0.23, 0.04, 0.15, 0.11, 0.11, 0.04, 0.05, 0.06, 0.11, 0.06, 0.02, 0.05, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.18, 0.26, 0.09, 0.13, 0.06, 0.13, 0.07, 0.12, 0.21, 0.32, 0.11, 0.07, 0.46, 0.44, 0.44, 0.26, 0.20, 0.08, 0.09, 0.04, 0.80, 0.22, 0.16, 0.21, 0.08, 0.01, 0.07, 0.10, 0.22, 0.32, 0.11, 0.46, 0.24, 0.08, 0.03, 0.40, 0.15, 0.09, 0.11, 0.26, 0.55, 0.25, 0.14, 0.19, 0.10, 0.03, 0.14, 0.04, 0.13, 0.03, 0.11, 0.16, 0.09, 0.06, 0.04, 0.17, 0.35, 0.03, 0.09, 0.01, 0.01, 0.08, 0.06, 0.03, 0.15, 0.11, 0.01, 0.07, 0.05, 0.07, 0.02, 0.00, 0.00, 0.04, 0.00, 0.01, 0.01, 0.01, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.45, 0.46, 0.51, 0.14, 0.26, 0.47, 0.02, 0.14, 0.02, 0.38, 0.28, 0.59, 0.30, 0.35, 0.12, 0.10, 0.06, 0.19, 0.37, 0.14, 0.19, 0.03, 0.12, 0.28, 0.20, 0.16, 0.09, 0.08, 0.06, 0.03, 0.02, 0.00, 0.01, 0.47, 0.49, 0.41, 0.25, 0.33, 0.44, 0.22, 0.64, 0.09, 0.03, 0.03, 0.01, 0.01, 0.06, 0.31, 0.18, 0.52, 0.61, 0.08, 0.06, 0.01, 0.00, 0.01, 0.04, 0.31, 0.01, 0.20, 0.06, 0.13, 0.52, 0.13, 0.07, 0.58, 0.17, 0.09, 0.03, 0.05, 0.01, 0.09, 0.05, 0.06, 0.01, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.22, 0.39, 0.10, 0.09, 0.04, 0.10, 0.22, 0.06, 0.12, 0.24, 0.04, 0.19, 0.23, 0.04, 0.21, 0.18, 0.02, 0.38, 0.49, 0.08, 0.15, 0.09, 0.02, 0.10, 0.06, 0.17, 0.13, 0.17, 0.47, 0.20, 0.03, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.03, 0.25, 0.40, 0.23, 0.15, 0.13, 0.04, 0.07, 0.06, 0.08, 0.27, 0.12, 0.03, 0.37, 0.10, 0.46, 0.13, 0.07, 0.04, 0.26, 0.34, 0.08, 0.03, 0.47, 0.29, 0.11, 0.07, 0.01, 0.01, 0.06, 0.02, 0.02, 0.02, 0.00, 0.00],
    "book6_right" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.03, 0.02, 0.13, 0.00, 0.00, 0.06, 0.09, 0.03, 0.08, 0.05, 0.02, 0.04, 0.00, 0.07, 0.06, 0.02, 0.12, 0.07, 0.06, 0.04, 0.02, 0.07, 0.00, 0.08, 0.09, 0.10, 0.07, 0.17, 0.06, 0.10, 0.06, 0.02, 0.04, 0.04, 0.06, 0.01, 0.01, 0.14, 0.09, 0.16, 0.03, 0.38, 0.19, 0.63, 0.47, 0.29, 0.11, 0.01, 0.01, 0.05, 0.03, 0.08, 0.07, 0.04, 0.03, 0.04, 0.04, 0.01, 0.04, 0.07, 0.07, 0.06, 0.04, 0.05, 0.05, 0.07, 0.06, 0.05, 0.00, 0.06, 0.02, 0.06, 0.03, 0.02, 0.01, 0.02, 0.02, 0.04, 0.03, 0.01, 0.04, 0.10, 0.12, 0.09, 0.01, 0.04, 0.02, 0.04, 0.05, 0.04, 0.00, 0.02, 0.02, 0.00, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.00, 0.00, 0.02, 0.04, 0.04, 0.00, 0.03, 0.44, 0.48, 0.37, 0.72, 0.46, 0.26, 0.63, 0.45, 0.36, 0.33, 0.28, 0.59, 0.32, 0.16, 0.45, 0.15, 0.86, 0.19, 0.83, 0.20, 0.78, 0.38, 0.51, 0.40, 0.72, 0.54, 0.03, 0.78, 0.16, 0.72, 0.39, 0.21, 0.16, 0.18, 0.13, 0.09, 0.01, 0.08, 0.04, 0.03, 0.20, 0.13, 0.18, 0.05, 0.28, 0.31, 0.20, 0.32, 0.06, 0.26, 0.53, 1.00, 0.27, 0.77, 0.70, 0.26, 0.56, 0.07, 0.32, 0.03, 0.17, 0.01, 0.04, 0.05, 0.00, 0.04, 0.04, 0.01, 0.03, 0.11, 0.14, 0.32, 0.17, 0.06, 0.14, 0.04, 0.01, 0.16, 0.14, 0.07, 0.14, 0.03, 0.06, 0.07, 0.01, 0.05, 0.03, 0.05, 0.04, 0.02, 0.02, 0.04, 0.01, 0.03, 0.05, 0.07, 0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.02, 0.01, 0.00, 0.01, 0.07, 0.19, 0.21, 0.04, 0.16, 0.11, 0.31, 0.39, 0.23, 0.22, 0.32, 0.21, 0.12, 0.19, 0.24, 0.29, 0.30, 0.26, 0.74, 0.37, 0.14, 0.55, 0.40, 0.31, 0.28, 0.40, 0.33, 0.67, 0.10, 0.21, 0.15, 0.30, 0.33, 0.09, 0.31, 0.27, 0.05, 0.02, 0.31, 0.38, 0.13, 0.17, 0.24, 0.12, 0.08, 0.21, 0.09, 0.00, 0.02, 0.00, 0.06, 0.02, 0.03, 0.01, 0.06, 0.02, 0.03, 0.06, 0.08, 0.09, 0.12, 0.13, 0.04, 0.38, 0.35, 0.19, 0.43, 0.38, 0.08, 0.04, 0.05, 0.09, 0.11, 0.07, 0.05, 0.07, 0.03, 0.04, 0.02, 0.04, 0.01, 0.20, 0.43, 0.40, 0.16, 0.44, 0.02, 0.12, 0.09, 0.28, 0.04, 0.00, 0.08, 0.52, 0.24, 0.11, 0.67, 0.71, 0.13, 0.34, 0.28, 0.10, 0.14, 0.04, 0.09, 0.07, 0.17, 0.22, 0.37, 0.36, 0.13, 0.01, 0.07, 0.21, 0.25, 0.74, 0.58, 0.46, 0.84, 0.21, 0.50, 0.33, 0.27, 0.63, 0.54, 0.13, 0.47, 0.74, 0.24, 0.01, 0.00, 0.11, 0.05, 0.12, 0.04, 0.13, 0.02, 0.05, 0.01, 0.11, 0.03, 0.05, 0.01, 0.01, 0.07, 0.06, 0.19, 0.20, 0.30, 0.37, 0.01, 0.27, 0.13, 0.01, 0.16, 0.10, 0.37, 0.28, 0.09, 0.46, 0.80, 0.19, 0.55, 0.33, 0.29, 0.26, 0.11, 0.13, 0.02, 0.03, 0.01, 0.02, 0.06, 0.13, 0.31, 0.62, 0.35, 0.23, 0.52, 0.01, 0.41, 0.06, 0.21, 0.02, 0.07, 0.07, 0.01, 0.01, 0.01, 0.01, 0.02, 0.05, 0.01, 0.01, 0.03, 0.01, 0.01, 0.00, 0.00, 0.01, 0.02, 0.01, 0.01, 0.00, 0.01, 0.00],
    "book6_wrong1" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.11, 0.10, 0.21, 0.47, 0.16, 0.09, 0.14, 0.07, 0.02, 0.07, 0.08, 0.09, 0.13, 0.37, 0.05, 0.38, 0.33, 0.04, 0.33, 0.38, 0.44, 0.41, 0.47, 0.38, 0.39, 0.27, 0.20, 0.09, 0.13, 0.41, 0.31, 0.06, 0.23, 0.12, 0.14, 0.06, 0.06, 0.14, 0.02, 0.04, 0.01, 0.14, 0.06, 0.18, 0.16, 0.11, 0.18, 0.04, 0.00, 0.45, 0.15, 0.32, 0.27, 0.63, 0.04, 0.35, 0.14, 0.01, 0.14, 0.19, 0.10, 0.08, 0.10, 0.02, 0.06, 0.02, 0.03, 0.04, 0.00, 0.14, 0.02, 0.25, 0.09, 0.01, 0.05, 0.17, 0.10, 0.04, 0.18, 0.07, 0.23, 0.04, 0.12, 0.13, 0.09, 0.11, 0.11, 0.05, 0.05, 0.00, 0.00, 0.02, 0.01, 0.09, 0.00, 0.01, 0.13, 0.31, 0.12, 0.10, 0.71, 0.39, 0.44, 0.70, 0.19, 0.34, 0.70, 0.46, 0.10, 0.55, 0.52, 0.08, 0.12, 0.01, 0.03, 0.09, 0.05, 0.02, 0.05, 0.04, 0.02, 0.01, 0.06, 0.02, 0.00, 0.01, 0.06, 0.51, 0.02, 0.07, 0.24, 0.12, 0.02, 0.01, 0.21, 0.56, 0.30, 0.26, 0.09, 0.14, 0.19, 0.14, 0.60, 0.02, 0.01, 0.13, 0.14, 0.22, 0.26, 0.59, 0.07, 0.24, 0.23, 0.02, 0.76, 0.05, 0.30, 0.09, 0.20, 0.06, 0.11, 0.46, 0.66, 0.84, 0.51, 0.39, 0.09, 0.22, 0.15, 0.19, 0.22, 0.16, 0.11, 0.02, 0.03, 0.00, 0.11, 0.01, 0.09, 0.04, 0.06, 0.04, 0.14, 0.09, 0.04, 0.02, 0.03, 0.06, 0.02, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.03, 0.01, 0.01, 0.04, 0.06, 0.04, 0.02, 0.32, 0.61, 0.55, 0.41, 0.01, 0.29, 0.70, 0.60, 0.32, 0.35, 0.49, 0.90, 0.70, 0.57, 0.35, 0.37, 0.17, 0.26, 0.00, 0.13, 0.13, 0.04, 0.29, 0.15, 0.48, 0.43, 0.45, 0.46, 0.34, 0.13, 0.01, 0.38, 0.52, 0.32, 0.03, 0.07, 0.43, 0.52, 0.14, 0.08, 0.02, 0.31, 0.42, 0.04, 0.37, 0.27, 0.08, 0.09, 0.31, 0.30, 0.08, 0.16, 0.11, 0.09, 0.13, 0.12, 0.01, 0.04, 0.09, 0.01, 0.07, 0.46, 0.54, 0.80, 0.83, 1.00, 0.88, 0.87, 0.66, 0.65, 0.48, 0.52, 0.40, 0.47, 0.38, 0.50, 0.42, 0.52, 0.34, 0.37, 0.14, 0.10, 0.04, 0.20, 0.40, 0.81, 0.55, 0.18, 0.30, 0.56, 0.38, 0.17, 0.35, 0.27, 0.10, 0.00, 0.02, 0.03, 0.01, 0.00, 0.01, 0.05, 0.02, 0.05, 0.01, 0.05, 0.28, 0.30, 0.03, 0.27, 0.00, 0.22, 0.27, 0.02, 0.08, 0.03, 0.04, 0.02, 0.01, 0.08, 0.03, 0.01, 0.01, 0.12, 0.16, 0.15, 0.33, 0.08, 0.03, 0.56, 0.34, 0.40, 0.39, 0.23, 0.28, 0.26, 0.09, 0.17, 0.11, 0.31, 0.01, 0.21, 0.17, 0.07, 0.12, 0.24, 0.06, 0.10, 0.06, 0.05, 0.54, 0.21, 0.25, 0.12, 0.06, 0.00, 0.05, 0.04, 0.02, 0.01, 0.04, 0.08, 0.01, 0.00, 0.04, 0.07, 0.14, 0.06, 0.17, 0.18, 0.22, 0.43, 0.08, 0.09, 0.04, 0.18, 0.03, 0.08, 0.08, 0.09, 0.04, 0.11, 0.11, 0.11, 0.07, 0.03, 0.09, 0.14, 0.39, 0.08, 0.26, 0.01, 0.08, 0.03, 0.04, 0.01, 0.25, 0.27, 0.12, 0.04, 0.04, 0.01, 0.01, 0.06, 0.09, 0.09, 0.07, 0.05, 0.03, 0.04, 0.00, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book6_wrong2" : [0.00, 0.00, 0.00, 0.04, 0.05, 0.16, 0.32, 0.62, 0.39, 0.07, 0.24, 0.25, 0.09, 0.09, 0.14, 0.01, 0.20, 0.08, 0.03, 0.42, 0.46, 0.50, 0.37, 0.16, 0.12, 0.00, 0.09, 0.12, 0.04, 0.01, 0.01, 0.04, 0.02, 0.03, 0.04, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.00, 0.36, 0.56, 0.13, 0.41, 0.62, 0.08, 0.49, 0.43, 0.23, 0.51, 0.06, 0.48, 0.39, 0.11, 0.50, 0.67, 0.44, 0.43, 0.39, 0.09, 0.11, 0.10, 0.08, 0.03, 0.08, 0.06, 0.06, 0.25, 0.56, 0.70, 0.32, 0.27, 0.32, 0.10, 0.23, 0.06, 0.16, 0.04, 0.05, 0.20, 0.21, 0.15, 0.33, 0.31, 0.23, 0.19, 0.07, 0.05, 0.18, 0.10, 0.10, 0.20, 0.18, 0.29, 0.07, 0.14, 0.21, 0.41, 0.03, 0.24, 0.19, 0.08, 0.06, 0.01, 0.02, 0.01, 0.04, 0.06, 0.02, 0.01, 0.09, 0.06, 0.02, 0.04, 0.05, 0.03, 0.02, 0.03, 0.02, 0.01, 0.05, 0.05, 0.02, 0.04, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.05, 0.07, 0.04, 0.14, 0.52, 0.53, 0.15, 0.14, 0.05, 0.13, 0.06, 0.02, 0.31, 0.26, 0.06, 0.09, 0.04, 0.14, 0.04, 0.03, 0.11, 0.08, 0.08, 0.04, 0.48, 0.46, 0.11, 0.25, 0.01, 0.29, 0.01, 0.19, 0.11, 0.01, 0.10, 0.00, 0.07, 0.12, 0.21, 0.09, 0.17, 0.13, 0.04, 0.19, 0.05, 0.00, 0.12, 0.28, 0.10, 0.17, 0.26, 0.04, 0.19, 0.15, 0.03, 0.17, 0.25, 0.02, 0.38, 0.23, 0.17, 0.37, 0.12, 0.03, 0.23, 0.16, 0.24, 0.07, 0.16, 0.11, 0.12, 0.08, 0.06, 0.01, 0.08, 0.10, 0.05, 0.14, 0.05, 0.14, 0.15, 0.02, 0.06, 0.07, 0.09, 0.07, 0.34, 0.11, 0.21, 0.26, 0.01, 0.12, 0.03, 0.10, 0.02, 0.01, 0.00, 0.02, 0.00, 0.01, 0.05, 0.01, 0.02, 0.03, 0.03, 0.03, 0.00, 0.01, 0.01, 0.04, 0.01, 0.02, 0.01, 0.02, 0.01, 0.06, 0.19, 0.01, 0.06, 0.31, 0.13, 0.06, 0.44, 0.22, 0.29, 0.23, 0.45, 0.57, 0.46, 0.27, 0.29, 0.32, 0.63, 0.69, 0.25, 0.36, 0.43, 0.31, 0.07, 0.20, 0.13, 0.08, 0.07, 0.35, 0.03, 0.15, 0.08, 0.01, 0.01, 0.02, 0.02, 0.01, 0.03, 0.04, 0.01, 0.02, 0.08, 0.09, 0.23, 0.03, 0.44, 0.19, 0.10, 0.02, 0.03, 0.03, 0.00, 0.03, 0.06, 0.02, 0.07, 0.00, 0.05, 0.04, 0.02, 0.05, 0.01, 0.15, 0.08, 0.03, 0.11, 0.07, 0.15, 0.21, 0.10, 0.17, 0.20, 0.10, 0.06, 0.36, 0.29, 0.23, 0.03, 0.57, 0.09, 0.62, 0.36, 0.22, 0.62, 0.34, 0.39, 0.14, 0.01, 0.25, 0.24, 0.14, 0.00, 0.09, 0.04, 0.05, 0.02, 0.05, 0.04, 0.01, 0.05, 0.07, 0.03, 0.13, 0.49, 0.73, 0.48, 0.29, 0.48, 0.41, 0.12, 0.56, 0.62, 0.07, 0.19, 0.31, 0.41, 0.16, 0.13, 0.32, 0.97, 0.98, 0.52, 0.41, 0.66, 0.63, 0.50, 0.47, 0.46, 0.51, 0.57, 0.59, 0.41, 0.06, 0.20, 0.32, 0.02, 0.14, 0.12, 0.07, 0.13, 0.02, 0.16, 0.31, 0.28, 0.13, 0.02, 0.13, 0.46, 0.26, 0.36, 0.09, 0.01, 0.76, 0.43, 0.02, 0.12, 0.65, 0.25, 0.49, 0.77, 0.29, 0.14, 0.55, 0.99, 0.29, 0.46, 0.74, 0.14, 0.00, 0.52, 1.00, 0.33, 0.03, 0.41, 0.94, 0.26, 0.07, 0.43, 0.75, 0.16, 0.37, 0.14, 0.16, 0.61, 0.27, 0.19, 0.18, 0.18, 0.69, 0.16, 0.40, 0.13, 0.03, 0.66, 0.22, 0.35, 0.26, 0.14, 0.36, 0.43, 0.01, 0.36, 0.34, 0.16, 0.45, 0.20, 0.39, 0.22, 0.12, 0.20, 0.04, 0.15, 0.09, 0.06, 0.02, 0.04, 0.01, 0.06, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    "book6_wrong3" : [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.12, 0.36, 0.20, 0.49, 0.80, 0.63, 0.17, 0.42, 0.24, 0.04, 0.35, 0.23, 0.12, 0.07, 0.14, 0.20, 0.23, 0.06, 0.05, 0.05, 0.08, 0.07, 0.07, 0.18, 0.02, 0.01, 0.03, 0.03, 0.00, 0.06, 0.04, 0.07, 0.02, 0.02, 0.05, 0.28, 0.44, 0.16, 0.18, 0.05, 0.15, 0.13, 0.00, 0.77, 0.19, 0.26, 0.08, 0.06, 0.26, 0.62, 0.33, 0.39, 0.05, 0.04, 0.13, 0.88, 0.39, 0.02, 0.33, 0.52, 0.08, 0.09, 0.06, 0.17, 0.15, 0.08, 0.14, 0.18, 0.29, 0.11, 0.36, 0.33, 0.36, 0.39, 0.70, 0.76, 0.58, 0.50, 0.20, 0.30, 0.36, 0.27, 0.34, 0.18, 0.10, 0.18, 0.03, 0.37, 0.35, 0.12, 0.06, 0.00, 0.01, 0.05, 0.05, 0.04, 0.11, 0.05, 0.03, 0.08, 0.07, 0.09, 0.03, 0.01, 0.02, 0.05, 0.08, 0.14, 0.17, 0.09, 0.01, 0.21, 0.11, 0.05, 0.31, 0.14, 0.32, 0.63, 0.59, 0.09, 0.43, 0.27, 0.13, 0.18, 0.04, 0.04, 0.04, 0.02, 0.03, 0.01, 0.04, 0.29, 0.43, 0.07, 0.47, 0.29, 0.25, 0.24, 0.19, 0.21, 0.06, 0.07, 0.10, 0.03, 0.02, 0.02, 0.00, 0.02, 0.01, 0.02, 0.00, 0.01, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.03, 0.00, 0.08, 0.13, 0.13, 0.02, 0.58, 0.69, 0.62, 0.74, 0.65, 0.31, 0.12, 0.43, 0.27, 0.24, 0.56, 0.64, 0.69, 0.56, 0.58, 0.08, 0.34, 0.03, 0.45, 0.12, 0.27, 0.50, 0.08, 0.34, 0.59, 0.30, 0.36, 0.40, 0.31, 0.06, 0.04, 0.03, 0.01, 0.02, 0.01, 0.02, 0.02, 0.01, 0.03, 0.02, 0.01, 0.01, 0.01, 0.38, 0.18, 0.43, 0.30, 0.26, 0.44, 0.00, 0.20, 0.28, 0.43, 0.19, 0.28, 0.17, 0.32, 0.03, 0.27, 0.03, 0.19, 0.16, 0.02, 0.07, 0.03, 0.00, 0.03, 0.06, 0.11, 0.11, 0.07, 0.14, 0.07, 0.22, 0.19, 0.21, 0.12, 0.05, 0.06, 0.10, 0.08, 0.08, 0.20, 0.32, 0.51, 0.02, 0.66, 0.89, 0.95, 0.83, 0.87, 0.90, 1.00, 0.72, 0.70, 0.66, 0.40, 0.27, 0.56, 0.31, 0.36, 0.00, 0.50, 0.13, 0.43, 0.38, 0.15, 0.56, 0.15, 0.51, 0.27, 0.26, 0.53, 0.30, 0.38, 0.14, 0.05, 0.33, 0.14, 0.26, 0.36, 0.08, 0.28, 0.10, 0.01, 0.07, 0.22, 0.25, 0.09, 0.04, 0.13, 0.14, 0.04, 0.01, 0.03, 0.08, 0.03, 0.01, 0.07, 0.05, 0.03, 0.07, 0.23, 0.24, 0.04, 0.22, 0.12, 0.07, 0.11, 0.00, 0.23, 0.15, 0.37, 0.18, 0.08, 0.08, 0.13, 0.11, 0.02, 0.04, 0.08, 0.09, 0.02, 0.03, 0.07, 0.13, 0.08, 0.07, 0.09, 0.02, 0.03, 0.05, 0.04, 0.02, 0.03, 0.21, 0.52, 0.29, 0.26, 0.10, 0.07, 0.14, 0.05, 0.04, 0.10, 0.04, 0.02, 0.05, 0.08, 0.04, 0.02, 0.15, 0.05, 0.58, 0.16, 0.39, 0.17, 0.12, 0.05, 0.78, 0.46, 0.00, 0.19, 0.35, 0.24, 0.10, 0.29, 0.22, 0.05, 0.04, 0.42, 0.34, 0.08, 0.13, 0.23, 0.04, 0.25, 0.52, 0.21, 0.53, 0.63, 0.42, 0.34, 0.06, 0.19, 0.02, 0.46, 0.90, 0.12, 0.03, 0.01, 0.19, 0.06, 0.06, 0.14, 0.04, 0.05, 0.02, 0.03, 0.02, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00]
    }



function easeInOutCubic(x) {
    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;
}



Analytics = function()
{





    this.goalsData = {

        'btn_start':{
            yandex:{goal:'btn_start',repeat:false},
            google:{goal:{eventCategory:'funnel',eventAction: 'first_button'},repeat:false}
        },
        'btn_sound_on':{
            google:{goal:{eventCategory:'sound',eventAction: 'on'},repeat:true}
        },
        'btn_sound_off':{
            yandex:{goal:'btn_sound_off',repeat:false},
            google:{goal:{eventCategory:'sound',eventAction: 'off'},repeat:true}

        },
        'final':{
            yandex:{goal:'final',repeat:false},
        },
        'btn_product':{
            yandex:{goal:'btn_product',repeat:false},
            google:{goal:{eventCategory: 'funnel', eventAction: 'last_button'},repeat:false}

        },
        'success_1':{
            yandex:{goal:'success_1',repeat:false}

        },
        'success_3':{
            yandex:{goal:'success_3',repeat:false}

        },
        'success_6':{
            yandex:{goal:'success_6',repeat:false}

        },
        'time_30sec':{
            google:{goal:{eventCategory: 'time_on_site', eventAction: '30sec'},repeat:false}
        },
        'time_60sec':{
            google:{goal:{eventCategory: 'time_on_site', eventAction: '60sec'},repeat:false}
        }



    }

    for (let i=0;i<7;i++)
    {
        this.goalsData['book'+(i+1)+'_clicked'] = {
            yandex:{goal:'book_clicked',repeat:false},
            google:{goal:{eventCategory:'book',eventAction: 'click',eventLabel: (i+1).toString()},repeat:false}
        }

        this.goalsData['book'+(i+1)+'_right'] = {
            google:{goal:{eventCategory:'book_answer',eventAction: 'right',eventLabel: (i+1).toString()},repeat:false}
        }

        this.goalsData['book'+(i+1)+'_wrong'] = {
            yandex:{goal:'fail_'+(i+1),repeat:false},
            google:{goal:{eventCategory:'book_answer',eventAction: 'fail',eventLabel: (i+1).toString()},repeat:false}
        }


    }


    for (const [key, value] of Object.entries(this.goalsData)) {

        if ('yandex' in value)
            value['yandex']['sent'] = false;

        if ('google' in value)
            value['google']['sent'] = false;
    }


    console.log(this.goalsData)

    this.hitGoal = function (goalId) {

        console.log(goalId);
        if ('yandex' in this.goalsData[goalId])
        {

            if (this.goalsData[goalId]['yandex'].repeat || (!this.goalsData[goalId]['yandex'].sent))
            {


                goal(this.goalsData[goalId]['yandex'].goal);
                this.goalsData[goalId]['yandex'].sent = true;
            }


        }

        if ('google' in this.goalsData[goalId])
        {
            if (this.goalsData[goalId]['google'].repeat || (!this.goalsData[goalId]['google'].sent))
                dataLayer.push(this.goalsData[goalId]['google'].goal);
                this.goalsData[goalId]['google'].sent = true;
        }
    }




}


analytics = new Analytics();


setTimeout(function() {
    analytics.hitGoal('time_30sec')
}, 30*1000);


setTimeout(function() {
    analytics.hitGoal('time_60sec')
}, 60*1000);

let scaleSprite = (sprite, ratio) => sprite.scale.set(sprite.material.map.image.width * ratio, sprite.material.map.image.height * ratio, 1);
let scaleSprite2 = (sprite, ratio1,ratio2) => sprite.scale.set(sprite.material.map.image.width * ratio1, sprite.material.map.image.height * ratio2, 1);

let meshPlane = (texture) => new THREE.Mesh(new THREE.PlaneBufferGeometry(texture.map.image.width, texture.map.image.height), texture);
let scaleMeshPlane = (mesh, ratio) => mesh.scale.set(ratio, ratio, 1);




const clock = new THREE.Clock();
const mouse = new THREE.Vector2();
const raycaster = new THREE.Raycaster();


barrelPosition = 0;
barrelMaxPosition = 6;
touchStartY = 0;
touchOffsetY = 0;
barrelTopY = 400;


barrelStateIndex = {
    6:[-3,-2,-1,0,1,2,3],
    5:[-3,-2,-1,0,1,2],
    4:[-2,-1,0,1,2],
    3:[-2,-1,0,1],
    2:[-1,0,1],
    1:[-1,0],
    0:[0]
}

//const whiteMaterial = new THREE.MeshBasicMaterial( { color: 0xffffff } )


//const whiteTextMaterial = new THREE.MeshBasicMaterial( { color: 0xffffff ,transparent:true} )



const UIField = new THREE.Object3D();



let bookEndX = 0;
let bookEndY = {"desktop":0,"mobile":100}

let screenType = "mobile";


Text3D = function(text,fontType,x,y,z,spacing,size,canClick,startColor,alignCenter) {





    this.cross = [];
    this.crossScale = [];

    this.raycastMesh = null;

    this.obj = [];
    this.lines = [];
    this.lineNumber = 0;

    this.canClick = canClick;



    this.fontType = fontType;
    this.spacing = spacing;
    this.size = size;
    this.colorMaterial = new THREE.MeshBasicMaterial( { color: startColor ,transparent:true} );
    this.backMaterial1 = new THREE.MeshBasicMaterial( { color: startColor ,transparent:true} );
    this.backMaterial2 = new THREE.MeshBasicMaterial( { color: startColor ,transparent:true} );


    this.x = x;
    this.y = y;
    this.z = z;

    this.backOp = 0;

    this.setText = function (newText,alignCenter) {




        for (let i=0;i<this.obj.length;i++)
        {
            this.obj[i].geometry.dispose();
            this.obj[i].material.dispose();
            UIField.remove( this.obj[i] );
        }
        this.obj = [];

        this.lines = newText.split(/\r?\n/);
        this.lineNumber = this.lines.length;




        let minX = null;
        let minY = null;
        let maxX = null;
        let maxY = null;


        this.crossK = 0;

        for (let i=0;i<this.lineNumber;i++)
        {


            let txt = StorytelEuclid[this.fontType].generateShapes(this.lines[i], this.size);

            let geometry = new THREE.ShapeBufferGeometry(txt);
            let o = new THREE.Mesh(geometry, this.colorMaterial);
            o.position.set(this.x, this.y-(i-(this.lineNumber-1)/2)*this.spacing*this.size, this.z);
            geometry.computeBoundingBox();


           // console.log(geometry.boundingBox);
            minX = Math.min(minX,o.position.x-geometry.boundingBox.min.x);
            minY = Math.min(minY,o.position.y-geometry.boundingBox.min.y);
            maxX = Math.max(maxX,o.position.x+geometry.boundingBox.max.x);
            maxY = Math.max(maxY,o.position.y+geometry.boundingBox.max.y);

            let xMid = -0.5 * (geometry.boundingBox.max.x - geometry.boundingBox.min.x);
            let yMid = -0.5 * (geometry.boundingBox.max.y - geometry.boundingBox.min.y);
            geometry.translate(alignCenter ? xMid : screenType==="mobile"?-370:-370, yMid, 0);
            UIField.add(o);
            this.obj.push(o);

            if (this.canClick)
            {
                let cc = (new THREE.Mesh(new THREE.PlaneBufferGeometry(1, 1),this.colorMaterial));
                this.cross.push(cc);
                this.crossScale.push(maxX-minX);
                UIField.add(cc);
            }







        }




        if (this.canClick)
        {





             let backShape = function(width,height)
             {
                 let radius = height/2;
                 let x = -width/2;
                 let y = -height/2;

                 let shape = new THREE.Shape();
                 shape.moveTo( x, y + radius );
                 shape.lineTo( x, y + height - radius );
                 shape.quadraticCurveTo( x, y + height, x + radius, y + height );
                 shape.lineTo( x + width - radius, y + height );
                 shape.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );
                 shape.lineTo( x + width, y + radius );
                 shape.quadraticCurveTo( x + width, y, x + width - radius, y );
                 shape.lineTo( x + radius, y );
                 shape.quadraticCurveTo( x, y, x, y + radius );
                 return shape;
             }


             let ww = maxX-minX+25;
             let hh = maxY-minY+25;
             let shape1 = backShape(ww,hh);
            let shape2 = backShape(ww-4,hh-4);
            let shape3 = backShape(ww-2,hh-2);

            shape1.holes.push(shape2);

            this.back1 = new THREE.Mesh(new THREE.ShapeBufferGeometry( shape1 ),this.backMaterial1)

            this.back2 = new THREE.Mesh(new THREE.ShapeBufferGeometry( shape3 ),this.backMaterial2)


            //this.back1.rotation.x = 2;
       //     this.back1.scale.set((maxX-minX),(maxY-minY+25),1);


            UIField.add(this.back1)

            UIField.add(this.back2)
            this.back2.visible = false;

            this.raycastMesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(1, 1),
                new THREE.MeshBasicMaterial( {
                    color: 0x248f24,alphaTest:0,visible: false
                  //  transparent:true,opacity: 0.8
                }));


            this.raycastW = (maxX-minX);
            this.raycastH = (maxY-minY+35);
            this.raycastMesh.scale.set(this.raycastW,this.raycastH,1);



            UIField.add(this.raycastMesh);
        }




    }

    this.setText(text,alignCenter);


    this.right = function () {
        if (!this.updating)
        {
            this.highlightStep = 0;
            this.updating = true;

            this.ok = true;

            this.back2.visible = true;

            gsap.to(this, { duration: 1, highlightStep: 1,backOp :1,
                onComplete: function() {
                    this.updating = false;
                    //this.highlightStep = 1;
                    /*gsap.to(this, { duration: 0.5, highlightStep: 0,
                        onComplete: function() {
                            //this.highlightStep = 0;
                            this.updating = false;
                        }.bind(this)});*/
                }.bind(this)});
        }
    }


    this.updating = false;



    this.shakeX = 0;

    this.shakeY = 0;



    this.highlightStep = 0;

    this.ok = null;

    this.wrong = function () {

        if (!this.updating)
        {
            this.highlightStep = 0;
            this.updating = true;

            this.ok = false;

            gsap.to(this, { duration: 0.5, highlightStep: 1,
                onComplete: function() {

                    //this.highlightStep = 1;
                    gsap.to(this, { duration: 0.5, highlightStep: 0,
                        onComplete: function() {
                            //this.highlightStep = 0;
                            this.updating = false;
                        }.bind(this)});

                }.bind(this)});
        }


    }


    /*this.crossOut = function () {

        gsap.to(this, { duration: 1,easing: Power1.easeOut, crossK: 1});
    }*/


    this.hide = function () {

        gsap.to(this.colorMaterial, { duration: 2, opacity: 0});
        gsap.to(this.backMaterial1, { duration: 2, opacity: 0});
        gsap.to(this.backMaterial2, { duration: 2, opacity: 0});
    }





    this.update = function () {


        if (this.ok)
        {

            this.backMaterial2.opacity = this.backOp;
            this.shakeY = this.highlightStep*Math.sin(this.highlightStep*5*Math.PI)*5;

            this.colorMaterial.color.setRGB(
                1-(1-92/255)*this.highlightStep,
                1-(1-73/255)*this.highlightStep,
                1-(1-116/255)*this.highlightStep);
        }
        else
        {
            this.shakeX = this.highlightStep*Math.sin(this.highlightStep*10)*20;
            this.colorMaterial.color.setRGB(
                1-(1-255/255)*this.highlightStep,
                1-(1-102/255)*this.highlightStep,
                1-(1-94/255)*this.highlightStep);


            this.backMaterial1.color.set(this.colorMaterial.color);
        }
    }

    this.getRaycastMesh = function () {
        return this.raycastMesh;
    }


    this.setVisible = function (v) {
        for (let i=0;i<this.lineNumber;i++) {
            this.obj[i].visible = v;

            if (this.canClick)
            {
                this.cross[i].visible = v;
                this.back1.visible = v;
                this.back2.visible = v;
            }
        }

    }

    this.scale = 1;
    this.setScale = function (s) {

        this.scale = s;
        for (let i=0;i<this.lineNumber;i++) {
            this.obj[i].scale.set(s, s, 1);
        }

        if (this.raycastMesh) {
            this.raycastMesh.scale.set(s*this.raycastW, s*this.raycastH, 1);
            this.back1.scale.set(s, s, 1);
            this.back2.scale.set(s, s, 1);
        }



    }


    this.setOpacity = function (a) {
        this.colorMaterial.opacity = a;
        this.backMaterial1.opacity = a;
        this.backMaterial2.opacity = Math.min(this.backOp,a);
    }

    this.moveToPosition = function (x,y,z) {


        this.setPosition((this.x+x)/2,(this.y+y)/2,(this.z+z)/2);
    }




    this.setPosition = function (x,y,z) {


        let mx = 0;
        let my = 0;
        let mz = 0;
        for (let i = 0; i < this.lineNumber; i++) {

            let xx = x + this.shakeX;
            let yy = y -
                ((i - (this.lineNumber - 1) / 2) * this.spacing * this.size
                    + this.shakeY
                    + 5 * Math.cos(this.crossK / Math.PI * 20) / 2 - 0.5) * this.scale;


            this.obj[i].position.set(xx, yy, z);


            if (this.canClick) {

                this.cross[i].visible = this.crossK > 0;

                this.cross[i].position.set(xx - this.crossScale[i] / 2 + this.crossScale[i] / 2 * (this.crossK), yy - 3, z);

                this.cross[i].scale.set(this.crossScale[i] * this.crossK, 3, z);

            }

            mx += xx;
            my += yy;
            mz += z;
        }


        this.x = x;
        this.y = y;
        this.z = z;


        if (this.raycastMesh)
        {

            this.raycastMesh.position.set(mx/this.lineNumber,my/this.lineNumber,mz/this.lineNumber)
            this.back1.position.set(mx/this.lineNumber,my/this.lineNumber-2,mz/this.lineNumber-2)
            this.back2.position.set(mx/this.lineNumber,my/this.lineNumber-2,mz/this.lineNumber-4)



        }


    }

    this.getLineNumber = function () {
        return this.lineNumber;
    }
}


const eyesEmotions = {
    "start":[[0,1],[3.27+0.4-0.05,0],[10.16+0.2-0.05,1],[15.21+0.5-0.05,0]],

//    "start":[[0,1],[6.4,0],[15.16,1],[19.21,0]],

    "right":[[0,1],[2.05,0]],
    "wrong1":[[0,0]],
    "wrong2":[[0,1]],
    "wrong3":[[0,0]]
}

Book = function(index,startX,startY,startRotation,width,height,spine,vIndent,hIndent,textureData,extraMesh,name,textPosition,startText,answerText,mouthSpeed) {



    this.startText = startText;
    this.answerText = answerText;
    this.state = "ready";

    this.mouthSpeed = mouthSpeed;

    this.text = {};
    this.textPosition = textPosition;


    this.name = name;

    this.width = width
    this.height = height
    this.spine = spine

    this.vIndent = vIndent
    this.hIndent = hIndent




    this.startX = {"desktop":startX[0],"mobile":startX[0]+(index<4?225:-260)};
    this.startY = {"desktop":startY[0],"mobile":startY[0]+(index<4?-160:275)};
    this.startRotation = startRotation;
    this.index = index;



    let mainTexture = 'book'+index;

    this.modelData = [
        {name:'main_line',type:'static_low',textureId:mainTexture,
            position:[0,0,this.width/2],scale:[this.spine,this.height],rotation:[0,0,0,'XYZ']},
        {name:'front',type:'static_top',textureId:mainTexture,
            position:[this.spine/2,0,0],scale:[this.width,this.height],rotation:[0,1,0,'XYZ']},
        {name:'in_line',type:'static_low',textureId:mainTexture,
            position:[-0.1+(0.04),0,this.hIndent-this.width/2+(0.01)],scale:[this.spine-0.1,this.height-this.vIndent*2],rotation:[0,2,0,'XYZ']},
        {name:'back',type:'static_low',textureId:mainTexture,
            position:[-this.spine/2,0,0],scale:[this.width,this.height],rotation:[0,1,0,'XYZ']},
        {name:'bottom_line',type:'static_low',textureId:mainTexture,
            position:[-0.1+(0.04),-this.height/2+this.vIndent,this.hIndent/2],scale:[this.width-this.hIndent,this.spine-0.1],rotation:[1,0,-1,'XYZ']},
        {name:'inside',type:'static_low',textureId:mainTexture,
            position:[-0.1+this.spine/2,0,this.hIndent/2],scale:[this.width-this.hIndent,this.height-this.vIndent*2],rotation:[0,1,0,'XYZ']}
    ]

    this.modelData  =this.modelData.concat(extraMesh);

    textureData["glow"] = [0,0,172,524];

    this.modelData.push({name:'glow',type:'static_low',textureId:"glow",
        position:[0,0,this.width/2-20],scale:[this.spine*1.3,this.height*1.1],rotation:[0,0,0,'XYZ']})

    for (let i=0;i<this.modelData.length;i++)
    {
        let n = this.modelData[i].name;
        if (this.modelData[i].type!=="eyes")
        {
            this.modelData[i].textureX = textureData[n][0];
            this.modelData[i].textureY = textureData[n][1];
            this.modelData[i].textureW = textureData[n][2];
            this.modelData[i].textureH = textureData[n][3];
        }
        else
        {
            this.modelData[i].textureX = 0;
            this.modelData[i].textureY = 0;// textureData[n][3]/5*3;
            this.modelData[i].textureW = textureData[n][2];
            this.modelData[i].textureH = textureData[n][3]/5;
        }

    }


    //console.log(this.modelData);



    this.meshGroup = null;



    this.speaking = false;



    this.step =0 ;


    this.mouthRotation = 0;
    this.placeState = 0;

    this.eyeFrame = 0;

    this.setMouthRotation = function (a) {
        this.mouthRotation = a;
    }

    this.setPlaceState = function (a) {
        this.placeState = a;
    }

    this.getRaycastMeshes = function () {
        return this.meshGroup.children;
    }

    this.getTextRaycastMesh = function () {
        return this.text[screenType].getRaycastMesh();
    }

    this.setEyeFrame = function (pp) {







        if (this.eyeFrame!==pp)
        {
            this.eyeFrame = pp;




            for (let i=0;i<this.meshGroup.children.length;i++) {
                let m = this.meshGroup.children[i];




                if (m.mdata.type==="eyes")
                {


                    let textureWidth = textures[m.mdata.textureId].map.image.width;
                    let textureHeight = textures[m.mdata.textureId].map.image.height;

                    let pY = m.mdata.textureH*this.eyeFrame;

                    //console.log(this.eyeFrame);


                    m.geometry.faceVertexUvs[ 0 ][ 0 ][ 0 ].set( (m.mdata.textureX)/textureWidth, 1-(pY)/textureHeight );
                    m.geometry.faceVertexUvs[ 0 ][ 0 ][ 1 ].set( (m.mdata.textureX)/textureWidth,   1-(pY+m.mdata.textureH)/textureHeight );
                    m.geometry.faceVertexUvs[ 0 ][ 0 ][ 2 ].set( (m.mdata.textureX+m.mdata.textureW)/textureWidth,   1-(pY)/textureHeight );

                    m.geometry.faceVertexUvs[ 0 ][ 1 ][ 0 ].set( (m.mdata.textureX)/textureWidth,  1-(pY+m.mdata.textureH)/textureHeight );
                    m.geometry.faceVertexUvs[ 0 ][ 1 ][ 1 ].set( (m.mdata.textureX+m.mdata.textureW)/textureWidth,   1-(pY+m.mdata.textureH)/textureHeight );
                    m.geometry.faceVertexUvs[ 0 ][ 1 ][ 2 ].set( (m.mdata.textureX+m.mdata.textureW)/textureWidth,   1-(pY)/textureHeight );

                    m.geometry.elementsNeedUpdate=m.geometry.verticesNeedUpdate = true;




                }
            }
        }




    }



    this.eyeState = 0;
    this.mouthState = 0;
    this.mouthVolume = 0;
    this.mouthD = 1;


    this.lastPos3 = -1;

    this.update = function (delta) {






        this.step+=delta;



        if (this.text["mobile"].updating)
            this.text["mobile"].update();

        if (this.text["desktop"].updating)
            this.text["desktop"].update();





        if (this.speaking) {

            let ii = Math.floor(this.speechT/this.speechDuration*510)
            if (ii>499)
                ii = 499;
            let sw = soundWaveData
                ['book'+this.index+'_'+this.currentSpeech][ii];



            //console.log(this.speechT,Math.floor(this.speechT/this.speechDuration*(500-1)),sw);

            if (sw>0.01)
                sw = 1
            else
                sw = 0;

            /*
            */

            if (this.mouthVolume<sw)
            {
                this.mouthVolume+=this.mouthD*delta*7;
            }
            else if (this.mouthVolume>sw)
            {
                this.mouthVolume-=this.mouthD*delta*7;
            }

            if (this.mouthVolume<0)
                this.mouthVolume = 0;

            if (this.mouthVolume>1)
                this.mouthVolume = 1;

        }
        else
        {
            if (this.mouthVolume>0)
                this.mouthVolume-=this.mouthD*delta*3;
            else
                this.mouthVolume = 0;
        }




        if (this.speaking) {
            if (this.mouthState<1)
                this.mouthState+=this.mouthD*delta*3;
            else
                this.mouthState = 1;
        }
        else
        {
            if (this.mouthState>0)
                this.mouthState-=this.mouthD*delta*3;
            else
                this.mouthState = 0;
        }



        let mr = ((1- (Math.cos(this.mouthSpeed*this.step*Math.PI/(1/8))/2)
            -1/2)*0.9*(Math.cos(this.mouthSpeed*this.step*Math.PI/(1/4))/2+0.5))*this.mouthState*this.mouthVolume;


        //let mr = this.mouthState;

        /*if (this.speaking)
        {


            console.log(sw);

            mr=mr*sw;
        }*/


        this.setMouthRotation(mr);




        if (!this.blinking && Math.random()<1/120 && this.placeState===1)
            if (!(this.index===3 && this.speaking))
                this.blink((this.index === 2 ? 7 : 4),0);


       // console.log(Math.floor(this.eyeState*eyeAnimation.length))






        let ef = eyeAnimation[this.blinkType][Math.floor(this.eyeState*eyeAnimation[this.blinkType].length)];

        if (this.speaking && this.index===0 && ef<2)
            if (this.currentSpeech==="wrong1" || this.currentSpeech==="wrong2" || this.currentSpeech==="wrong3")
                ef = 2;
        this.setEyeFrame(ef);





        if (this.placeState>1)
            this.placeState = 1;

        if (this.placeState<0)
            this.placeState = 0;

        let aa = this.placeState;


        let sc = 1+aa*aa*aa*aa*0.4;
        this.meshGroup.scale.set(sc,sc,sc);

        const upAnimY = 45*2;
        const upAnimEnd = 0.2;

        if (aa<upAnimEnd) {
            this.meshGroup.position.y = this.startY[screenType] + easeInOutCubic(aa/upAnimEnd) * upAnimY;
            this.meshGroup.position.x = this.startX[screenType];
            this.meshGroup.position.z = 0;

            this.meshGroup.rotation.set(0,0,(1-aa/upAnimEnd)*this.startRotation/180*Math.PI,'XYZ');


        }
        else
        {

            this.meshGroup.position.z = 600;

            let bb = (aa-upAnimEnd)/(1-upAnimEnd);
            this.meshGroup.position.y =
                this.startY[screenType]+upAnimY+(bookEndY[screenType]-this.startY[screenType]+upAnimY)*easeInOutCubic(bb)
                +10*Math.cos(this.step*2.5)*bb;
            this.meshGroup.position.x = this.startX[screenType]+(bookEndX-this.startX[screenType])*easeInOutCubic(bb);


            this.meshGroup.rotation.set(
                //-Math.PI/5*easeInOutCubic(bb)-Math.sin(this.mouthRotation)/8*bb,
                -Math.PI/5*easeInOutCubic(bb)*1.1+bb*this.mouthState*(Math.sin(this.step*3)-0.8)*0.1,
                -easeInOutCubic(bb)*Math.PI/3*2*1.4
                +bb*this.mouthState*(Math.sin(this.step*2)+0.7)*0.07
                +bb*(1-this.mouthState)*(Math.cos(this.step)+0.5)*0.04,
                easeInOutCubic(bb)*Math.PI/3*1.4,'YXZ');

        }





        if (this.mouthRotation>1)
            this.mouthRotation = 1;

        if (this.mouthRotation<0)
            this.mouthRotation = 0;

        aa = this.mouthRotation




        for (let i=0;i<this.meshGroup.children.length;i++)
        {
            let m = this.meshGroup.children[i];







            if (this.index===3)
            {




                //if (this.speaking)
                //    console.log(this.mouthK,(eyesEmotions[this.currentSpeech].length-1)*this.mouthK);


                let badEyes = true;


                if (this.speaking)
                {
                    //!this.speaking ||
                    //(this.speaking && eyesEmotions[this.currentSpeech][Math.floor((eyesEmotions[this.currentSpeech].length)*0.99*this.mouthK)]===0);

                    let pos = 0;


                    while (pos<eyesEmotions[this.currentSpeech].length
                        && eyesEmotions[this.currentSpeech][pos][0]<=this.speechT)
                        pos+=1;

                    pos-=1;


                    if (pos!==this.lastPos3)
                    {

                        if (!this.blinking)
                            this.blink(1.5,1);

                        this.lastPos3 = pos;
                    }

                    //console.log(pos,this.speechT)


                    badEyes = eyesEmotions[this.currentSpeech][pos][1]===0;
                }

                if (m.mdata.name==="eyes_good"){
                    m.material.visible = !badEyes;

                }
                if (m.mdata.name==="eyes_bad"){
                    m.material.visible = badEyes;

                }
            }


            let newa = -aa*Math.PI/10;
            if (m.mdata.type==='static_top' || m.mdata.type==="eyes")
                newa = -newa/5;


            m.rotation.set(m.mdata.rotation[0]*Math.PI/2,m.mdata.rotation[1]*Math.PI/2,m.mdata.rotation[2]*Math.PI/2,m.mdata.rotation[3]);


            if (m.mdata.type==='tongue')
            {


                m.rotation.set(m.mdata.rotation[0]*Math.PI/2,
                    m.mdata.rotation[1]*Math.PI/2-this.mouthRotation*1.5,//-(Math.cos(this.step*10)/2+0.5)*0.9*this.mouthState,
                    m.mdata.rotation[2]*Math.PI/2,m.mdata.rotation[3]);

            }


            m.rotateOnWorldAxis(new THREE.Vector3(0,1,0),-newa)


            let c1 = this.spine/2;
            let c2 = this.width/2;
            let tt1 = m.mdata.position[0]-c1;
            let tt2 = m.mdata.position[2]-c2;

            m.position.set(
                Math.cos(newa)*tt1-Math.sin(newa)*tt2+c1,
                m.mdata.position[1],
                Math.sin(newa)*tt1+Math.cos(newa)*tt2+c2);




            //backTiles['default'].position.set(m.position)




        }


    }



    this.blinking = false;
    this.blinkType = 0;

    this.blink = function (length,type) {
        this.blinking = true;

        this.blinkType = type;

        this.eyeState =0;




        gsap.to(this, { duration: length, eyeState: 0.99, onComplete: function() {

                this.blinking = false;
                this.eyeState = 0;


            }.bind(this)});

    }

    this.rightGuess = function () {


        analytics.hitGoal("book"+(this.index+1)+"_right");


        this.text["mobile"].right();
        this.text["desktop"].right();


        showBubble("right",sounds["book"+this.index+"_"+"right"].duration())

        this.state = "hiding";
        this.say("right",function () {
            this.hide();


            //this.text["mobile"].crossOut();
           // this.text["desktop"].crossOut();

            this.text["desktop"].hide();
            this.text["mobile"].hide();

        }.bind(this));




        //this.hide();
    }

    this.wrongGuess = function () {



        analytics.hitGoal("book"+(this.index+1)+"_wrong");

        this.say("wrong"+this.wrongN);

        showBubble("wrong"+this.wrongN,sounds["book"+this.index+"_"+"wrong"+this.wrongN].duration());

        this.wrongN+=1;
        if (this.wrongN>3)
            this.wrongN = 1;
    }

    this.wrongTextClick = function () {





        this.text["mobile"].wrong();
        this.text["desktop"].wrong();
    }

    this.wrongN = 1;




    this.lastSpeechTween = null;
    this.currentSpeech = null;

    this.stopSpeech = function () {

        if (this.lastSpeechTween)
            this.lastSpeechTween.kill();
        //this.mouthState = 0;
        this.speaking = false;


        this.currentSpeech = null;


        ["start","right","wrong1","wrong2","wrong3"].forEach(function (r) {
            let snd = sounds["book"+this.index+"_"+r];
            snd.stop();
            //snd.unload();
        }.bind(this))

    }

    this.say = function (phrase,oncomplete) {

        this.stopSpeech();


        this.currentSpeech = phrase;


        let snd = sounds["book"+this.index+"_"+phrase];


        let length = snd.duration();

        snd.play();


        this.speaking = true;

        this.lastPos3 = -1;
        this.speechT = 0;
        this.speechDuration = length;

        this.lastSpeechTween = gsap.to(this, { duration: length,ease:"power0.in", speechT:length, onComplete: function() {


            this.lastSpeechTween = null;
            this.speaking = false;

            this.speechT = 0;
            this.currentSpeech = null;


            if (oncomplete)
                oncomplete();

            }.bind(this)});





    }

    this.show = function () {


        analytics.hitGoal("book"+(this.index+1)+"_clicked");

        sounds["book_open"].play();

        sounds["music"].fade(defaultVolume, defaultVolume/4, 1500);


        gsap.to(backBlack.material, { duration: 1,opacity: 0.3});

        showMessage(this.startText);

        this.state = "appearing";

        gsap.to(this, { duration: 1, easing: Power1.easeIn, placeState: 1, onComplete: function() {

            this.say("start");

            this.state = "appeared";

            }.bind(this)});



    }


    this.reClick = function () {
        if (this.speaking)
        {
            if (this.currentSpeech!=="right")
              this.stopSpeech();
        }
        else
        {
            this.say("start")
        }
    }

    this.glowMesh = null;

    this.hide = function () {

        sounds["book_close"].play();

        this.glowMesh.visible = false;



        sounds["music"].fade(defaultVolume/4,defaultVolume, 1500);

        gsap.to(backBlack.material, { duration: 1,opacity: 0});


        gsap.to(this, { duration: 1, easing: Power1.easeIn, placeState: 0, onComplete: function() {


                startGlow();
                currentBook = null;
                this.state = "hidden";


                barrelMaxPosition-=1;

                if (barrelPosition>=barrelMaxPosition+1)
                    barrelPosition-=1;




                this.meshGroup.children.forEach(function (c) {
                    if (c.mdata.name==="main_line")
                        gsap.to(c.material, { duration: 1, opacity: 0.5});
                    else
                        c.visible = false;
                })





            }.bind(this)});






        hideMessage();
    }


}



books = [


    new Book(0,[-400,0],[164,0],0,315*389/503,315,315*98/503,8,8,
        {
            'main_line':[27,16,98,503],
            'front':[126,16,389,503],
            'in_line':[418,565,98,520],
            'back':[566,16,388,503],
            'bottom_line':[27,1086,390,103],
            'inside':[27,565,390,521],
            //'inside':[567,564,387,501],
            'eyes':[0,0,422,390]
        },[{name:'eyes',type:'eyes',textureId:"eyes0",
            position:[315*98/503/2+1,0,-55],scale:[270,270*390/422/5],rotation:[1,1,0,'XYZ']}]
        ,"Льюис Кэррол, «Алиса в Стране чудес»",[[-290/530,0],[0.26,1]],
        ["Оглянись: мир удивителен и полон чудес. Идём же — посмотрим, что\n" +
        "скрывается в кроличьей норе! Любое путешествие помогает духовному\n" +
        "росту… или уменьшению. Смотря из какой бутылочки выпьешь!",
            "Оглянись: мир удивителен и полон чудес. Идём же —\n" +
            "посмотрим, что скрывается в кроличьей норе! Любое\n" +
            "путешествие помогает духовному росту… или уменьшению.\n" +
            "Смотря из какой бутылочки выпьешь!"],
        {
            "right":"Верно!\nЧудесатейший ответ!",
            "wrong1":"Что? Безумие… Впрочем,\nвсе мы здесь не в своём уме…",
            "wrong2":"Неверно! НЕВЕРНО!!!\nГолову с плеч!!!",
            "wrong3":"Пока думаешь, что\nсказать, — делай реверанс"
        },1),
    new Book(1,[-185,0],[164,0],0,315*400/520,315,315*104/520,8,8,
        {
            'main_line':[27,16,104,520],
            'front':[131,16,400,520],
            'in_line':[427,589,104,521],
            'back':[601,17,400,519],
            'bottom_line':[27,1110,398,104],
            'inside':[27,589,398,520],
            //'inside':[601,590,400,519],
            'eyes':[0,0,316,260],
            'tongue':[245,48,88,95]
        },[{name:'eyes',type:'eyes',textureId:"eyes1",
            position:[315*104/520/2+1,5,-70],scale:[210,210*260/316/5],rotation:[1,1,0,'XYZ']},
            {name:'tongue',type:'tongue',textureId:"book_extra",
                position:[315*104/520/2-40,0,-(315*400/520-8)/2],scale:[85,85*95/88],rotation:[0,1.5,1,'XYZ']}]
        ,"Александр Дюма-отец, «Три мушкетёра»",[[-12/530,1],[-0.29,2]],
        ["Я уважаю мужество, честь и верность. Отважные люди сегодня на вес\n" +
        "золота. Много ли их в вашем окружении? Именно. Но ценнее всего —\n" +
        "дружба между такими людьми. Позвольте же поведать вам о ней.",
        "Я уважаю мужество, честь и верность. Отважные люди\n" +
        "сегодня на вес золота. Много ли их в вашем окружении?\n" +
        "Именно. Но ценнее всего — дружба между такими людьми.\n" +
        "Позвольте же поведать вам о ней."],
        {
            "right":"В яблочко! Поднимаю\nбокал за ваше здоровье!",
            "wrong1":"Ваша ошибка оскорбительна\nи заставляет меня краснеть.",
            "wrong2":"А ведь я рассчитывал на вас…",
            "wrong3":"Вы ошиблись, но, уверен,\nуже успели раскаяться."
        },0.9),
    new Book(2,[-105,0],[164,0],0,315*310/520,315,315*115/520,8,8,
        {
            'main_line':[27,16,115,520],
            'front':[142,16,310,520],
            'in_line':[342,573,110,519],
            'back':[548,16,309,520],
            'bottom_line':[27,1093,312,113],
            'inside':[27,573,312,519],
            //'inside':[548,572,309,520],
            'eyes':[0,0,370,550],
            'tooth':[467,119,128,20]
        },[{name:'eyes',type:'eyes',textureId:"eyes2",
            position:[315*115/520/2+1,0,3],scale:[220,220*550/370/5],rotation:[1,1,0,'XYZ']},
            {name:'tooth',type:'static_top',textureId:"book_extra",
            position:[315*115/520/2-7,0,-315*310/520/2],scale:[85,85*20/128],rotation:[0,2,1,'XYZ']}]
        ,"Михаил Зыгарь, «Вся кремлевская рать.\nКраткая история современной России»",[[140/530,0],[0,0]],
        ["Кто управляет лодкой, в которой мы плывём? Кто они вообще такие —\n" +
        "какие они, эти люди? Как они получили эту власть, и что они скрывают?\n" +
        "Я расскажу, как всё было на самом деле!",
            "Кто управляет лодкой, в которой мы плывём? Кто они\n" +
            "вообще такие — какие они, эти люди? Как они получили\n" +
            "эту власть, и что они скрывают? Я расскажу, как всё\n" +
            "было на самом деле!"],
        {
            "right":"Благодарим за проявленную\nпозицию и поддерживаем вас!",
            "wrong1":"Боюсь, мы не можем согласиться\nс вашим предложением",
            "wrong2":"Хотели как лучше,\nа получилось как всегда.",
            "wrong3":"Так мы выборы не проведём…"
        },1),
    new Book(3,[-30,0],[164,0],0,310*288/520,310,310*104/520,8,8,
        {
            'main_line':[26,16,104,520],
            'front':[130,16,288,520],
            'in_line':[313,573,103,519],
            'back':[548,15,288,512],
            'bottom_line':[27,1093,285,104],
            'inside':[27,573,285,519],
            //'inside':[549,573,288,520],
            'eyes_good':[0,0,438,350],
            'eyes_bad':[0,0,438,350],
            'tongue':[245+110,48,88,95]
        },[{name:'eyes_good',type:'eyes',textureId:"eyes3_good",
            position:[45*1.5/2+1,5,-40],scale:[260,260*350/438/5],rotation:[1,1,0,'XYZ']},
            {name:'eyes_bad',type:'eyes',textureId:"eyes3_bad",
                position:[45*1.5/2+1,5,-40],scale:[260,260*350/438/5],rotation:[1,1,0,'XYZ']},
            {name:'tongue',type:'tongue',textureId:"book_extra",
                position:[310*104/520/2-35,0,-(310*288/520-8)/2],scale:[85,85*95/88],rotation:[0,1.5,1,'XYZ']}]
        ,"Роберт Стивенсон, «Странная история\nдоктора Джекила и мистера Хайда»",[[120/530,2],[0,3]],
        ["— Вы знаете, человек — вовсе не единый организм…\n" +
        "— …И даже не одна личность. Понятно тебе? У человека много лиц…\n" +
        "— Много судеб. Удивительно, согласитесь? Кто знает, какие тайны скрываются…\n" +
        "— В твоей собственной голове?..",
            "— Вы знаете, человек — вовсе не единый организм…\n" +
            "— …И даже не одна личность. Понятно тебе? У\n" +
            "человека много лиц…\n" +
            "— Много судеб. Удивительно, согласитесь? Кто знает,\n" +
            "какие тайны скрываются…\n" +
            "— В твоей собственной голове?.."],
        {
            "right":"— Браво, точно в цель!\n" +
                "— Неплохо. Я ждал\nот него провала",
            "wrong1":"Мы не удивлены",
            "wrong2":"Не переживайте.\nОн не видел вашу ошибку.",
            "wrong3":"Ха, серьёзно?\nРазумеется, это неверно."
        },1),
    new Book(4,[260,0],[164,0],0,45*5.4,45*6.9,45*2.3,45*0.2,45*0.3,
        {
            'main_line':[27,16,171,520],
            'front':[198,16,390,520],
            'in_line':[418,589,170,521],
            'back':[644,15,390,521],
            'bottom_line':[27,1111,389,171],
            'inside':[27,590,390,520],
            //'inside':[645,590,389,520],
            'eyes':[0,0,612,1300],
            'tooth':[9,95,196,100]
        },[{name:'eyes',type:'eyes',textureId:"eyes4",
            position:[45*2.3/2+1,0,-15],scale:[370,370*1300/612/5],rotation:[1,1,0,'XYZ']},
            {name:'tooth',type:'static_top',textureId:"book_extra",
                position:[45*2.3/2-26,0,-45*5.4/2],scale:[100,100*100/196],rotation:[0,2,1,'XYZ']}]
        ,"Михаил Булгаков, «Мастер и Маргарита»",[[294/530,1],[0.30,2]],
        ["Чтобы не разговаривать с неизвестными, давайте скорее знакомиться!\n" +
        "Вы верите в высшую силу? Увлекаетесь мистикой, историей,\n" +
        "философией? Простите за изобилие вопросов — редко встречаешь\n" +
        "такого интересного человека!",
            "Чтобы не разговаривать с неизвестными, давайте скорее\n" +
            "знакомиться! Вы верите в высшую силу? Увлекаетесь\n" +
            "мистикой, историей, философией? Простите за изобилие\n" +
            "вопросов — редко встречаешь такого интересного человека!"],
        {
            "right":"Верно! Правду говорить\nлегко и приятно.",
            "wrong1":"Эй! Не спешите\nсудить по костюму!",
            "wrong2":"Вы, профессор,\nчто-то нескладное придумали…",
            "wrong3":"Враньё с первого\nдо последнего слова!"
        },1),
    new Book(5,[366,0],[164,0],0,310*400/520,310,310*104/520,8,8,
        {
            'main_line':[27,16,104,520],
            'front':[131,16,400,520],
            'in_line':[427,589,104,521],
            'back':[601,17,400,519],
            'bottom_line':[27,1110,398,104],
            'inside':[27,589,398,520],
          //  'inside':[601,590,400,519],
            'eyes':[0,0,129,500]
        },[{name:'eyes',type:'eyes',textureId:"eyes5",
            position:[310*104/520/2+1,10,-50],scale:[80,80*500/129/5],rotation:[1,1,0,'XYZ']}]
        ,"Эрнест Хемингуэй, «Старик и море»",[[-300/530,1],[-0.29,1]],
        ["Вижу, ты идёшь к своей цели. Я это уважаю! Послушай: иногда кажется,\n" +
        "что неудача преследует тебя, что бы ты ни делал. Мой совет: не падай\n" +
        "духом! Человека можно уничтожить, но нельзя победить.",
            "Вижу, ты идёшь к своей цели. Я это уважаю!\n" +
            "Послушай: иногда кажется, что неудача преследует тебя,\n" +
            "что бы ты ни делал. Мой совет: не падай духом!\n" +
            "Человека можно уничтожить, но нельзя победить."],
        {
            "right":"Вот это улов!\nВеликолепно!",
            "wrong1":"В этот раз без улова",
            "wrong2":"Не повезло. Но ведь\nэто не конец, верно?",
            "wrong3":"Больше так меня не подводи!"
        },0.9),
    new Book(6,[438,0],[155,0],-4,300*400/520,300,300*104/520,8,8,
        {
            'main_line':[27,16,104,520],
            'front':[131,16,400,520],
            'in_line':[427,589,104,521],
            'back':[601,17,400,519],
            'bottom_line':[27,1110,398,104],
            'inside':[27,589,398,520],
           // 'inside':[601,590,400,519],
            'eyes':[0,0,419,275]
        },[{name:'eyes',type:'eyes',textureId:"eyes6",
            position:[300*104/520/2+1,0,-50],scale:[215,215*275/419/5],rotation:[1,1,0,'XYZ']}]
        ,"Уолтер Тевис, «Ход королевы»",[[-270/530,2],[0,4]],
        ["Единственная достойная цель — быть лучше всех в том, что ты любишь.\n" +
        "В том, чем ты живёшь. Останавливаться нельзя ни перед чем — нужно\n" +
        "биться и идти вперёд от дебюта до эндшпиля.",
            "Единственная достойная цель — быть лучше всех в том,\n" +
            "что ты любишь. В том, чем ты живёшь. Останавливаться\n" +
            "нельзя ни перед чем — нужно биться и идти вперёд от\n" +
            "дебюта до эндшпиля."],
        {
            "right":"Шах и мат!\nВеликолепный ход",
            "wrong1":"Неудачное решение.\nВы новичок в этой игре?",
            "wrong2":"Ошибка, которая может\nстоить вам поражения",
            "wrong3":"Наивный ход. Вы всерьёз\nдумали, что это верно?"
        },1),


];





const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
renderer.setPixelRatio(window.devicePixelRatio);
renderer.setSize(window.innerWidth, window.innerHeight);

//renderer.setClearColor( 0xff000f );


container = document.getElementById('container');
container.appendChild(renderer.domElement);

const cameraW = window.innerWidth;
const cameraH = window.innerHeight;


//console.log(window.innerWidth,window.innerHeight)
const camera = new THREE.OrthographicCamera( cameraW/ - 2, cameraW / 2, cameraH / 2, cameraH / - 2, 1, 4*3000);
//const camera = new THREE.PerspectiveCamera(50, window.innerWidth/window.innerHeight, 1, 4*3000);



//camera.position.x = UIField.position.x = -50;



//camera.position.y = UIField.position.y = 0;
camera.position.z = 2000;

const scene = new THREE.Scene();
scene.add(camera, UIField);



playingField = new THREE.Object3D();
scene.add(playingField);
//window.addEventListener( 'resize', onWindowResize, false );
scene.background = new THREE.Color( 0x2c2141 );


backBlack = new THREE.Mesh(new THREE.PlaneBufferGeometry(5000, 5000),
    new THREE.MeshBasicMaterial( {
        color: 0x000000,transparent:true,opacity: 0.1
    }));

backBlack.position.z = 200;

playingField.add(backBlack);

soundsToLoad = ['click','book_open','book_close','music'];

for (let i=0;i<7;i++)
{
    ["start","right","wrong1","wrong2","wrong3"].forEach(function (r) {
        soundsToLoad.push("book"+i+"_"+r);
    })
}


texturesDataToLoad = [



    {name:'logo',extension:'png',type:'back_tile',z:990},

    {name:'sound_on',extension:'png',type:'plane_buffer'},
    {name:'sound_off',extension:'png',type:'plane_buffer',onload:function () {

            muteButton = meshPlane(textures["sound_on"]);
            muteButton.position.z =1000;
            UIField.add(muteButton);

        }},


    {name:'start_plant',extension:'png',type:'back_tile',z: 390},
    {name:'start_table',extension:'png',type:'back_tile',z: 391},
    {name:'start_girl',extension:'png',type:'back_tile',z: 391},
    {name:'shelf_mobile',extension:'png',type:'back_tile',z:-90},
    {name:'shelf_desktop',extension:'png',type:'back_tile',z:-90},

    {name:'back_lamp',extension:'png',type:'back_tile',z:180},
    {name:'back_flower',extension:'png',type:'back_tile',z:181},
    {name:'back_couch',extension:'png',type:'back_tile',z:179},

    {name:'button_start',extension:'png',type:'plane_buffer'},
    {name:'help_start_desktop',extension: 'png',type:'back_tile',z:995,hide:true},
    {name:'help_start_mobile',extension: 'png',type:'back_tile',z:995,hide:true},

    {name:'button_end',extension:'png',type:'plane_buffer'},
    {name:'help_end_desktop',extension: 'png',type:'back_tile',z:995,hide:true},
    {name:'help_end_mobile',extension: 'png',type:'back_tile',z:995,hide:true},

    {name:'book0',extension:'png',type:'mesh'},
    {name:'book1',extension:'png',type:'mesh'},
    {name:'book2',extension:'png',type:'mesh'},
    {name:'book3',extension:'png',type:'mesh'},
    {name:'book4',extension:'png',type:'mesh'},
    {name:'book5',extension:'png',type:'mesh'},
    {name:'book6',extension:'png',type:'mesh'},
    {name:'book_extra',extension:'png',type:'mesh'},
    {name:'glow',extension:'png',type:'mesh'},

    {name:'eyes0',extension:'png',type:'mesh'},
    {name:'eyes1',extension:'png',type:'mesh'},
    {name:'eyes2',extension:'png',type:'mesh'},
    {name:'eyes3_good',extension:'png',type:'mesh'},
    {name:'eyes3_bad',extension:'png',type:'mesh'},
    {name:'eyes4',extension:'png',type:'mesh'},
    {name:'eyes5',extension:'png',type:'mesh'},
    {name:'eyes6',extension:'png',type:'mesh'},


    {name:'message',extension:'png',type:'back_tile',z: 1049},

    {name:'bubble_desktop_left',extension:'png',type:'back_tile',z: 999},
    {name:'bubble_desktop_right',extension:'png',type:'back_tile',z: 999},
    {name:'bubble_mobile_left',extension:'png',type:'back_tile',z: 999},
    {name:'bubble_mobile_right',extension:'png',type:'back_tile',z: 999},



    {name:'cursor',extension:'png',type:'back_tile',z: 999},


    {name:'button_start',extension:'png',type:'plane_buffer'},

    {name:'button_end',extension:'png',type:'plane_buffer'}



]

stuff = 3+texturesDataToLoad.length+soundsToLoad.length;
totalStuff = stuff;






gameLoaded = false;




// check loading progress
function checkLoading() {

 //   console.log("GOT HERE");
    stuff --;

    if (this.loadingTextProgress)
        this.loadingTextProgress.setText(Math.floor((totalStuff-stuff)/totalStuff*100)+"%",true);


    if (stuff == 0) {
        endLoading();
    }
}




StorytelEuclid = {}
// load fonts
new THREE.FontLoader().load('fonts/StorytelEuclidRegular.json', function(font) {
    StorytelEuclid["regular"] = font;


    this.loadingTextProgress = new Text3D("0%","regular",0,-45,900,0,20,false,0xffffff,true);


    checkLoading();
});


new THREE.FontLoader().load('fonts/StorytelEuclidMedium.json', function(font) {
    StorytelEuclid["medium"] = font;




    checkLoading();
});

new THREE.FontLoader().load('fonts/StorytelEuclidSemibold.json', function(font) {
    StorytelEuclid["semibold"] = font;



    this.loadingText = new Text3D("ЗАГРУЗКА","semibold",0,0,900,0,40,false,0xffffff,true);



    checkLoading();
});




glowK = 0;

textures = {};
sounds = {};
// load textures
let p = 0;


function loadTextures() {
    new THREE.TextureLoader().load(
        'textures/'+texturesDataToLoad[p]["name"]+'.'+texturesDataToLoad[p]["extension"]+'?' + Math.random(),
        function(texture) {


        let material = null;




        if (texturesDataToLoad[p]["type"] === 'sprite' || texturesDataToLoad[p]["type"] === "back_tile")
            material = new THREE.MeshBasicMaterial({ map: texture,transparent: true});
        else if (texturesDataToLoad[p]["type"] === "mesh")
            material = new THREE.MeshBasicMaterial({ map: texture,transparent: true, side:THREE.DoubleSide });
        else if (texturesDataToLoad[p]["type"] === "plane_buffer")
            material = new THREE.MeshBasicMaterial({ map: texture,transparent: true});

        textures[texturesDataToLoad[p]["name"]] = material;





        checkLoading();

        if ("onload" in texturesDataToLoad[p])
        {
            texturesDataToLoad[p].onload();
            onWindowResize();
        }


        if (texturesDataToLoad[p]["name"].match('book\\d'))
        {

            let i  = Number(texturesDataToLoad[p]["name"].slice(-1));


            messageText["mobile"][i] = new Text3D(books[i].startText[1],"medium",0,0,1050,1.7,18,false,0xffccc2,i!==3)
            messageText["mobile"][i].setVisible(false);


            messageText["desktop"][i] =  new Text3D(books[i].startText[0],"regular",0,0,1050,1.6,14,false,0xffccc2,i!==3)
            messageText["desktop"][i].setVisible(false);


            bubbleText[i] = {};

            ["right","wrong1","wrong2","wrong3"].forEach(function (ww) {
                bubbleText[i][ww] =new Text3D(books[i].answerText[ww],"semibold",0,0,1000,1.6,14,false,0x7f2e3b,true)
                bubbleText[i][ww].setVisible(false);
            })

        }

        if (texturesDataToLoad[p]["type"]==="back_tile")
        {

            backTiles[texturesDataToLoad[p]["name"]] = new THREE.Sprite(textures[texturesDataToLoad[p]["name"]]);
            backTiles[texturesDataToLoad[p]["name"]].position.z =texturesDataToLoad[p]["z"];
            playingField.add(backTiles[texturesDataToLoad[p]["name"]]);
            scaleSprite(backTiles[texturesDataToLoad[p]["name"]], 1);


            if (texturesDataToLoad[p]["hide"])
                backTiles[texturesDataToLoad[p]["name"]].visible = false;

            onWindowResize();



        }


        p ++;
        if (p < texturesDataToLoad.length) loadTextures();
    });
}
loadTextures();




const defaultVolume = 0.2;

function loadSounds() {



   // console.log(soundsToLoad)
    for (let i=0;i<soundsToLoad.length;i++)
        sounds[soundsToLoad[i]] = new Howl({
            src: ['sounds/'+soundsToLoad[i]+'.mp3'],
            usingWebAudio: true,
            mute: false,
            webAudio: true,
            volume: defaultVolume,
            onload: function (z) {
                checkLoading();
            }
        });



}
loadSounds();


bookGroups = [];
backTiles = {
    'start_plant':null,
    'start_girl':null,
    'start_table':null,
    'test_desktop':null,
    'test_mobile':null,
    'shelf_desktop':null,
    'shelf_mobile':null,
    'back_flower':null,
    'back_couch':null,
    'back_lamp':null,
    'logo':null
}

messageText = {}
messageText["mobile"] = [null,null,null,null,null,null,null];
messageText["desktop"] =[null,null,null,null,null,null,null];

bubbleText = [null,null,null,null,null,null,null];


muteButton = null;
startButton = null;
endButton = null;




function endLoading() {




    setTimeout(function() {
        touchReady = true;
    }, 100);



    this.loadingTextProgress.setVisible(false);
    this.loadingText.setVisible(false);

    backTiles["logo"].visible = false;


    /*
    for (const [key, value] of Object.entries(backTiles)) {
        playingField.add(value);

        scaleSprite(value, 1);
    }*/


    mainHintText =new Text3D("НАЖМИ НА КОРЕШОК КНИГИ","semibold",0,0,1000,1.6,30,false,0xffffff,true)


    backTiles["cursor"].material.transparent = true;
    backTiles["cursor"].position.set(-200,0,1000);
    scaleSprite(backTiles["cursor"],0.5);
    backTiles["message"].material.transparent = true;

    backTiles["bubble_mobile_left"].material.transparent = true;

    backTiles["bubble_mobile_right"].material.transparent = true;

    backTiles["bubble_desktop_left"].material.transparent = true;

    backTiles["bubble_desktop_right"].material.transparent = true;





   /* for (let i=0;i<7;i++)
    {

    }*/


    scaleSprite(backTiles["bubble_desktop_left"],0.74);
    scaleSprite(backTiles["bubble_desktop_right"],0.74);
    backTiles["bubble_desktop_left"].position.x = -450;
    backTiles["bubble_desktop_right"].position.x = 450;



    backTiles["bubble_mobile_left"].position.x = -20;
    backTiles["bubble_mobile_right"].position.x = 20;

    startButton = meshPlane(textures["button_start"]);
    startButton.position.z = 1000;
    UIField.add(startButton);

    endButton = meshPlane(textures["button_end"]);
    endButton.position.z = 1000;
    UIField.add(endButton);

    for (let i=0;i<books.length;i++)
    {

        let book = books[i];



        newBookGroup = new THREE.Group();






        for (let j=0;j<book.modelData.length;j++)
        {
            let p = book.modelData[j];


            const geometry = new THREE.PlaneGeometry( p.scale[0],p.scale[1]);



            //console.log(p.textureId)
            const textureWidth = textures[p.textureId].map.image.width;
            const textureHeight = textures[p.textureId].map.image.height;


            //console.log(p.textureId);


            /*if (p.name!=="eyes")
            {*/

            geometry.faceVertexUvs[ 0 ][ 0 ][ 0 ].set( (p.textureX)/textureWidth, 1-(p.textureY)/textureHeight );
            geometry.faceVertexUvs[ 0 ][ 0 ][ 1 ].set( (p.textureX)/textureWidth,   1-(p.textureY+p.textureH)/textureHeight );
            geometry.faceVertexUvs[ 0 ][ 0 ][ 2 ].set( (p.textureX+p.textureW)/textureWidth,   1-(p.textureY)/textureHeight );

            geometry.faceVertexUvs[ 0 ][ 1 ][ 0 ].set( (p.textureX)/textureWidth,  1-(p.textureY+p.textureH)/textureHeight );
            geometry.faceVertexUvs[ 0 ][ 1 ][ 1 ].set( (p.textureX+p.textureW)/textureWidth,   1-(p.textureY+p.textureH)/textureHeight );
            geometry.faceVertexUvs[ 0 ][ 1 ][ 2 ].set( (p.textureX+p.textureW)/textureWidth,   1-(p.textureY)/textureHeight );



            /*}
            else
            {

            }*/

           // console.log(p.name);


            //  geometry.faceVertexUvs[ 0 ][ 0 ][ 3 ].set( (p.textureX)/427,  (p.textureY+p.textureH)/720 );

            const material = textures[p.textureId]// new THREE.MeshBasicMaterial( { map: book.texture } );
      //      console.log(material);


            //const mesh = new THREE.Mesh(geometry[Math.round(Math.random())], new THREE.MeshBasicMaterial({ color: 0xffffff }));//new THREE.Mesh( geometry, material );
            const mesh = new THREE.Mesh(geometry,material)

            mesh.position.set(p.position[0],p.position[1],p.position[2]);
            mesh.rotation.set(p.rotation[0]*Math.PI/2,p.rotation[1]*Math.PI/2,p.rotation[2]*Math.PI/2,p.rotation[3]);


            if (p.name==="eyes")
            {
                mesh.geometry.dynamic = true;
                mesh.renderOrder= 1

            }
            else if (p.name==="glow")
            {
               // mesh.renderOrder= -1

                book.glowMesh = mesh;
            }
            else if (p.name==="tongue")
            {
                mesh.renderOrder= 1
            }


            mesh.mdata = p;



            newBookGroup.add( mesh );





            newBookGroup.position.set(books[i].startX, books[i].startY,-1000);


            book.meshGroup = newBookGroup;
        }


        book.text = {};
        book.text["desktop"] = new Text3D(book.name.replace(/\n/g, " "),"regular",0,0,1000,1.4,15,true,0xffffff,true);
        book.text["mobile"] = new Text3D(book.name,"regular",0,0,1000,1.4,19,true,0xffffff,true);




        playingField.add(newBookGroup);

        bookGroups.push(newBookGroup);




    }



    gsap.to(window, { duration: 0.5, startHintK: 1,delay: 0.5, ease: "back.out" ,onComplete: function() {}});


    gameLoaded = true;
    onWindowResize();

}


startGame = function() {


    analytics.hitGoal("btn_start");
    gameStarted = true;


    //console.log(sounds["music"])
    sounds["music"].loop(true);
    sounds["music"].play();



    sounds["click"].volume(defaultVolume/3);
    sounds["click"].play();

    gsap.to(window, { duration: 0.5, startHintK: 0, ease: "back.in" ,onComplete: function() {}});


    gsap.to(window, { duration: 1.5, startObjectsShowK: 0, ease: Back.easeIn.config(1.1) ,onComplete: function() {


            startGlow();

        }});



    gsap.to(backBlack.material, { duration: 1,opacity: 0});




    //console.log("GAME START RUN")

    hintTween =  gsap.to(window, { duration: 1, mainHintK: 1 ,onComplete: function() {





        }});









}

endGame = function() {

    analytics.hitGoal("final");



    gameEnded  = true;
    sounds["click"].play();

    gsap.to(window, { duration: 1, endHintK: 1, ease: "back.out" ,onComplete: function() {}});

    gsap.to(window, { duration: 0.5, textAlphaK: 0, onComplete: function() {}});


}


selectBook = function(i) {


    if (currentBook===null)
    {

        currentBook = i;


        books[i].show();


        if (textHidden)
        {

            gsap.to(window, { duration: 3, textAlphaK: 1, onComplete: function() {}});
            textHidden = false;


            //console.log("textHidden RUN")

            hintTween.kill();
            gsap.to(window, { duration: 0.5, mainHintK: 0, onComplete: function() {       mainHintText.setVisible(false);}});


        }
    }
    else
    {
        books[i].reClick();
    }

}

booksTextOrder = [6,1,3,4,0,2,5];




startObjectsShowK = 1;
startHintK = 0;
textAlphaK = 0;

mainHintK = 0;

textHidden = true;

endHintK = 0;
gameStarted = false;
gameEnded = false;

messageK = 0;


messageTween = null;
function showMessage() {

    if (messageTween)
        messageTween.kill();

    messageK = 0;


    messageTween = gsap.to(this, {
        duration: 1, easing: Power1.easeOut, messageK: 1,
        onComplete: function () {
            messageTween = null;
        }
    });
}



bubbleK = 0;
bubbleTween = null;
currentBubble = null;

currentBubbleBook = null;
currentSpeech = null;
function showBubble(speech,length) {





    if (bubbleTween)
    {
        bubbleTween.kill();
        bubbleTween = null;

        backTiles[currentBubble].visible = false;

        currentBubble = null;
        currentBubbleBook = null;
    }

    currentBubbleBook = currentBook

    backTiles["bubble_desktop_left"].visible = false;
    backTiles["bubble_desktop_right"].visible = false;
    backTiles["bubble_mobile_left"].visible = false;
    backTiles["bubble_mobile_right"].visible = false;

    for (let i=0;i<7;i++) {
        bubbleText[i]["wrong1"].setVisible(false);
        bubbleText[i]["wrong2"].setVisible(false);
        bubbleText[i]["wrong3"].setVisible(false);
        bubbleText[i]["right"].setVisible(false);
    }




    currentBubble = "bubble_"+screenType+"_"+(Math.random()<0.5 ? "left":"right")
    backTiles[currentBubble].visible = true;

    currentSpeech = speech

    bubbleText[currentBook][currentSpeech].setVisible( true);

   // bubbleText[currentBook][currentSpeech].setScale(screenType==="mobile" ? 1.5:1);


    bubbleK = 0;

    bubbleTween = gsap.to(window, {
        duration: 1, ease: Power1.easeOut, bubbleK: 1,
        onComplete: function () {

            bubbleTween = gsap.to(window, {
                duration: 1, ease: Power1.easeOut, delay:length-1, bubbleK: 2,
                onComplete: function () {

                    backTiles[currentBubble].visible = false;
                    bubbleTween = null;
                    currentBubble = null;
                    currentSpeech = null;
                    currentBubbleBook = null;
                }
            });

        }
    });



}



function hideMessage() {
    if (messageTween)
        messageTween.kill();



    messageK = 1;

    messageTween = gsap.to(this, { duration: 1, easing: Power1.easeOut, messageK: 0,
        onComplete: function() {
            messageTween = null;
        }});
}




function startGlow() {

    glowK = 0;

    gsap.to(window, { duration: 0.5, glowK: 1});


}


function updateObjectsPositions(windowChanged) {

    let k = window.innerWidth/770;

    if (screenType==="desktop")
        k = window.innerHeight/826;






    if (muteButton)
    {
        muteButton.position.x = (-window.innerWidth/2)/k+50;
        muteButton.position.y = (window.innerHeight/2)/k-50;


        if (windowChanged)
            scaleMeshPlane(muteButton,screenType==="mobile"?0.45:0.35);

    }

    if (backTiles["shelf_mobile"])
    {
        backTiles["shelf_mobile"].visible = screenType==="mobile";




        backTiles["shelf_mobile"].position.x = 5;
        backTiles["shelf_mobile"].position.y = 10;

    }

    if (backTiles["shelf_desktop"])
    {
        backTiles["shelf_desktop"].visible = screenType==="desktop";

        backTiles["shelf_desktop"].position.x = 5;
        backTiles["shelf_desktop"].position.y = -70;
    }




    let hh1 = window.innerHeight/2/k;
    let hh2 = Math.max(window.innerHeight/2/k,1370/2)
    let ww1 = window.innerWidth/2/k;
    let ww2 = (Math.min(window.innerWidth/2/k,1440/2) + window.innerWidth/2/k)/2;






    if (backTiles["back_lamp"])
    {

        if (windowChanged)
            scaleSprite(backTiles["back_lamp"],screenType==="mobile"?1.3:1);



        backTiles["back_lamp"].position.x = screenType==="mobile"?  -480        :-ww2;
        backTiles["back_lamp"].position.y = screenType==="mobile"?  -hh2+480     :-80;

    }

    if (backTiles["back_couch"])
    {
        if (windowChanged)
            scaleSprite(backTiles["back_couch"],screenType==="mobile"?1.3:1);


        backTiles["back_couch"].position.x = screenType==="mobile"?  -100        :-ww2+290;
        backTiles["back_couch"].position.y = screenType==="mobile"?  -hh2+180     :-320;


    }
    if (backTiles["back_flower"])
    {
        if (windowChanged)
            scaleSprite(backTiles["back_flower"],screenType==="mobile"?1.3:1);



        backTiles["back_flower"].position.x = screenType==="mobile"?    420     :ww2-30;
        backTiles["back_flower"].position.y = screenType==="mobile"?-hh2+330     :-250;




    }

    if (backTiles["start_plant"])
    {
        if (windowChanged)
            scaleSprite(backTiles["start_plant"],screenType==="mobile"?0.9:1);


        backTiles["start_plant"].position.x = (screenType==="mobile"?  -300        :-ww1+40)-(1-startObjectsShowK)*600;
        backTiles["start_plant"].position.y = screenType==="mobile"?  -hh2+300     :-120;

    }

    if (backTiles["start_table"])
    {
        if (windowChanged)
            scaleSprite(backTiles["start_table"],screenType==="mobile"?0.75:1);


        backTiles["start_table"].position.x =( screenType==="mobile"?  -200        :-ww1+250)-(1-startObjectsShowK)*600;
        backTiles["start_table"].position.y = screenType==="mobile"?  -hh2+120     :-250;

    }
    if (backTiles["start_girl"])
    {
        if (windowChanged)
            scaleSprite(backTiles["start_girl"],screenType==="mobile"?1.1:1);


        backTiles["start_girl"].position.x = (screenType==="mobile"?    180     :ww1-280)+(1-startObjectsShowK)*600;
        backTiles["start_girl"].position.y = screenType==="mobile"?-hh2+280     :-150;


    }

    if (backTiles["logo"])
    {
        backTiles["logo"].position.y = 90;



        let uu = (totalStuff -stuff)/totalStuff/0.9;
        if (uu>1)
            uu = 1;


        backTiles["logo"].rotation.set(0,0,-uu*2*Math.PI);



       // backTiles["logo"].rotation.set(0,0,-gameStep*10);
    }



    let exx = 0;

    if (window.innerWidth/window.innerHeight>0.5)
        exx = window.innerWidth/window.innerHeight-0.5;

    if (exx>0.5)
        exx = 0.5;
   //console.log(exx);


    let isTablet = 0;

    if (window.innerHeight/window.innerWidth>0.6)
        isTablet = 1;




    if (gameLoaded)
    {





        scaleSprite(backTiles["bubble_mobile_left"],1.1-exx*2);
        scaleSprite(backTiles["bubble_mobile_right"],1.1-exx*2);


        backTiles["cursor"].visible = true;
        backTiles["cursor"].material.opacity = mainHintK;

        mainHintText.setOpacity(mainHintK);


        backTiles["cursor"].position.y = Math.sin(gameStep)*20;
        mainHintText.setPosition(0,backTiles["cursor"].position.y*0.7-250,1000);


        backTiles["help_start_desktop"].visible = screenType!=="mobile";
        backTiles["help_start_mobile"].visible = screenType==="mobile";

        backTiles["help_start_desktop"].position.y = 200+(1-startHintK)*900;
        backTiles["help_start_mobile"].position.y = hh1-300+(1-startHintK)*900;

        startButton.position.y = (screenType==="mobile" ? hh1-300-440 :200-410)+(1-startHintK)*900;


        if (windowChanged)
        {

            scaleSprite(backTiles["help_end_mobile"],1.3*0.66);

            scaleSprite(backTiles["help_end_desktop"],0.66);


            scaleSprite(backTiles["help_start_desktop"],0.66);
            scaleSprite(backTiles["help_start_mobile"],0.66);


        }



        backTiles["help_end_desktop"].visible = screenType!=="mobile";
        backTiles["help_end_mobile"].visible = screenType==="mobile";

        backTiles["help_end_desktop"].position.y = 200+(1-endHintK)*1300;
        backTiles["help_end_mobile"].position.y = hh1-500+(1-endHintK)*1300;

        endButton.position.y = (screenType==="mobile" ? hh1-500-560 :200-410)+(1-endHintK)*1300;


        scaleMeshPlane(startButton,(screenType==="mobile"?1.7/2:1/2)+Math.cos(gameStep*8)/60)
        scaleMeshPlane(endButton,(screenType==="mobile"?1.7/2:1/2)+Math.cos(gameStep*8)/60)

        backTiles["message"].position.y =
            (screenType==="mobile"? -window.innerHeight/2/k+700*window.innerHeight/1600/k+exx*350:-130+isTablet*50)
            -50*(1-messageK);




        /*
        if (currentBubble!==null)

            backTiles[currentBubble].position.y =
                (screenType==="mobile"? -window.innerHeight/2/k+700*window.innerHeight/1600/k:-130)
                -50*(1-bubbleK);*/



        backTiles["bubble_desktop_right"].position.y =
            backTiles["bubble_desktop_left"].position.y = 230-50*(1-bubbleK);


        backTiles["bubble_mobile_right"].position.y =
            backTiles["bubble_mobile_left"].position.y = window.innerHeight/2/k-200+50*bubbleK+exx*400;

        backTiles["bubble_desktop_right"].material.opacity =
            backTiles["bubble_desktop_left"].material.opacity =
                backTiles["bubble_mobile_right"].material.opacity =
                    backTiles["bubble_mobile_left"].material.opacity = (bubbleK<=1 ? bubbleK : 2-bubbleK);

        if (currentBook!==null)
        {
            messageText["desktop"][currentBook].setPosition(0,backTiles["message"].position.y,1050)
            messageText["mobile"][currentBook].setPosition(0,backTiles["message"].position.y,1050)


        }
        barrelTopY = backTiles["message"].position.y-150;



        backTiles["message"].visible = messageK>0
        backTiles["message"].material.opacity = messageK;




        if (currentBook!==null)
        {
            messageText["mobile"][currentBook].setVisible( screenType==="mobile"); //messageK>0 &&
            messageText["desktop"][currentBook].setVisible(screenType==="desktop"); //messageK>0 &&

            messageText["mobile"][currentBook].setOpacity(messageK);
            messageText["desktop"][currentBook].setOpacity(messageK);
        }
        else
        {
            for (let i=0;i<7;i++) {
                messageText["mobile"][i].setVisible(false);
                messageText["desktop"][i].setVisible(false);


            }
        }
        if (currentBubble!==null && currentBubbleBook!==null)
        {

            bubbleText[currentBubbleBook][currentSpeech].setOpacity(bubbleK<=1 ? bubbleK : 2-bubbleK);


            let xx = backTiles[currentBubble].position.x;
            let yy = backTiles[currentBubble].position.y;
            switch (currentBubble) {
                case "bubble_desktop_left":
                    xx-=30;
                    yy+=30;
                    break;
                case "bubble_desktop_right":
                    xx+=30;
                    yy+=30;
                    break;
                case "bubble_mobile_left":
                    xx-=5;
                    yy+=15;
                    break;
                case "bubble_mobile_right":
                    xx+=5;
                    yy+=15;
                    break;

            }


            bubbleText[currentBubbleBook][currentSpeech].setPosition(xx,yy,1000)

            bubbleText[currentBubbleBook][currentSpeech].setScale(screenType==="mobile"?(1.1-exx*2)*1.5/1.1:1)
        }



        scaleSprite2(backTiles["message"],
            screenType==="mobile"?1.3:1.3,
            screenType==="mobile"?1.4:0.9)



        let summ =0;

        let okBooks = 0;



        bookToPos = {}

        for (let i=0;i<books.length;i++) {
            if (books[i].state!=="hidden")
            {
                bookToPos[i] = barrelStateIndex[barrelMaxPosition][okBooks];
                okBooks+=1;
            }
            else
            {
                bookToPos[i] = -1;
            }

        }





     //   console.log(barrelPosition);








        for (let i=0;i<books.length;i++) {
            let book = books[i]; //books[booksTextOrder[i]];

            if (!gameStarted)
            {

                book.text["desktop"].setVisible(false);
                book.text["mobile"].setVisible(false);
            }
            else
            {

              //  whiteTextMaterial.opacity =textAlphaK;


                if (book.state!=="hidden" && book.state!=="hiding")
                {

                    book.text["desktop"].setOpacity(textAlphaK);
                    book.text["mobile"].setOpacity(textAlphaK);
                }


                if (screenType==="mobile")
                {



                    if (barrelMaxPosition>=0)
                    {
                        book.text["desktop"].setVisible(false);


                        divPos = (barrelPosition-bookToPos[i])/((barrelMaxPosition+1)/2);

                        while (divPos>1)
                            divPos-=2;

                        while (divPos<-1)
                            divPos+=2;

                        if (book.state!=="hidden" && book.state!=="hiding")
                        {



                            book.text["mobile"].setOpacity(Math.min(textAlphaK,
                                Math.min(1,1-Math.abs(divPos)+0.05*(6-barrelMaxPosition))));

                        }

                        book.text["mobile"].setScale(0.7+0.5*(1-Math.abs(divPos)))

                        //(barrelTopY-hh1)/barrelMaxPosition


                        //console.log(i,bookToPos[i],divPos)




                        book.text["mobile"].moveToPosition(0,(barrelTopY-hh1)/2+
                            divPos*(hh1+300-barrelTopY)/(7/2)*(barrelMaxPosition+1)/7,1000);//barrelMaxPosition+1


                        /*
                        book.text["desktop"].setVisible(false);

                        if (book.state!=="hidden")
                        {

                            summ+= 90*window.innerHeight/1800/k/(okBooks/7)+exx*20; //book.text[screenType].getLineNumber()*
                        }

                        let ko = 0;

                        if (currentBook!==null)
                            if (currentBook===i)
                                ko = 10;

                        book.text["mobile"].moveToPosition(0,-window.innerHeight/2/k+10+summ,1000+ko);

                        book.text["mobile"].setScale(1+0.4*(1-okBooks/7));*/
                    }


                }
                else
                {
                    book.text["mobile"].setVisible(false);

                    let xx = book.textPosition[isTablet][0]*800;
                    let yy = -window.innerHeight/2/k+60+(2-book.textPosition[isTablet][1])*50+isTablet*80

                    book.text["desktop"].setPosition(xx,yy,1000);


                }
                book.text[screenType].setVisible(true);

            }
        }

    }

    else

    {

        if (backTiles["cursor"])
            backTiles["cursor"].visible =false;


        ["message","bubble_desktop_left","bubble_desktop_right","bubble_mobile_left","bubble_mobile_right"].forEach(function (ww) {
            if (backTiles[ww])
                backTiles[ww].visible = false;
        })




    }

}


function onWindowResize() {


    if (window.innerWidth<window.innerHeight)
        screenType = "mobile"
    else
        screenType = "desktop"

    let notScreenType = screenType==="mobile" ? "desktop" : "mobile";


    let k = window.innerWidth/770;

    if (screenType==="desktop")
        k = window.innerHeight/826;


    updateObjectsPositions(true);






    camera.top = window.innerHeight / 2;
    camera.bottom = window.innerHeight / -2;
    camera.left = window.innerWidth / -2;
    camera.right = window.innerWidth / 2;
    camera.updateProjectionMatrix();



    //scaleSprite(backTiles["default"],k)
    playingField.scale.set(k,k,1);
    UIField.scale.set(k,k,1);
    renderer.setSize(window.innerWidth, window.innerHeight);


}


function mouseIsOver(object) {


    if (Array.isArray(object))
        return raycaster.intersectObjects(object).length>0;
    else
        return raycaster.intersectObject(object).length>0;
}





function checkClick(checkText) {

    if (muteButton)
        if (mouseIsOver(muteButton)) {

            if (muteButton.material === textures["sound_on"]) {
                muteButton.material = textures["sound_off"];
                Howler.mute(true);


                analytics.hitGoal("btn_sound_off");

            } else {
                muteButton.material = textures["sound_on"];
                Howler.mute(false);


                analytics.hitGoal("btn_sound_on");
            }

        }



    if (gameLoaded) {



        if (mouseIsOver(startButton)) {
            if (!gameStarted)
            {
                startGame();
            }
        }

        else if (mouseIsOver(endButton)) {

            analytics.hitGoal("btn_product");
            window.open("https://goo.su/1nerv30 ", target = "_blank");


            sounds["music"].fade(defaultVolume, 0, 1500);
        }

        else
        {


            let bookClicked = false;
            for (let i=0;i<books.length;i++)
                if (!bookClicked)
                {




                    if (gameStarted ) {
                        if (mouseIsOver(books[i].getRaycastMeshes()))
                        {


                            if ((books[i].state!=="hidden" && currentBook==null) || (books[i].state==="appeared" && currentBook===i))
                            {

                                selectBook(i);
                                bookClicked = true;
                            }

                        }
                    }




                    let mobileClick = false;
                    if (currentBook!==null && screenType==="mobile")
                    {
                        pp = 0;


                        let closestToMouse = null;
                        let closestDist = null;

                        for (let j=0;j<books.length;j++)
                            if (books[j].state!=="hidden")
                            {




                                if (barrelMaxPosition>=0)
                                {

                                    divPos = (barrelPosition-barrelStateIndex[barrelMaxPosition][pp])/((barrelMaxPosition+1)/2);

                                    while (divPos>1)
                                        divPos-=2;

                                    while (divPos<-1)
                                        divPos+=2;


                                    let uu = Math.round(((barrelMaxPosition+1)/2)*divPos);


                                    if (uu===0 || uu ===-1 || uu ===1)
                                    {

                                        /*
                                        let yy = (barrelTopY-hh1)/2+
                                            divPos*(hh1+300-barrelTopY)/(7/2)*(barrelMaxPosition+1)/7*/




                                        /*
                                        if (i===j && (Math.abs(divPos)<0.001))
                                            mobileClick = true;

                                         */


                                        //let dist = Math.abs(-(0.5-divPos/2)-mouse.y);


                                        let k = window.innerWidth/770;
                                        let hh1 = window.innerHeight/2/k;

                                        let yy = (barrelTopY-hh1)/2+
                                            divPos*(hh1+300-barrelTopY)/(7/2)*(barrelMaxPosition+1)/7;

                                        let dist = Math.abs(yy-hh1*mouse.y);



                                        //if (i===j)
                                        //    console.log(i,dist,divPos,mouse.y,-(0.5-divPos/2))

                                        if (closestToMouse===null || dist<closestDist)
                                        {
                                            closestDist = dist;
                                            closestToMouse = j;
                                        }




                                    }
                                    pp+=1;


                                }



                            }

                        if (closestToMouse===i)
                            mobileClick = true;

                    }


                    if (checkText)
                        if ((currentBook!==null && screenType==="desktop") || mobileClick)
                            if (books[currentBook].state!=="hiding"
                                && books[currentBook].state!=="appearing"
                                && books[i].state!=="hidden")
                                if (mouseIsOver(books[i].getTextRaycastMesh()) || mobileClick)
                                {
                                    if (currentBook===i)
                                    {
                                        books[currentBook].rightGuess();
                                        bookClicked = true;
                                    }
                                    else
                                    {


                                        books[i].wrongTextClick();
                                        books[currentBook].wrongGuess();
                                        bookClicked = true;
                                    }




                                    sounds["click"].play();
                                }

                }
        }





    }
}


function onDocumentTouchEnd(event) {

    if (touching)
    {
        event.preventDefault();


        touching = false;


      //  console.log('check_click_touch_end',touchOffsetY);

        if (Math.abs(barrelPosition-barrelPositionStart)<0.3)
        {


            checkClick(true);
        }

    }
    else
    {


        //console.log('check_click_touch_end');

        checkClick(false);
    }


}

function onDocumentTouchMove(event)
{


    if (touching)
    {

        event.preventDefault();

        mouse.x = (event.touches[0].clientX / window.innerWidth) * 2 - 1;
        mouse.y = -(event.touches[0].clientY / window.innerHeight) * 2 + 1;


        touchOffsetY = mouse.y-touchStartY;




        barrelPosition = barrelPositionStart+touchOffsetY*10;


    }


}

touchReady = false;


touching = false;

function onDocumentTouchStart(event)
{

    //console.log(event,touchReady)

    event.preventDefault();
    if (touchReady) {
        touchReady = false;


        mouse.x = (event.touches[0].clientX / window.innerWidth) * 2 - 1;
        mouse.y = -(event.touches[0].clientY / window.innerHeight) * 2 + 1;


        raycaster.setFromCamera(mouse, camera);

        //console.log(mouse)



        if (screenType === "mobile" )
        {

           // console.log(mouse.y)

            if (mouse.y<-0.1)
            {

                touching = true;
                touchStartY = mouse.y;
                touchOffsetY = 0;
                barrelPositionStart = barrelPosition
            }

        }
        else
        {

        }





        setTimeout(function() {
            touchReady = true;
           // console.log('reset from touch');
        }.bind(this), 500);

    }
}

function onDocumentMouseDown(event) {


    //console.log(event,touchReady)

    event.preventDefault();

    if (touchReady) {
        touchReady = false;


        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;
        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;



        raycaster.setFromCamera(mouse,camera);

        //console.log(mouse)

    //    console.log('check_click_mouse');
        checkClick(true);



        setTimeout(function() {
            touchReady = true;

          //  console.log('reset from mouse');
        }.bind(this), 500);

    }


}

/*
function onDocumentTouchStart(event) {


}

function onDocumentTouchMove(event) {


}

function onDocumentMouseDown(event) {


}*/




function onDocumentMouseMove(event) {


    event.preventDefault();

    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;
    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;

    raycaster.setFromCamera(mouse,camera);

    let overObject = false;

    if (muteButton)
        if (mouseIsOver(muteButton))
            overObject = true;


    if (gameLoaded)
    {





        for (let i=0;i<books.length;i++)
        {
            if (gameStarted)
            {

                if (mouseIsOver(books[i].getRaycastMeshes()))
                {
                    if (books[i].state!=="hidden" && currentBook==null)
                        overObject = true;

                    else if (currentBook===i)
                        overObject = true;
                }


            }

            if (mouseIsOver(books[i].getTextRaycastMesh()) && currentBook!==null)

                if (books[currentBook].state!=="hiding"
                    && books[currentBook].state!=="appearing"
                    && books[i].state!=="hidden")
                    overObject = true;
        }




        if (mouseIsOver(startButton) ||mouseIsOver(endButton) )
            overObject = true;



    }

    if (overObject)
    {
        document.body.style.cursor = "pointer";
    }
    else
    {
        document.body.style.cursor = "default";
    }


}

window.addEventListener( 'resize', onWindowResize, false );
document.body.addEventListener('mousedown', onDocumentMouseDown, false);
document.body.addEventListener('touchstart', onDocumentTouchStart, false);
document.body.addEventListener('touchmove', onDocumentTouchMove, false);
document.body.addEventListener('touchend', onDocumentTouchEnd, false);



document.body.addEventListener('mousemove', onDocumentMouseMove, false);
document.ontouchmove = function(event){ event.preventDefault(); };






let currentBook = null;


gameStep = 0;

eyeAnimation =  [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,1,2,3,4,3,2,1,0,0,0,1,2,3,4,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,1,2,3,4,4,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,]]
loop();

goalSent1 = false;
goalSent3 = false;
goalSent6 = false;

function loop() {
    delta = clock.getDelta() ;



    gameStep+=delta;

    updateObjectsPositions(false);


    if (gameLoaded)
    {




        if (barrelMaxPosition>=0)
        {
            if (!touching)
            {
                closestBarrelPos = Math.round(barrelPosition)

                barrelPosition = (closestBarrelPos+barrelPosition)/2

                // console.log("GOT HERE");
            }


            while (barrelPosition<0)
                barrelPosition+=barrelMaxPosition+1;

            while (barrelPosition>barrelMaxPosition+1)
                barrelPosition-=barrelMaxPosition+1;
            //console.log(barrelPosition)
        }






        let aa = (1-Math.cos(gameStep/Math.PI*20)/2-0.5)*0.9*glowK;
        textures["glow"].visible = glowK!==0 && currentBook===null;
        textures["glow"].opacity = aa;




        let ss = 0;

        for (i=0;i<books.length;i++)
        {



            books[i].update(delta);


            if (books[i].state==="hidden")
                ss+=1;
        }

        if (ss>=1 && !goalSent1)
        {
            analytics.hitGoal("success_1")
            goalSent1 = true;

        }
        if (ss>=3 && !goalSent3)
        {
            analytics.hitGoal("success_3")
            goalSent3 = true;

        }
        if (ss>=6 && !goalSent6)
        {
            analytics.hitGoal("success_6")
            goalSent6 = true;

        }



        if (ss>=7 && !gameEnded)
            endGame();


    }



    /*kk = 2
    for (let i=0;i<books.length;i++)
        if (books[i].meshGroup)
        {
            books[i].meshGroup.rotation.x-=delta*kk;
            books[i].meshGroup.rotation.y-=2*delta*kk;
            books[i].meshGroup.rotation.z+=delta*kk;
        }*/


    renderer.render(scene, camera);
    requestAnimationFrame( loop );


}